{"version":3,"sources":["Componets/form/PasswordInput.js","constants.js","pages/Register.js","axiosApi.js","services.js","pages/Login.js","Componets/Loading.js","Componets/Layout/Continer.js","Componets/Nav.js","Componets/AudioRecorder/AudioVisualizer.js","Componets/AudioRecorder/AudioPlayer.js","pages/Home/RecorderCreator/timer.js","Componets/AudioRecorder/index.js","Componets/AudioRecorder/AudioRecorder.js","Componets/Card.jsx","Componets/ContactSelector.js","pages/Home/RecorderCreator/buttons.jsx","Componets/VideoRecorder.js","pages/Home/Will.js","pages/Home/RecorderCreator/AssistantWrapper.js","Componets/utils.js","pages/Home/RecorderCreator/SaveRecord.js","pages/Home/RecorderCreator/RecorderAssistant.js","pages/Home/RecorderCreator/RecorderCreator.js","pages/Home/RecorderCreator/index.js","Wrappers/AuthWarapper.js","pages/Home/Home.js","pages/Home/index.js","pages/NotFound.js","thems.js","pages/RestoreAccount/NewPassword.js","pages/RestoreAccount/Email.js","pages/RestoreAccount/RestoreAccount.js","pages/LoadingInfo.js","pages/Profile/SimplifyAccordionItem.js","pages/Profile/Password.js","pages/Profile/PersonalInfo.js","pages/Profile/WillSettings.js","pages/Profile/index.js","pages/Profile/Profile.js","pages/ConfirmAuth/ConfirmAuth.js","pages/ConfirmAuth/index.js","pages/Contacts/Contact.jsx","pages/Contacts/NewContact.js","pages/Contacts/index.js","pages/Contacts/Contacts.jsx","pages/Verifyemail.js","pages/ResendEmail.js","Componets/Header.js","Componets/Main.js","Componets/Features.js","Componets/Container.js","Componets/HowItWork.js","pages/index.js","pages/ConfirmExistence.js","pages/Vote.js","pages/Post.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["PasswordInput","React","forwardRef","ref","my","m","rest","useState","show","setShow","size","pr","type","placeholder","width","h","onClick","SITE_NAME","API_HOST_URL","Register","toast","useToast","isLoading","setIsloading","showSuccessMsg","setShowSuccessMsg","nonFieldErrors","setNonFieldErrors","useForm","register","handleSubmit","setError","getValues","errors","formState","handelErrors","key","message","prev","concat","w","status","variant","flexDirection","alignItems","justifyContent","textAlign","height","boxSize","mr","mt","mb","fontSize","maxWidth","p","as","onSubmit","data","axios","post","then","res","catch","error","response","title","description","duration","isClosable","length","id","isInvalid","first_name","required","value","pattern","last_name","email","password1","password","password2","validate","color","RouterLink","to","TokenManager","setAccessToken","token","localStorage","setItem","setRefreshToken","thereIsTokens","getItem","getTokens","access_token","refresh_token","isAccessTokenExpired","jwt_decode","exp","moment","unix","isRefreshTokenExpired","setTokens","areTokensExpired","removeTokens","window","clear","axiosAuth","create","baseURL","timeout","headers","Authorization","accept","interceptors","request","use","a","config","refresh","access","location","tokenManager","Promise","reject","axiosAuthInstance","anonymousInstance","authManager","tokens","logout","isLogedin","isValid","confirmLogin","uid","reSendVerification","anonymousManager","setCredentials","user","JSON","stringify","login","resendEmail","confirmExistence","urlsignature","VoteEligibility","get","vote","vote_value","userService","update","username","phone","number_of_dayes_before_notifying","vote_type","patch","changePassword","old_password","new_password1","new_password2","ContactService","is_safe_guard","url","deleteContact","delete","getList","PostService","file","media_type","contacts","onUploadProgressHanadler","cancelToken","formdata","FormData","filename","append","onUploadProgress","source","createAudio","recipients","Array","isArray","deleteMedia","uploadViaAjax","xhr","XMLHttpRequest","open","onprogress","setRequestHeader","send","Login","props","setIsLoading","isLoadingEmail","setIsLoadingEmail","sEmailSent","SetIsEmailSent","showSendEmail","setShowSendEmail","service","history","useHistory","is_expired","push","includes","disabled","justifyItems","Loading","margin","mx","thickness","Continer","children","px","Nav","bg","py","spacing","label","AiFillHome","RiContactsFill","BsFillPersonFill","AudioVisualizer","audioContext","enabled","connect","canvas","useRef","WIDTH","HEIGHT","analyser","dataArray","bufferLength","canvasCtx","drawVisual","current","clearRect","cancelAnimationFrame","draw","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","y","moveTo","lineTo","stroke","useEffect","createAnalyser","getContext","fftSize","frequencyBinCount","Uint8Array","style","AudioPlayer","audioSrc","recordHandler","onPlay","onStop","isPlaying","setIsPlaying","audioRef","Audio","pause","addEventListener","event","border","position","right","bottom","FaStop","cursor","FaPause","FaReply","currentTime","play","FaPlay","volume","muted","placement","defaultIsOpen","RiRecordCircleFill","useTimer","intervalRef","timeString","setTimeString","timeCount","countSec","timeStringVal","timeToString","time","diffInHrs","diffInMin","Math","floor","mm","diffInSec","ss","formattedMM","toString","padStart","formattedSS","clearInterval","start","val","setInterval","stop","resume","AudioRecorder","extAudioSrcUrl","onChange","recordedChunks","setRecordedChunks","audioSrcUrl","setAudioSrcUrl","audioSource","setAudioSource","capturing","setCapturing","startVisualize","setStartVisualize","audioCtxRef","audioCtx","setAudioCtx","mediaRecorder","startHandler","navigator","mediaDevices","getUserMedia","audio","video","startRecording","stream","currentSource","createMediaStreamSource","MediaRecorder","mimeType","e","URL","createObjectURL","Blob","stopRecordingHandler","useCallback","stopStream","getTracks","forEach","track","AudioContext","webkitAudioContext","revokeObjectURL","blob","state","soundFile","File","handleConnect","destination","top","fontWeight","createMediaElementSource","Card","styles","useStyleConfig","__css","ContactSelector","extSelectedContacts","recorderContext","ids","selectedContacts","setSelectedContacts","contactList","setContactList","customStyles","container","provided","freshContactList","map","selectedItems","filter","opt","display","isMulti","cacheOptions","loadOptions","inputValue","resolve","toLowerCase","filterColors","values","defaultOptions","defaultProps","RecordButton","opacity","borderColor","Controls","isPaused","onResume","onPause","ml","VideoRecorder","extVideoSrcUrl","webcamRef","videoRef","sourceRef","videoPlayerRef","videoURL","setVideoURL","mediaRecorderRef","setIsPaused","isCameraturnOn","setIsCameraturnOn","recordingMode","setRecordingMode","handleDataAvailable","srcObject","src","autoplay","load","controls","playsInline","autoPlay","order","icon","dom","minW","Message","ContacNamesDisplayer","contactsNames","isStillFetching","flex","isTruncated","wordBreak","isLoaded","obj","index","colorScheme","DisplayPreviewContent","mediaType","backgroundColor","AiFillAudio","DisplayMediaContent","onRecordHnadler","onSelectHandler","DisplayUpdateStatus","isUpdatedSuccessfully","loading","DisplayContent","onClose","isOpen","onSaveHandler","disbled","isUpdated","closeOnOverlayClick","DisplayPreview","onCloseDialog","onOpen","dialogIsOpen","cancelRef","onDeletePostHandler","onDialogIsOpen","_hover","MdScreenShare","stopPropagation","IconButton","leastDestructiveRef","Will","onDelete","defaultValues","useDisclosure","setContacts","updatedfile","setUpdatedFile","contactService","setDialogIsOpen","setLoading","setIsUpdated","setIsUpdatedSuccessfully","setIsStillFetching","setTimeRef","handelDisbled","updateValues","Object","keys","clearTimeout","selectdContacts","setTimeout","AssistantWrapper","mainComponent","context","disabledNext","setDisabledNext","isEnded","setIsEnded","showContactsInfo","SetShowContactsInfo","provousEnabled","setProvousEnabled","useContext","RecorderContext","forceRender","newState","is","s","useAsyncReference","childWithProps","setChildWithProps","CreateRecordContext","setSelectedContact","setMediaType","setMediaFile","mediaFile","previous","hasProvous","hasNext","next","onChangeHandeler","name","com","cloneElement","handleProvousEnable","minH","LinkRouter","leftIcon","Cancelsource","CancelToken","SaveRecord","progress","setProgress","uploading","setUploading","isUploadingSuccessed","setIsUploadingSuccessed","addPost","PostsContext","progressEvent","totalLength","lengthComputable","total","target","getResponseHeader","round","loaded","cancel","hasStripe","ChoiceItem","onChoose","boxShadow","rounded","orientation","bgColor","BsBoxArrowInRight","RecorderAssistant","ComponentsQueue","defaultQueue","queue","handelChoose","splice","BsFillCameraVideoFill","createContext","queueReducer","RecorderCreator","WrappedContactSelector","WrappedoctRecorderAssistant","useReducer","currentComponent","queueDetails","queueDetailsDispatch","Provider","bypass","AuthWarapper","auth","Home","isPostsLoading","setIsPostLoading","posts","setPosts","handelDelete","newPosts","newPost","pt","flexWrap","flexBasis","RiMailAddLine","NotFound","theme","extendTheme","initialColorMode","useSystemColorMode","colors","focusBorderColor","components","baseStyle","background","gap","variants","padding","borderRadius","smooth","Input","outline","_focus","Button","solid","colorMode","NewPassword","isSuccessful","setIsSuccessful","useParams","Email","non_field_errors","RestoreAccount","path","useRouteMatch","component","LoadingInfo","SimplifyAccordionItem","shadow","pb","Password","accitem","isEnabled","setIsEnabled","reset","zIndex","PersonalInfo","defualtValues","setDefualtValues","isReadingMode","setIsReadingMode","staleData","setValue","preventDefault","isReadOnly","chengeData","entries","HELPERTEXTS","WillSettings","options","setOptions","optHelperText","setOptHelperText","userRef","control","preOptions","defualtVoteType","parse","opts","split","join","parseInt","shouldValidate","rules","render","field","focusThumbOnChange","max","isDisabled","defaultValue","newValue","filed","handelTypeChange","Profile","allowMultiple","allowToggle","ReSandMessage","onReSend","isSendEmailVerification","isReSendSuccessfuly","ConfirmAuth","setReSendSuccessfuly","setisSendEmailVerification","Contact","onUpdate","isDeleteLoading","setIsDeleteLoading","isOpenPopover","setIsOpenPopover","watch","watchFistName","watchLastName","watchEmail","watchIsSafeguard","closePopover","returnFocusOnClose","closeOnBlur","d","htmlFor","checked","NewContact","onCreate","Contacts","isDataLoading","setIsDataLoading","updateContactHandler","contactListCopy","deleteContactHandler","BsFillPersonPlusFill","newContactList","reverse","Verifyemail","isVerified","setIsVerified","ResendEmail","Header","useBreakpointValue","base","md","lg","sm","xs","Main","bgImage","backgroundSize","bgPosition","bgRepeat","bgAttachment","titledParagraphlist","paragraph","Features","elem","alt","Container","HowCardList","number","HowCard","How","LandingPage","useColorModeValue","Stack","maxW","direction","justify","align","Feedback","ConfirmExistence","isConfirmed","setisConfirmed","req","VoteHolder","setIsOpen","close","isVoteSent","setIsVoteSent","handelVote","Vote","MediaViewer","customAdditionalControls","preload","fluid","Post","setData","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","console"],"mappings":"maAsBeA,EApBOC,IAAMC,YAAW,WAAqBC,GAAS,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,EAAMC,EAAgB,iBAClE,EAAwBL,IAAMM,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACE,eAAC,IAAD,CAAYC,KAAK,KAAKL,EAAGA,EAAGD,GAAIA,EAAID,IAAKA,EAAzC,UACE,cAAC,IAAD,aACEQ,GAAG,SACHC,KAAMJ,EAAO,OAAS,WACtBK,YAAY,kBACRP,IAEN,cAAC,IAAD,CAAmBQ,MAAM,SAAzB,SACE,cAAC,IAAD,CAAQC,EAAE,UAAUL,KAAK,KAAKM,QAXhB,kBAAMP,GAASD,IAW7B,SACGA,EAAO,OAAS,iB,yBChBbS,EAAU,WACXC,EAAa,yBCsQXC,EA5OE,WACf,IAAMC,EAAQC,cACd,EAAkCd,oBAAS,GAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAA4ChB,oBAAS,GAArD,mBAAOiB,EAAP,KAAuBC,EAAvB,KACA,EAA4ClB,mBAAS,IAArD,mBAAOmB,EAAP,KAAuBC,EAAvB,KAEA,EAMIC,cALFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,UACaC,EALf,EAKEC,UAAaD,OAmCTE,EAAe,SAAAF,GAAW,IAAD,WAClBG,GACG,qBAARA,EACFL,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASJ,EAAOG,GAAK,KAGvBT,GAAkB,SAAAW,GAAI,OAAIA,EAAKC,OAAON,EAAOG,QAPjD,IAAK,IAAMA,KAAOH,EAAS,EAAhBG,IAWb,OAAIZ,EAEA,cAAC,IAAD,CAAQT,EAAE,OAAV,SACE,cAAC,IAAD,CAAKyB,EAAE,MAAMzB,EAAE,MAAf,SACE,eAAC,IAAD,CACE0B,OAAO,OACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,OACnC,eAAC,IAAD,CAAkBC,SAAS,KAA3B,wDAEE,uBAFF,2DAUR,cAAC,IAAD,CAAQtC,EAAE,OAAV,SACE,eAAC,IAAD,CAAOuC,EAAE,IAAIjD,EAAE,IAAf,UACE,cAAC,IAAD,CAAQ0C,OAAO,OAAOP,EAAE,OAAxB,SACE,cAAC,IAAD,CAASc,EAAE,IAAIlD,GAAG,IAAImD,GAAG,KAAK7C,KAAK,MAAnC,uBAIF,sBAAM8C,SAAU1B,GA7EL,SAAA2B,GAEflC,GAAa,GACbmC,IACGC,KADH,UACWzC,EADX,8BACqDuC,GAClDG,MAAK,SAAAC,GACeA,EAAXpB,QACM,MACZhB,GAAkB,GAClBF,GAAa,OAGhBuC,OAAM,SAAAC,GAGL,GAFAxC,GAAa,GAETwC,EAAMC,SAAU,CAClB,MAAyBD,EAAMC,SAAvBP,EAAR,EAAQA,KAAR,EAAchB,OACD,KAEXd,EAAkB,IAClBQ,EAAasB,IAEbrC,EAAM,CACJ6C,MAAO,mBACPC,YAAa,iCACbzB,OAAQ,QACR0B,SAAU,IACVC,YAAY,WAkDlB,SACE,eAAC,IAAD,WACG5C,GACC,eAAC,IAAD,CAAOiB,OAAO,UAAUa,EAAE,IAAIlD,GAAG,IAAjC,UACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,wDAEE,uBAFF,uDAMHvB,EAAe2C,OAAS,GACvB,eAAC,IAAD,CAAO5B,OAAO,QAAQa,EAAE,IAAIlD,GAAG,IAA/B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,SACGvB,OAKP,eAAC,IAAD,CAAa4C,GAAG,aAAaC,UAAWtC,EAAOuC,WAA/C,UACE,cAAC,IAAD,yBAEA,cAAC,IAAD,aACE3D,YAAY,aACZT,GAAG,KACCyB,EAAS,aAAc,CACzB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,gCAEXsC,QAAS,CACPD,MAAO,iBACPrC,QAAS,0BAKf,cAAC,IAAD,UACGJ,EAAOuC,YAAc,mCAAGvC,EAAOuC,WAAWnC,eAI/C,eAAC,IAAD,CAAaiC,GAAG,YAAYC,UAAWtC,EAAO2C,UAA9C,UACE,cAAC,IAAD,wBAEA,cAAC,IAAD,aACE/D,YAAY,YACZT,GAAG,KACCyB,EAAS,YAAa,CACxB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,+BAEXsC,QAAS,CACPD,MAAO,iBACPrC,QAAS,0BAKf,cAAC,IAAD,UACGJ,EAAO2C,WAAa,mCAAG3C,EAAO2C,UAAUvC,eAI7C,eAAC,IAAD,CAAaiC,GAAG,QAAQC,UAAWtC,EAAO4C,MAA1C,UACE,cAAC,IAAD,4BAEA,cAAC,IAAD,aACEhE,YAAY,QACZT,GAAG,KACCyB,EAAS,QAAS,CACpB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,mCAEXsC,QAAS,CACPD,MAAO,4CACPrC,QAAS,mCAKf,cAAC,IAAD,UACGJ,EAAO4C,OAAS,mCAAG5C,EAAO4C,MAAMxC,eAIrC,eAAC,IAAD,CAAaiC,GAAG,WAAWC,UAAWtC,EAAO6C,UAA7C,UACE,cAAC,IAAD,uBACA,cAAC,EAAD,yBACEjE,YAAY,WACZT,GAAG,KACCyB,EAAS,YAAa,CACxB4C,SAAU,CAAEC,OAAO,EAAMrC,QAAS,2BAJtC,IAMEkC,UAAWtC,EAAO6C,aAEpB,cAAC,IAAD,2DAGA,cAAC,IAAD,UACG7C,EAAO8C,UAAY9C,EAAO8C,SAAS1C,aAIxC,eAAC,IAAD,CAAaiC,GAAG,YAAYC,UAAWtC,EAAO+C,UAA9C,UACE,cAAC,IAAD,0BACA,cAAC,IAAD,aACEpE,KAAK,WACLC,YAAY,mBACZT,GAAG,KACCyB,EAAS,YAAa,CACxB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,+BAEX4C,SAAU,SAAAP,GAAK,OACbA,IAAU1C,IAAY8C,WACtB,qCAGN,cAAC,IAAD,qCACA,cAAC,IAAD,UACG7C,EAAO+C,WAAa/C,EAAO+C,UAAU3C,aAG1C,cAAC,IAAD,CAAQK,QAAQ,QAAQtC,GAAG,IAAIQ,KAAK,SAASU,UAAWA,EAAxD,qBAGA,cAAC,IAAD,UACE,eAAC,IAAD,CAAMlB,GAAG,IAAT,qCAEE,cAAC,IAAD,CAAM8E,MAAM,WAAW3B,GAAI4B,IAAYC,GAAG,SAA1C,mC,qECtPHC,EAAe,WAC1B,IAAMC,EAAiB,SAAAC,GACrBC,aAAaC,QAAQ,eAAgBF,IAGjCG,EAAkB,SAAAH,GACtBC,aAAaC,QAAQ,gBAAiBF,IAMlCI,EAAgB,WACpB,SACEH,aAAaI,QAAQ,kBACrBJ,aAAaI,QAAQ,mBAMnBC,EAAY,WAChB,IAAIC,EAAe,KACfC,EAAgB,KACpB,GAAIJ,IACF,IACEG,EAAeN,aAAaI,QAAQ,gBACpCG,EAAgBP,aAAaI,QAAQ,iBACrC,MAAO7B,GACP,MAAMA,EAGV,MAAO,CAAE+B,aAAcA,EAAcC,cAAeA,IAEhDC,EAAuB,WAC3B,IAAQF,EAAiBD,IAAjBC,aAER,OAAKH,KACwBM,YAAWH,GACZI,IAAMC,MAASC,QAEvCC,EAAwB,WAC5B,IAAQN,EAAkBF,IAAlBE,cACR,OAAKJ,KACyBM,YAAWF,GACZG,IAAMC,MAASC,QAe9C,MAAO,CACLE,UArDgB,SAAC,GAAqC,IAAnCR,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACjCT,EAAeQ,GACfJ,EAAgBK,IAoDhBT,iBACAI,kBACAG,YACAQ,wBACAL,uBACAO,iBAnBuB,WACvB,OAAIZ,QACEK,MAA0BK,MAkBhCG,aAXmB,WACnBC,OAAOjB,aAAakB,WAclBC,EAAYjD,IAAMkD,OAAO,CAC7BC,QAAS3F,EACT4F,QAAS,QACTC,QAAS,CACPC,cAAe,OAASxB,aAAaI,QAAQ,gBAC7C,eAAgB,mBAChBqB,OAAQ,sBAIZN,EAAUO,aAAaC,QAAQC,IAA/B,+BAAAC,EAAA,MAAmC,WAAMC,GAAN,mBAAAD,EAAA,yDAE7BvB,EAAe,GACfC,EAAgB,GAElBP,aAAaI,QAAQ,iBACrBJ,aAAaI,QAAQ,mBAErBE,EAAeG,YAAWT,aAAaI,QAAQ,iBAC/CG,EAAgBE,YAAWT,aAAaI,QAAQ,qBAKhDE,EAAaI,IAAMC,MAASC,QAC5BL,EAAcG,IAAMC,MAASC,QAfE,gCAkBR1C,IAAMC,KAAN,UAClBzC,EADkB,gCAErB,CACEqG,QAAS/B,aAAaI,QAAQ,kBAEhC,CACEmB,QAAS,CACPC,cAAe,OAASxB,aAAaI,QAAQ,gBAC7C,eAAgB,mBAChBqB,OAAQ,sBA3BiB,OAkBzBjD,EAlByB,OA+B/BwB,aAAaC,QAAQ,eAAgBzB,EAASP,KAAK+D,QACnD1B,EAAeG,YAAWjC,EAASP,KAAK+D,QAhCT,cAoC7B1B,EAAaI,IAAMC,MAASC,SAC9BkB,EAAOP,QAAP,cACE,UAAYvB,aAAaI,QAAQ,iBAMnCE,EAAaI,IAAMC,MAASC,QAC5BL,EAAcG,IAAMC,MAASC,SAE7BZ,aAAakB,QACbD,OAAOgB,SAAW,WAhDa,kBAmD1BH,GAnD0B,4CAAnC,uDAsDAX,EAAUO,aAAalD,SAASoD,KAC9B,SAAApD,GACE,OAAOA,KAET,SAAAD,GACE,GAAIA,EAAMC,SACR,GAA8B,MAA1BD,EAAMC,SAASvB,OAAgB,CACjC,IAAIiF,EAAerC,IACfqC,EAAa/B,eAAiB+B,EAAanB,qBAC7CE,OAAOjB,aAAakB,QACpBD,OAAOgB,SAAW,gBAEe,MAA1B1D,EAAMC,SAASvB,SACxBgE,OAAOgB,SAAW,WAGtB,OAAOE,QAAQC,OAAO7D,EAAMC,aAIzB,IAAM6D,EAAoBlB,EACpBmB,EAAoBpE,IAAMkD,OAAO,CAC5CC,QAAS3F,EACT4F,QAAS,IACTC,QAAS,CACP,eAAgB,mBAChBE,OAAQ,sBCrKCc,EAAc,WACzB,IAAMC,EAAS3C,IAcf,MAAO,CAAE4C,OAbM,aAaEC,UAZC,aAYUC,QAXZ,WAEd,OAAQH,EAAOzB,oBASoB6B,aAPhB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,IAAK9C,EAAY,EAAZA,MAE3B,OAAOsC,EAAkBlE,KAAK,iBAAmB0E,EAAM,IAAM9C,EAAQ,MAKpB+C,mBAHxB,WACzB,OAAOT,EAAkBlE,KAAK,0BAKrB4E,EAAmB,WAC9B,IAAMP,EAAS3C,IA6Bf,MAAO,CACLmD,eAzBqB,SAAA/E,GACrBuE,EAAO1B,UAAU7C,GACjB,IAAQgF,EAAShF,EAATgF,KAERjD,aAAaC,QAAQ,OAAQiD,KAAKC,UAAUF,KAsB5C5G,SA9BY,uCAAG,sBAAAwF,EAAA,0FAAH,qDA+BZuB,MA9BS,uCAAG,+BAAAvB,EAAA,6DAASxC,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,SAAhB,kBACL+C,EAAkBnE,KAAK,sBAAuB,CAAEkB,QAAOE,cADlD,2CAAH,sDA+BT8D,YAtBkB,SAAC,GAAe,IAAbhE,EAAY,EAAZA,MACrB,OAAOiD,EAAkBnE,KAAK,0CAA2C,CACvEkB,WAqBFiE,iBAlBuB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAE1B,OAAOjB,EAAkBnE,KAAK,oBAAqB,CAAEoF,kBAiBrDC,gBAfsB,SAAC,GAAsB,IAApBD,EAAmB,EAAnBA,aACzB,OAAOjB,EAAkBmB,IAAlB,eAA8BF,KAerCG,KAbW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYJ,EAAmB,EAAnBA,aAC1B,OAAOjB,EAAkBnE,KAAK,QAAS,CAAEoF,eAAcI,gBAavDxF,KAXW,SAAC,GAAsB,IAApBoF,EAAmB,EAAnBA,aACd,OAAOjB,EAAkBmB,IAAlB,eAA8BF,OAa5BK,EAAc,WAwCzB,MAAO,CACLnB,OAPa,WAGb,OAFe5C,IACRmB,eACAqB,EAAkBlE,KAAK,0BAK9BsF,IAtBU,WACV,OAAOpB,EAAkBoB,IAAI,wBAsB7BI,OA1Ca,SAAC,GAQT,IAPLC,EAOI,EAPJA,SACAzE,EAMI,EANJA,MACA0E,EAKI,EALJA,MACA3E,EAII,EAJJA,UACAJ,EAGI,EAHJA,WACAgF,EAEI,EAFJA,iCACAC,EACI,EADJA,UAEA,OAAO5B,EAAkB6B,MAAM,sBAAuB,CACpDJ,WACAzE,QACA0E,QACA3E,YACAJ,aACAgF,mCACAC,eA2BFE,eArBkB,uCAAG,iCAAAtC,EAAA,6DACrBuC,EADqB,EACrBA,aACAC,EAFqB,EAErBA,cACAC,EAHqB,EAGrBA,cAHqB,kBAKdjC,EAAkBlE,KAAK,iCAAkC,CAC9DiG,eACAC,gBACAC,mBARmB,2CAAH,wDAwBTC,EAAiB,WAC5B,IAAMnD,EAAM,uCAAG,qCAAAS,EAAA,+DACbiC,SACAzE,EAFa,EAEbA,MACA0E,EAHa,EAGbA,MACA3E,EAJa,EAIbA,UACAJ,EALa,EAKbA,WACAwF,EANa,EAMbA,cANa,kBAQNnC,EAAkBlE,KAAK,WAAY,CACxCkB,QACA0E,QACA3E,YACAJ,aACAwF,mBAbW,2CAAH,sDAgBNX,EAAM,uCAAG,yCAAAhC,EAAA,6DACb/C,EADa,EACbA,GACAgF,EAFa,EAEbA,SACAzE,EAHa,EAGbA,MACAmF,EAJa,EAIbA,cACApF,EALa,EAKbA,UACAJ,EANa,EAMbA,WAEMyF,EARO,kBAQU3F,GARV,kBASNuD,EAAkB6B,MAAMO,EAAK,CAClC3F,KACAgF,WACAzE,QACAmF,gBACApF,YACAJ,gBAfW,2CAAH,sDAkBN0F,EAAa,uCAAG,WAAM5F,GAAN,eAAA+C,EAAA,6DACd4C,EADc,kBACG3F,GADH,kBAEbuD,EAAkBsC,OAAOF,IAFZ,2CAAH,sDAIbhB,EAAG,uCAAG,WAAM3E,GAAN,SAAA+C,EAAA,0FAAH,sDAKT,MAAO,CACL+C,QALW,uCAAG,sBAAA/C,EAAA,+EACPQ,EAAkBoB,IAAI,aADf,2CAAH,qDAMXrC,SACAyC,SACAa,gBACAjB,QAGSoB,GAAc,WACzB,IAAMzD,EAAM,uCAAG,2DAAAS,EAAA,sDAYb,IAAWjF,KAXTkI,EADW,EACXA,KADW,IACLC,kBADK,MACQ,QADR,MACiBC,gBADjB,MAC4B,GAD5B,EAEbC,EAFa,+BAEc,KAC3BC,EAHa,+BAGC,KAERC,EAAW,IAAIC,SACjBC,EAAW,YACI,UAAfN,IACFM,EAAW,cAEbF,EAASG,OAAO,OAAQR,EAAMO,GAC9BF,EAASG,OAAO,aAAcP,GACZC,EAChBG,EAASG,OAAO,aAAcN,EAASpI,IAb5B,yBAgBNyF,EAAkBlE,KACvB,SAEAgH,EACA,CACEI,iBAAkBN,EAClBC,YAAaA,GAAeA,EAAYM,OACxCjE,QAAS,CACP,eAAgB,0BAxBT,4CAAH,sDA6BNkE,EAAW,uCAAG,uDAAA5D,EAAA,sDAWlB,IAAWjF,KAVTkI,EADgB,EAChBA,KADgB,IACVC,kBADU,MACG,QADH,MACYC,gBADZ,MACuB,GADvB,EAElBC,EAFkB,+BAES,KAErBE,EAAW,IAAIC,SACF,UAAfL,EACFI,EAASG,OAAO,OAAQR,EAAM,aAE9BK,EAASG,OAAO,OAAQR,EAAM,cAEhCK,EAASG,OAAO,aAAcP,GACZC,EAChBG,EAASG,OAAO,aAAcN,EAASpI,IAZvB,yBAeXyF,EAAkBlE,KACvB,SAEAgH,EACA,CACEI,iBAAkBN,EAClB1D,QAAS,CACP,eAAgB,0BAtBJ,2CAAH,sDA2BXsC,EAAM,uCAAG,WACb/E,EADa,gCAAA+C,EAAA,sDAgBb,GAdEiD,EAFW,EAEXA,KAFW,IAELC,kBAFK,MAEQ,QAFR,MAEiBW,kBAFjB,MAE8B,GAF9B,EAIPjB,EAJO,gBAIQ3F,GAEfqG,EAAW,IAAIC,SAEjBN,GAAwB,kBAATA,IACE,UAAfC,EACFI,EAASG,OAAO,OAAQR,EAAM,aAE9BK,EAASG,OAAO,OAAQR,EAAM,eAI9Ba,MAAMC,QAAQF,IAAeA,EAAW7G,OAAS,EACnD,IAAWjC,KAAO8I,EAChBP,EAASG,OAAO,aAAcI,EAAW9I,IAlBhC,OAqBbuI,EAASG,OAAO,aAAcP,GArBjB,kBAsBN1C,EAAkB6B,MAAMO,EAAKU,EAAU,CAC5C5D,QAAS,CACP,eAAgB,0BAxBP,2CAAH,wDA4BNsE,EAAW,uCAAG,WAAM/G,GAAN,eAAA+C,EAAA,6DACZ4C,EADY,gBACG3F,GADH,kBAEXuD,EAAkBsC,OAAOF,IAFd,2CAAH,sDAIXhB,EAAG,uCAAG,WAAM3E,GAAN,SAAA+C,EAAA,0FAAH,sDACH+C,EAAO,uCAAG,sBAAA/C,EAAA,+EACPQ,EAAkBoB,IAAI,WADf,2CAAH,qDAkCb,MAAO,CACLgC,cACAK,cAjCiB,uCAAG,yDAAAjE,EAAA,sDAepB,GAdEiD,EADkB,EAClBA,KADkB,IACZC,kBADY,MACC,QADD,MACUW,kBADV,MACuB,GADvB,EAEpBT,EAFoB,+BAEO,KAEvBc,EAAM,IAAIC,eACRb,EAAW,IAAIC,SAEjBN,GAAwB,kBAATA,IACE,UAAfC,EACFI,EAASG,OAAO,OAAQR,EAAM,aAE9BK,EAASG,OAAO,OAAQR,EAAM,eAI9Ba,MAAMC,QAAQF,IAAeA,EAAW7G,OAAS,EACnD,IAAWjC,KAAO8I,EAChBP,EAASG,OAAO,aAAcI,EAAW9I,IAjBzB,OAoBpBuI,EAASG,OAAO,aAAcP,GAC9BgB,EAAIE,KAAK,OAAQ,gCAAgC,GACjDF,EAAIG,WAAajB,EAEjBc,EAAII,iBACF,gBACA,UAAYnG,aAAaI,QAAQ,iBA1Bf,kBA4Bb2F,EAAIK,KAAKjB,IA5BI,4CAAH,sDAkCjBP,UACAxD,SACAyC,SACAgC,cACApC,QCzBW4C,GAjPD5L,IAAMC,YAAW,SAAC4L,EAAO3L,GACrC,MAAkCI,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAA4CxL,oBAAS,GAArD,mBAAOyL,EAAP,KAAuBC,EAAvB,KACA,EAAqC1L,oBAAS,GAA9C,mBAAO2L,EAAP,KAAmBC,EAAnB,KACA,EAA0C5L,oBAAS,GAAnD,mBAAO6L,EAAP,KAAsBC,EAAtB,KACA,EAA4C9L,mBAAS,IAArD,mBAAOmB,EAAP,KAAuBC,EAAvB,KACMP,EAAQC,cACRiL,EAAU/D,IAChB,EAMI3G,cALFC,EADF,EACEA,SACAE,EAFF,EAEEA,SACAC,EAHF,EAGEA,UACAF,EAJF,EAIEA,aACaG,EALf,EAKEC,UAAaD,OAETsK,GAAUC,cAuEVrK,GAAe,SAAAF,GAAW,IAAD,WAClBG,GACG,qBAARA,EACFL,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASJ,EAAOG,GAAK,KAGvBT,GAAkB,SAAAW,GAAI,OAAIA,EAAKC,OAAON,EAAOG,QAPjD,IAAK,IAAMA,KAAOH,EAAS,EAAhBG,IAYb,OACE,mCACE,cAAC,IAAD,CAAQrB,EAAE,OAAOyB,EAAE,OAAOrC,IAAKA,EAA/B,SACG+L,EACC,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQnJ,OAAO,OAAOP,EAAE,OAAxB,SACE,cAAC,IAAD,CAASc,EAAE,IAAIlD,GAAG,KAAKmD,GAAG,KAAK7C,KAAK,MAApC,qBAIF,eAAC,IAAD,CACE+B,OAAO,OACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAS7C,GAAG,MAIZ,cAAC,IAAD,CAAkBiD,SAAS,KAA3B,iHAQN,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQN,OAAO,OAAOP,EAAE,OAAxB,SACE,cAAC,IAAD,CAASc,EAAE,IAAIlD,GAAG,KAAKmD,GAAG,KAAK7C,KAAK,MAApC,qBAIF,+BACE,eAAC,IAAD,WACGgB,EAAe2C,OAAS,GACvB,eAAC,IAAD,CAAO5B,OAAO,QAAQa,EAAE,IAAIlD,GAAG,IAA/B,UACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,UACGvB,EACD,cAAC,IAAD,IACC0K,GACC,mCACE,cAAC,IAAD,CACE1L,KAAK,KACLgC,QAAQ,OACR1B,QAxIR,WAClBiL,GAAkB,GAClBK,EACGzD,YAAY7G,KACZ4B,MAAK,SAAAC,GACJsI,GAAe,MAEhBrI,OAAM,SAAAC,GACLoI,GAAe,GACIpI,EAAMC,SAAjBvB,QACM,KACZrB,EAAM,CACJ6C,MAAO,QACPC,YACE,wEACFzB,OAAQ,QACR0B,SAAU,IACVC,YAAY,QAwHM9C,UAAW0K,EAJb,6CAcV,eAAC,IAAD,CAAa1H,GAAG,QAAQC,UAAWtC,EAAO4C,MAA1C,UACE,cAAC,IAAD,4BAEA,cAAC,IAAD,aACEhE,YAAY,QACZT,GAAG,KACCyB,EAAS,QAAS,CACpB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,mCAEXsC,QAAS,CACPD,MAAO,4CACPrC,QAAS,mCAKf,cAAC,IAAD,UACGJ,EAAO4C,OAAS5C,EAAO4C,MAAMxC,aAIlC,eAAC,IAAD,CAAaiC,GAAG,WAAWC,UAAWtC,EAAO8C,SAA7C,UACE,cAAC,IAAD,uBACA,cAAC,EAAD,yBACElE,YAAY,WACZT,GAAG,KACCyB,EAAS,WAAY,CACvB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,2BANf,IASEkC,UAAWtC,EAAO8C,YAGpB,cAAC,IAAD,UACG9C,EAAO8C,UAAY9C,EAAO8C,SAAS1C,aAGxC,cAAC,IAAD,CACEK,QAAQ,QACRtC,GAAG,IACHY,QAASc,GAxKV,SAAA2B,GACfsI,GAAa,GACbO,EACG1D,MAAMnF,GACNG,MAAK,SAAAC,GACJ,IACEkI,GAAa,GACb,IAAQtI,EAASI,EAATJ,KACR6I,EAAQ9D,eAAe/E,GAEnBA,EAAKgF,KAAKgE,aAAuC,IAAzBhJ,EAAKgF,KAAKgE,WACpCN,GAAe,GAEfI,GAAQG,KAAK,SAEf,MAAO3I,QAEVD,OAAM,SAAAC,GACL,IACEgI,GAAa,GACbI,GAAe,GACf,MAAyBpI,EAAMC,SAAvBP,EAAR,EAAQA,KAAMhB,EAAd,EAAcA,OACd,GAAe,MAAXA,EAUF,OATArB,EAAM,CACJ6C,MAAO,QACPC,YACE,uEACFzB,OAAQ,QACR0B,SAAU,IACVC,YAAY,SAEdzC,EAAkB,IAGhB8B,EAAI,kBACFA,EAAI,iBAAqB,GAAGkJ,SAAS,kBACvCN,GAAiB,GAErB1K,EAAkB,IACH,MAAXc,GACFN,GAAasB,GAEf,MAAOM,WA+HG6I,SAAUtL,EACVA,UAAWA,EALb,oBASA,cAAC,IAAD,UACE,cAAC,IAAD,CAAMlB,GAAG,IAAT,SACE,cAAC,IAAD,CACE8E,MAAM,WACN3B,GAAI4B,IACJC,GAAG,mBAHL,4CASJ,eAAC,IAAD,CAAMvC,eAAe,SAASgK,aAAa,SAA3C,UACE,cAAC,IAAD,IACA,cAAC,IAAD,OAEF,cAAC,IAAD,CAAQnK,QAAQ,UAAUtC,GAAG,IAAIY,QA/I1B,kBAAMuL,GAAQG,KAAK,cA+I1B,2C,mEC9OHI,GAbC,SAAC,GAAiB,IAAfzK,EAAc,EAAdA,QACjB,OACE,cAAC,IAAD,CAAS0K,OAAO,OAAOhM,EAAE,OAAzB,SACE,eAAC,IAAD,CAAQA,EAAE,OAAV,UACE,cAAC,IAAD,CAASiM,GAAG,IAAI1J,EAAE,IAAIC,GAAG,KAAzB,SACGlB,IAEH,cAAC,KAAD,CAAS4K,UAAU,MAAMvM,KAAK,a,gBCGvBwM,GATE,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,SAAY7M,EAAU,kBACrC,OACI,cAAC,IAAD,yBAAM8M,GAAI,CAAC,EAAE,EAAE,GAAG,GAAG,KAAU9M,GAA/B,aACK6M,M,sCC0DEE,GA/CH,WACV,OACE,cAAC,IAAD,CAAK7K,EAAE,OAAQ8K,GAAG,WAAWpI,MAAM,QAAQqI,GAAG,IAA9C,SACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAM/K,EAAE,OAAR,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASe,GAAG,KAAK7C,KAAK,MAAtB,oBAEF,cAAC,KAAD,IAEA,eAAC,KAAD,CAAM8M,QAAS,CAAC,EAAG,EAAG,IAAtB,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAASjK,GAAG,KAAZ,SACE,cAAC,KAAD,CAASkK,MAAM,YAAY,aAAW,YAAtC,SACE,cAAC,IAAD,CAAMlK,GAAI4B,IAAYC,GAAG,QAAzB,SACE,cAAC,KAAD,CAAM7B,GAAImK,eAKlB,cAAC,KAAD,UACE,cAAC,IAAD,CAASnK,GAAG,KAAZ,SACE,cAAC,KAAD,CAASkK,MAAM,eAAe,aAAW,eAAzC,SACE,cAAC,IAAD,CAAMlK,GAAI4B,IAAYC,GAAG,YAAzB,SACE,cAAC,KAAD,CAAM7B,GAAIoK,eAKlB,cAAC,KAAD,UACE,cAAC,IAAD,CAASpK,GAAG,KAAZ,SACE,cAAC,KAAD,CAASkK,MAAM,SAAS,aAAW,eAAnC,SACE,cAAC,IAAD,CAAMlK,GAAI4B,IAAYC,GAAG,WAAzB,SACE,cAAC,KAAD,CAAM7B,GAAIqK,qBAQtB,cAAC,KAAD,U,mGCsCOC,GA7FS,SAAC,GAMlB,IALLC,EAKI,EALJA,aACA9C,EAII,EAJJA,OACA+C,EAGI,EAHJA,QACAC,EAEI,EAFJA,QAGMC,GADF,kBACWC,oBACTC,EAAQD,mBACRE,EAASF,mBAETG,EAAWH,mBACXI,EAAYJ,mBACZK,EAAeL,mBACfM,EAAYN,mBAEZO,EAAaP,mBAEbxH,EAAQ,WACR8H,EAAUE,SACZF,EAAUE,QAAQC,UAAU,EAAG,EAAGR,EAAMO,QAASN,EAAOM,SAC1DjI,OAAOmI,qBAAqBH,EAAWC,UAenCG,EAAO,SAAPA,IACJJ,EAAWC,QAAUI,sBAAsBD,GAC3CR,EAASK,QAAQK,sBAAsBT,EAAUI,SACjDF,EAAUE,QAAQM,UAAY,OAC9BR,EAAUE,QAAQO,SAAS,EAAG,EAAGd,EAAMO,QAASN,EAAOM,SACvDF,EAAUE,QAAQQ,UAAY,EAC9BV,EAAUE,QAAQS,YAAc,eAChCX,EAAUE,QAAQU,YAGlB,IAFA,IAAMC,EAA8B,EAAhBlB,EAAMO,QAAiBH,EAAaG,QACpDY,EAAI,EACCC,EAAI,EAAGA,EAAIhB,EAAaG,QAASa,IAAK,CAC7C,IACMC,EADIlB,EAAUI,QAAQa,GAAK,IAClBnB,EAAOM,QAAW,EAEvB,IAANa,EACFf,EAAUE,QAAQe,OAAOH,EAAGE,GAE5BhB,EAAUE,QAAQgB,OAAOJ,EAAGE,GAG9BF,GAAKD,EAEPb,EAAUE,QAAQgB,OAAOzB,EAAOS,QAAQ5N,MAAOmN,EAAOS,QAAQ3L,OAAS,GACvEyL,EAAUE,QAAQiB,UA2BpB,OAzBAC,qBAAU,WACJ9B,IACFO,EAASK,QAAUZ,EAAaY,QAAQmB,iBACxC1B,EAAMO,QAAUT,EAAOS,QAAQ5N,MAC/BsN,EAAOM,QAAUT,EAAOS,QAAQ3L,OAChCyL,EAAUE,QAAUT,EAAOS,QAAQoB,WAAW,SAE/C,CAAChC,IACJ8B,qBAAU,WACJ5E,GAAU+C,EA7CVD,GAAgBA,EAAaY,UAC/B1D,EAAOgD,QAAQK,EAASK,SACpBV,GAASK,EAASK,QAAQV,QAAQA,GACtCK,EAASK,QAAQqB,QAAU,KAC3BxB,EAAaG,QAAUL,EAASK,QAAQsB,kBACxC1B,EAAUI,QAAU,IAAIuB,WAAW1B,EAAaG,SAChDF,EAAUE,QAAQC,UAAU,EAAG,EAAGR,EAAMO,QAASN,EAAOM,SAExDG,KAwCIL,EAAUE,SAAShI,MAGxB,CAACsE,EAAQ+C,IAEZ6B,qBAAU,WACR,OAAO,WAELlJ,IACAD,OAAOmI,qBAAqBH,EAAWC,YAExC,IAGD,cAAC,IAAD,CAAK3N,EAAE,OAAP,SACE,wBAAQZ,IAAK8N,EAAQiC,MAAO,CAAEnN,OAAQ,OAAQjC,MAAO,a,SCsE5CqP,GA5JK,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAEtD,EAAkChQ,oBAAS,GAA3C,mBAAOiQ,EAAP,KAAkBC,EAAlB,KAEMC,EAAWxC,iBAAO,IAAIyC,MAAMP,IA0ElC,OAvBAR,qBAAU,WACRc,EAAShC,QAAQkC,QAEbR,IACFM,EAAShC,QAAU,IAAIiC,MAAMP,GAE7BM,EAAShC,QAAQmC,iBAAiB,SAAS,SAAAC,GACzCL,GAAa,GACTF,GACFA,UAKL,CAACH,IAEJR,qBAAU,WAER,OAAO,WACLc,EAAShC,QAAQkC,WAGlB,IAED,cAAC,IAAD,CAAKG,OAAO,MAAMzN,EAAE,IAAI0N,SAAS,WAAjC,SACE,cAAC,IAAD,CACEnO,eAAe,eACf/B,MAAM,MACNkQ,SAAS,WACTC,MAAM,MACNC,OAAO,MALT,SAOGV,EACC,qCACE,cAAC,KAAD,CAAS/C,MAAM,gBAAgB,aAAW,gBAA1C,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CACElK,GAAI4N,KACJnO,QAAS,GACThC,QA5EG,WACjB0P,EAAShC,QAAQkC,QACjBH,GAAa,GACbC,EAAShC,QAAU,IAAIiC,MAAMP,GAE7BM,EAAShC,QAAQmC,iBAAiB,SAAS,SAAAC,GACzCL,GAAa,GACTF,GACFA,QAqEUa,OAAO,gBAIb,cAAC,KAAD,CAAS3D,MAAM,iBAAiB,aAAW,iBAA3C,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CACElK,GAAI8N,KACJrO,QAAS,GACThC,QAxDI,WAClB0P,EAAShC,QAAQkC,QACjBH,GAAa,GACTF,GACFA,KAqDYa,OAAO,gBAIb,cAAC,KAAD,CAAS3D,MAAM,kBAAkB,aAAW,kBAA5C,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CACElK,GAAI+N,KACJtO,QAAS,GACThC,QApFK,WACnB0P,EAAShC,QAAQkC,QAEjBF,EAAShC,QAAU,IAAIiC,MAAMP,GAE7BM,EAAShC,QAAQmC,iBAAiB,SAAS,SAAAC,GACzCL,GAAa,GACTF,GACFA,OAGJG,EAAShC,QAAQ6C,YAAc,EAC/Bb,EAAShC,QAAQ8C,OACjBf,GAAa,GACTH,GACFA,EAAOI,EAAShC,UAsEJ0C,OAAO,mBAMf,qCACE,cAAC,KAAD,CAAS3D,MAAM,gBAAgB,aAAW,gBAA1C,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CACElK,GAAIkO,KACJzO,QAAS,GACThC,QAvHG,WACjB0P,EAAShC,QAAQgD,OAAS,EAC1BhB,EAAShC,QAAQ8C,OAEjBd,EAAShC,QAAQiD,OAAQ,EACrBrB,GACFA,EAAOI,EAAShC,SAElB+B,GAAa,IAgHCW,OAAO,gBAKb,cAAC,KAAD,CACE3D,MAAM,2BACN,aAAW,kBACXmE,UAAU,OACVC,eAAa,EAJf,SAME,cAAC,IAAD,UACE,cAAC,KAAD,CACEtO,GAAIuO,KACJ9O,QAAS,GACThC,QAASqP,EACTe,OAAO,UACPlM,MAAM,wBCrJX6M,GAAW,WACtB,IAAMC,EAAc9D,iBAAO,GAG3B,EAAoC3N,mBAAS,SAA7C,mBAAO0R,EAAP,KAAmBC,EAAnB,KACMC,EAAYjE,iBAAO,GAEnBkE,EAAW,WACfD,EAAUzD,SAAW,IACrB,IAAI2D,EAAgBC,EAAaH,EAAUzD,SAC3CwD,EAAcG,IAGVC,EAAe,SAAAC,GACnB,IAAIC,EAAYD,EAAO,KAGnBE,EAA+B,IAAlBD,EAFRE,KAAKC,MAAMH,IAGhBI,EAAKF,KAAKC,MAAMF,GAEhBI,EAA+B,IAAlBJ,EAAYG,GACzBE,EAAKJ,KAAKC,MAAME,GAChBE,EAAcH,EAAGI,WAAWC,SAAS,EAAG,KACxCC,EAAcJ,EAAGE,WAAWC,SAAS,EAAG,KAE5C,MAAM,GAAN,OAAUF,EAAV,YAAyBG,IA4B3B,OALAtD,qBAAU,WACR,OAAO,WACLuD,cAAcnB,EAAYtD,YAE3B,IACI,CAAEuD,aAAYmB,MA1BP,WAEZD,cAAcnB,EAAYtD,SAE1B,IAAM2E,EAAMC,YAAYlB,EAAU,KAClCJ,EAAYtD,QAAU2E,GAqBIE,KAVf,WACXJ,cAAcnB,EAAYtD,SAC1ByD,EAAUzD,SAAW,IACrBwD,EAAc,UAOkBtB,MAlBpB,WACZuC,cAAcnB,EAAYtD,UAiBa8E,OAf1B,WACbL,cAAcnB,EAAYtD,SAC1B,IAAM2E,EAAMC,YAAYlB,EAAU,KAClCJ,EAAYtD,QAAU2E,KCxCXI,GCMO,SAAC,GAAyC,IAAD,IAAtCC,sBAAsC,MAArB,KAAqB,EAAfC,EAAe,EAAfA,SAC9C,EAA4CpT,mBAAS,IAArD,mBAAOqT,EAAP,KAAuBC,EAAvB,KACA,EAAsCtT,mBAAS,MAA/C,mBAAOuT,EAAP,KAAoBC,EAApB,KACA,EAAsCxT,mBAAS,MAA/C,mBAAOyT,EAAP,KAAoBC,EAApB,KACA,EAAkC1T,oBAAS,GAA3C,mBAAO2T,EAAP,KAAkBC,EAAlB,KACA,EAA4C5T,oBAAS,GAArD,mBAAO6T,EAAP,KAAuBC,EAAvB,KACMC,EAAcpG,mBACpB,EAAgC3N,mBAAS,MAAzC,mBAAOgU,EAAP,KAAiBC,EAAjB,KACMC,EAAgBvG,mBACtB,EAAmC6D,KAA3BE,EAAR,EAAQA,WAAYmB,EAApB,EAAoBA,MAAOG,EAA3B,EAA2BA,KACrBvI,EAASkD,mBACTwG,EAAe,WACnBC,UAAUC,aACPC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACnCnR,KAAKoR,IAcJA,EAAiB,SAAAC,GACrB,IACMC,EAAgBZ,EAAY5F,QAAQyG,wBAAwBF,GAClEjK,EAAO0D,QAAUwG,EACjB9B,IACAa,EAAeiB,GAEfT,EAAc/F,QAAU,IAAI0G,cAAcH,EAN1B,CAAEI,SAAU,eAQ5BZ,EAAc/F,QAAQmC,iBAAiB,iBAAiB,SAAUyE,GAC5DA,EAAE7R,KAAK/C,KAAO,GAAGmT,GAAkB,SAAAvR,GAAI,MAAI,CAACgT,EAAE7R,YAEpDgR,EAAc/F,QAAQmC,iBAAiB,QAAQ,WAC7C,IAAM5G,EAAMsL,IAAIC,gBAAgB,IAAIC,KAAK7B,GAAiB,aAC1DG,EAAe9J,MAEjBkK,GAAa,GACbE,GAAkB,GAClBI,EAAc/F,QAAQ0E,SAElBsC,EAAuBC,uBAAY,WACnClB,EAAc/F,UAChB+F,EAAc/F,QAAQ6E,OACtBqC,EAAWnB,EAAc/F,QAAQuG,SAEnCd,GAAa,GACbE,GAAkB,GAClBd,MAEC,CAACK,IACEgC,EAAa,SAAAX,GACjBA,EAAOY,YAAYC,SAAQ,SAAAC,GAAK,OAAIA,EAAMxC,WAE5C3D,qBAAU,WACR0E,EAAY5F,QAAU,IAAKjI,OAAOuP,cAChCvP,OAAOwP,oBACTzB,EAAYF,KACX,IACH1E,qBAAU,WAKR,OAJI8D,GACFK,EAAeL,GAGV,WACDe,EAAc/F,UAChBgH,IACArB,GAAkB,KAEfX,GAAkBI,GAAayB,IAAIW,gBAAgBpC,MAGzD,CAACJ,IACJ9D,qBAAU,WACR,GAAIgE,EAAevP,OAAS,EAAG,CAC7B,IAAM8R,EAAO,IAAIV,KAAK7B,GAChB3J,EAAMsL,IAAIC,gBAAgBW,GAEhC,GADApC,EAAe9J,GACXwK,EAAc/F,SACoB,aAAhC+F,EAAc/F,QAAQ0H,MAAsB,CAC9C,IAAMC,EAAY,IAAIC,KAAK,CAACH,GAAO,YAAa,CAC9CvV,KAAM,eAEJ+S,GAAUA,EAAS0C,OAK5B,CAACzC,IACJ,IAAM2C,EACGjC,EAAY5F,UAAYwF,EAC3BI,EAAY5F,QAAQ8H,YACpB,KAEN,OACE,cAAC,IAAD,CAAKzV,EAAE,OAAP,SACE,eAAC,IAAD,CAAKgQ,OAAO,MAAMvO,EAAE,OAApB,UACE,cAAC,GAAD,CACEwI,OAAQgJ,EACRjG,QAASqG,EACTtG,aAAcyG,EACdvG,QAASuI,IAEX,cAAC,IAAD,CAAKvF,SAAS,WAAWyF,IAAI,KAAKxF,MAAM,KAAxC,SACE,cAAC,IAAD,CAAM7N,SAAS,KAAKsT,WAAW,OAA/B,SACGzE,MAIJiC,EACC,cAAC,IAAD,CAAMrR,eAAe,eAAeS,EAAE,IAAtC,SACE,cAAC,KAAD,CACEmK,MAAM,0BACN,aAAW,0BAFb,SAIE,cAAC,IAAD,UACE,cAAC,KAAD,CACElK,GAAI4N,KACJnO,QAAS,GACThC,QAAS0U,EACTtE,OAAO,kBAMf,mCACG0C,EACC,cAAC,GAAD,CACE1D,SAAU0D,EACVzD,cAAeqE,EACfpE,OAzHQ,SAAAwE,GACpB,IAAMI,EAAgBZ,EAAY5F,QAAQiI,yBAAyB7B,GACnE9J,EAAO0D,QAAUwG,EACjBjB,EAAeiB,GACfb,GAAkB,GAClBjB,KAqHY7C,OAnHQ,WACpB8D,GAAkB,GAClBd,OAoHU,cAAC,IAAD,CAAM1Q,eAAe,eAAeS,EAAE,IAAtC,SACE,cAAC,KAAD,CACEmK,MAAM,2BACN,aAAW,2BACXmE,UAAU,OACVC,eAAa,EAJf,SAME,cAAC,IAAD,UACE,cAAC,KAAD,CACEtO,GAAIuO,KACJ9O,QAAS,GACThC,QAAS0T,EACTtD,OAAO,UACPlM,MAAM,0B,mCC3Jb0R,GANF,SAAA9K,GACX,IAAQpJ,EAA+BoJ,EAA/BpJ,QAASyK,EAAsBrB,EAAtBqB,SAAa7M,EAA9B,YAAuCwL,EAAvC,IACM+K,EAASC,aAAe,OAAQ,CAAEpU,YACxC,OAAO,cAAC,IAAD,yBAAKqU,MAAOF,GAAYvW,GAAxB,aAAgC6M,M,wECAnC6J,GAAkB,SAAC,GAMlB,IALLC,EAKI,EALJA,oBAEAtD,GAGI,EAJJuD,gBAII,EAHJvD,UAMA,GAHI,EAFJwD,IAEI,kBAG4C5W,mBAAS,KAAzD,mBAAO6W,EAAP,KAAyBC,EAAzB,KACA,EAAsC9W,mBAAS,IAA/C,mBAAO+W,EAAP,KAAoBC,EAApB,KACMjL,EAAUvC,IAChB,EAAkCxJ,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KAKMyL,EAAe,CACnBC,UAAW,SAACC,EAAUtB,GAAX,mBAAC,eACPsB,GADM,IAGT5W,MAAO,WAqCX,OAzBA8O,qBAAU,WACR,IAAI+H,EAAmB,GACvB5L,GAAa,GACbO,EACGlC,UACAxG,MAAK,SAAAC,GACJ,IAAMJ,EAAOI,EAAIJ,KAKjB,GAJAkU,EAAmBlU,EAAKmU,KAAI,SAAAlT,GAC1B,MAAO,CAAEA,MAAOA,EAAMJ,GAAImJ,MAAO/I,EAAMG,UAEzC0S,EAAeI,GACXV,EAAoB5S,OAAS,EAAG,CAClC,IAAMwT,EAAgBF,EAAiBG,QAAO,SAAAC,GAAG,OAC/Cd,EAAoBtK,SAASoL,EAAIrT,UAEnC2S,EAAoBQ,GAEtB9L,GAAa,MAEdjI,OAAM,SAAAC,SAKR,CAACkT,IAEF,eAAC,IAAD,CAAKlW,EAAE,OAAOyB,EAAE,OAAhB,UACE,cAAC,IAAD,CAAS9B,KAAK,KAAKN,GAAG,IAAtB,uBAGA,cAAC,IAAD,CAAK4X,QAAQ,OAAOrV,cAAc,SAASH,EAAE,OAA7C,SACE,cAAC,KAAD,CACEyV,SAAO,EACP3W,UAAWA,EACX4W,cAAY,EACZxT,MAAO0S,EACPe,YAxCe,SAAAC,GAAU,OAC/B,IAAIzQ,SAAQ,SAAA0Q,GACVA,EAPiB,SAAAD,GACnB,OAAOd,EAAYQ,QAAO,SAAAvI,GAAC,OACzBA,EAAE9B,MAAM6K,cAAc3L,SAASyL,EAAWE,kBAKlCC,CAAaH,QAuCjBzE,SAzDa,SAAA6E,GACf7E,GAAUA,EAAS6E,GACvBnB,EAAoBmB,IAwDdC,eAAgBnB,EAChBT,OAAQW,UASlBR,GAAgB0B,aAAe,CAC7BzB,oBAAqB,IAERD,UCxFF2B,GAAe,SAAA7M,GAC1B,OACE,cAAC,KAAD,CAAS2B,MAAM,2BAA2BmE,UAAU,OAAOC,eAAa,EAAxE,SACE,cAAC,IAAD,CACEnR,KAAK,OACL4M,GAAG,QACHsL,QAAQ,MACRxH,OAAO,UACPJ,SAAS,WACTE,OAAO,MACPD,MAAM,MACN3N,EAAE,IACFyN,OAAO,MACP8H,YAAY,QAVd,SAYE,cAAC,IAAD,aAAQnY,KAAK,OAAO4M,GAAG,SAASsL,QAAQ,IAAI1T,MAAM,SAAY4G,S,UCKhEgN,I,OAAW,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,SAAU9G,EAA4C,EAA5CA,WAAY+G,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,QAAS1I,EAAa,EAAbA,OAC3D,OACE,qCACE,cAAC,IAAD,CAASS,SAAS,WAAWC,MAAM,KAAKwF,IAAI,MAAM/V,KAAK,KAAKwE,MAAM,QAAlE,SACG+M,IAEH,eAAC,IAAD,CACEjB,SAAS,WACTE,OAAO,MACPD,MAAM,MACN+G,QAAQ,OACRnV,eAAe,gBACfL,EAAE,MANJ,UAQE,cAAC,KAAD,CAASiL,MAAM,0BAA0BmE,UAAU,OAAOC,eAAa,EAAvE,SACE,cAAC,IAAD,CACEnR,KAAK,OACL4M,GAAG,QACHsL,QAAQ,MACRxH,OAAO,UACP9N,EAAE,IACFyN,OAAO,MACP8H,YAAY,QACZ7X,QAASuP,EARX,SAUE,cAAC,IAAD,CAAQ7P,KAAK,OAAO4M,GAAG,SAASsL,QAAQ,UAG3CG,EACC,mCACE,cAAC,KAAD,CAAStL,MAAM,kBAAkB,aAAW,kBAA5C,SACE,cAAC,IAAD,CACE/M,KAAK,OACL4M,GAAG,QACHsL,QAAQ,MACRxH,OAAO,UACP9N,EAAE,IACFyN,OAAO,MACP8H,YAAY,QACZ7X,QAASgY,EARX,SAUE,cAAC,KAAD,CAAME,GAAG,IAAI3V,GAAIkO,KAAQzO,QAAS,GAAIoO,OAAO,kBAKnD,cAAC,KAAD,CAAS3D,MAAM,iBAAiB,aAAW,iBAA3C,SACE,cAAC,IAAD,CACE/M,KAAK,OACL4M,GAAG,QACHsL,QAAQ,MACRxH,OAAO,UACP9N,EAAE,IACFyN,OAAO,MACP8H,YAAY,QACZ7X,QAASiY,EARX,SAUE,cAAC,KAAD,CAAM1V,GAAI8N,KAASrO,QAAS,GAAIoO,OAAO,wBAkNtC+H,GAzMO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,eAAgBzF,EAAe,EAAfA,SACjC0F,EAAYnL,iBAAO,MACnBoL,EAAWpL,iBAAO,MAClBqL,EAAYrL,iBAAO,MACnBsL,EAAiBtL,iBAAO,MAC9B,EAAgC3N,mBAAS,MAAzC,mBAAOkZ,EAAP,KAAiBC,EAAjB,KACMC,EAAmBzL,iBAAO,MAChC,EAAkC3N,oBAAS,GAA3C,mBAAO2T,EAAP,KAAkBC,EAAlB,KACA,EAAgC5T,oBAAS,GAAzC,mBAAOwY,EAAP,KAAiBa,EAAjB,KACA,EAA4CrZ,oBAAS,GAArD,mBAAOsZ,EAAP,KAAuBC,EAAvB,KACA,EAA4CvZ,mBAAS,IAArD,mBAAOqT,EAAP,KAAuBC,EAAvB,KACA,EAA0CtT,oBAAS,GAAnD,mBAAOwZ,EAAP,KAAsBC,EAAtB,KACA,EAAmDjI,KAA3CE,EAAR,EAAQA,WAAYmB,EAApB,EAAoBA,MAAOG,EAA3B,EAA2BA,KAAM3C,EAAjC,EAAiCA,MAAO4C,EAAxC,EAAwCA,OAClCpS,EAAQC,cAERuU,EAAa,SAAAX,GACjBA,EAAOY,YAAYC,SAAQ,SAAAC,GAAK,OAAIA,EAAMxC,WAEtC0G,EAAsB,SAAC,GAAc,IAAZxW,EAAW,EAAXA,KACzBA,EAAK/C,KAAO,GACdmT,GAAkB,SAAAvR,GAAI,OAAIA,EAAKC,OAAOkB,OA4H1C,OAlCAmM,qBAAU,WACJ0J,EAAS5K,UACPjI,OAAO8O,IACT+D,EAAS5K,QAAQwL,UAAYb,EAAU3K,QAEvC4K,EAAS5K,QAAQyL,IAAMd,EAAU3K,QAEnC4K,EAAS5K,QAAQiD,OAAQ,KAE1B,CAACkI,IACJjK,qBAAU,WAOR,OANIwJ,IACFI,EAAe9K,QAAQ0L,UAAW,EAClCZ,EAAe9K,QAAQyL,IAAMf,EAC7BI,EAAe9K,QAAQ2L,OACvBb,EAAe9K,QAAQ4L,UAAW,GAE7B,WACDjB,EAAU3K,SAASkH,EAAWyD,EAAU3K,SACxC+K,GAAUlE,IAAIW,gBAAgBuD,MAGnC,CAACL,IACJxJ,qBAAU,cAUP,CAACgE,IAGF,aADA,CACC,IAAD,CAAK5C,SAAS,WAAd,SACGoI,IAAmBW,EAClB,eAAC,UAAD,CACE5Z,IAAKqZ,EACLe,aAAW,EACXC,UAAQ,EACR1Z,MAAM,MACNiC,OAAO,OALT,UAOE,wBAAQoX,IAAKf,EAAgBjZ,IAAKoZ,IAClC,cAAC,cAAD,UACE,cAAC,KAAD,CACEkB,MAAO,EACPC,KAAM,cAAC,KAAD,IACN1Z,QAAS,kBAAMgZ,GAAiB,IAChC,aAAW,kBACX9J,MAAO,CAAE9M,SAAU,QACnBA,SAAS,cAKf,qCACGyW,EACC,uBAAO1Z,IAlEG,SAAAwa,GACdA,IACFrB,EAAS5K,QAAUiM,IAgEY7Z,MAAM,MAAM0Z,UAAQ,EAACzX,OAAO,SAErD,cAAC,IAAD,CAAQuK,GAAG,QAAQvM,EAAE,KAAK6Z,KAAK,KAA/B,SACE,cAAC,IAAD,CAAQlY,QAAQ,UAAU1B,QAnHjB,WACnB2T,UAAUC,aACPC,aAAa,CAAEE,OAAO,EAAMD,OAAO,IACnClR,MAAK,SAAAqR,GACJoE,EAAU3K,QAAUuG,EAChBqE,EAAS5K,UACX4K,EAAS5K,QAAQwL,UAAYb,EAAU3K,QAEvC4K,EAAS5K,QAAQiD,OAAQ,GAE3BmI,GAAkB,MAEnBhW,OAAM,SAAAC,GACL6R,EAAWyD,EAAU3K,SACrBtN,EAAM,CACJ6C,MAAO,eACPC,YAAa,uBACbzB,OAAQ,QACR0B,SAAU,IACVC,YAAY,QAgGR,kCAKH8P,EACC,cAAC,GAAD,CACE+E,QA7JQ,WAClBU,EAAiBjL,QAAQkC,QACzBgJ,GAAY,GACZhJ,KA2JUoI,SAzJS,WACnBW,EAAiBjL,QAAQ8E,SACzBoG,GAAY,GACZpG,KAuJUuF,SAAUA,EACV9G,WAAYA,EACZ1B,OAvGmB,WAG7B,GAFAoJ,EAAiBjL,QAAQ6E,OAErBK,EAAevP,OAAQ,CACzB,IAAM8R,EAAO,IAAIV,KAAK7B,EAAgB,CACpChT,KAAM,eAEFqJ,EAAMsL,IAAIC,gBAAgBW,GAChCmD,EAAS5K,QAAQwL,UAAY,KACzBvG,GACFA,EAAS,IAAI2C,KAAK,CAACH,GAAO,eAE5BuD,EAAYzP,GACZqP,EAAS5K,QAAQyL,IAAMlQ,EACvBqP,EAAS5K,QAAQ2L,OACjBf,EAAS5K,QAAQ4L,UAAW,EAC5BhB,EAAS5K,QAAQiD,OAAQ,EACzB2H,EAAS5K,QAAQ8C,OAEnB+B,IACAY,GAAa,MAsFL,mCACGkF,EAAU3K,SACT,mCACE,cAAC,GAAD,CAAc1N,QA7JE,WAC9BmT,GAAa,GACbN,EAAkB,IAClB8F,EAAiBjL,QAAU,IAAI0G,cAAciE,EAAU3K,QAAS,CAC9D2G,SAAU,eAEZjC,IACAuG,EAAiBjL,QAAQmC,iBACvB,gBACAoJ,GAEEX,EAAS5K,UACPjI,OAAO8O,IACT+D,EAAS5K,QAAQwL,UAAYb,EAAU3K,QAEvC4K,EAAS5K,QAAQyL,IAAMd,EAAU3K,QAEnC4K,EAAS5K,QAAQ4L,UAAW,EAC5BhB,EAAS5K,QAAQiD,OAAQ,GAE3BgI,EAAiBjL,QAAQmC,iBAAiB,QAAQ,eAGlD8I,EAAiBjL,QAAQ0E,MAAM,kB,UClG7ByH,GAAU,SAAC,GAAyC,IAAD,IAAtCpY,cAAsC,MAA7B,OAA6B,EAArBwB,EAAqB,EAArBA,MAAO5B,EAAc,EAAdA,QACzC,OACE,eAAC,IAAD,CACEI,OAAQA,EACRC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,SACGa,IAEH,cAAC,IAAD,CAAkBZ,SAAS,KAA3B,SAAiChB,QAIjCyY,GAAuB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAcC,EAAsB,EAAtBA,gBAE5C,OACE,cAAC,IAAD,CAAKC,KAAK,IAAIC,aAAW,EAACC,UAAU,YAAY9X,SAAS,MAAzD,SACG,cAAC,KAAD,CAAU+X,UAAWJ,EAArB,SACD,cAAC,IAAD,CAASxN,QAAQ,MAAjB,SACGuN,EAAcnD,KAAI,SAACyD,EAAKC,GAAN,OACjB,cAAC,KAAD,CACElY,SAAS,KACT8X,aAAW,EACXK,YAAY,OACZ7E,WAAW,OAJb,SAOG2E,EAAI5N,OAFA6N,aAUXE,GAAwB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,UAAWnR,EAAW,EAAXA,KAC1C,MAAkB,UAAdmR,EAEA,cAAC,IAAD,CACE1K,OAAO,MACP8H,YAAY,QACZ9L,OAAO,OACPhM,EAAE,MACF2a,gBAAgB,QALlB,SAOE,uBAAOvB,IAAK7P,EAAM4F,MAAO,CAACnN,OAAO,YAMrC,cAAC,IAAD,CAAKgO,OAAO,MAAM8H,YAAY,QAAQ9L,OAAO,OAA7C,SACE,cAAC,KAAD,CAAMxJ,GAAIoY,KAAa3Y,QAAQ,MAAM+J,OAAO,YAI5C6O,GAAsB,SAAC,GAMtB,IALLH,EAKI,EALJA,UACAnR,EAII,EAJJA,KACAuR,EAGI,EAHJA,gBACA3Q,EAEI,EAFJA,WACA4Q,EACI,EADJA,gBAEA,OACE,qCACiB,UAAdL,EACC,cAAC,GAAD,CAAe/H,eAAgBpJ,EAAMqJ,SAAUkI,IAE/C,cAAC,GAAD,CAAezC,eAAgB9O,EAAMqJ,SAAUkI,IAEjD,cAAC,IAAD,CAASzb,GAAG,MACZ,cAAC,GAAD,CACE6W,oBAAqB/L,EACrByI,SAAUmI,QAKZC,GAAsB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,sBAC7B,OADiE,EAAdC,QAEjD,mCACA,cAAC,IAAD,CAAQlZ,OAAO,OAAf,SACE,cAAC,KAAD,CAASrC,KAAK,WAKhB,mCACGsb,EACC,cAAC,GAAD,CACEvZ,OAAO,UACPwB,MAAM,cACN5B,QAAQ,+BAGV,cAAC,GAAD,CACEI,OAAO,QACPwB,MAAM,cACN5B,QAAQ,uCAMZ6Z,GAAiB,SAAC,GAajB,IAZLC,EAYI,EAZJA,QACAC,EAWI,EAXJA,OACAX,EAUI,EAVJA,UACAnR,EASI,EATJA,KACAuR,EAQI,EARJA,gBACA3Q,EAOI,EAPJA,WACA4Q,EAMI,EANJA,gBACAO,EAKI,EALJA,cACAC,EAII,EAJJA,QACAL,EAGI,EAHJA,QACAM,EAEI,EAFJA,UAEI,IADJP,6BACI,MADoB,KACpB,EACJ,OACE,eAAC,KAAD,CACEG,QAASA,EACTC,OAAQA,EACR1b,KAAK,MACL8b,qBAAqB,EAJvB,UAME,cAAC,KAAD,IAEA,eAAC,KAAD,CAAclZ,EAAE,IAAhB,UACE,cAAC,KAAD,gBAEA,cAAC,KAAD,CAAWvC,EAAE,OAAOyB,EAAE,OAAtB,SACG+Z,EACC,cAAC,GAAD,CACEP,sBAAuBA,EACvBC,QAASA,IAGX,cAAC,GAAD,CACER,UAAWA,EACXnR,KAAMA,EACNuR,gBAAiBA,EACjB3Q,WAAYA,EACZ4Q,gBAAiBA,MAIvB,eAAC,IAAD,CAAK9D,QAAQ,OAAOrV,cAAc,cAAcvC,GAAG,IAAnD,UACE,cAAC,IAAD,CACE4M,GAAG,IACHhM,QAASqb,EACTzP,SAAU0P,EACVhb,UAAW2a,EAJb,oBASA,cAAC,IAAD,CAAQjP,GAAG,IAAItK,QAAQ,UAAU1B,QAASmb,EAA1C,6BAQJM,GAAiB,SAAC,GAYjB,IAXLhB,EAWI,EAXJA,UACAnR,EAUI,EAVJA,KACAoS,EASI,EATJA,cACAlS,EAQI,EARJA,SACAmS,EAOI,EAPJA,OACAC,EAMI,EANJA,aACAC,EAKI,EALJA,UACAC,EAII,EAJJA,oBACAC,EAGI,EAHJA,eACA/B,EAEI,EAFJA,gBAGA,OACE,eAAC,GAAD,CACEha,QAAS2b,EACTvc,GAAI,CAAC,IAAK,IAAK,KACf4M,GAAI,CAAC,IAAK,IAAK,KACf1J,EAAG,CAAC,IAAK,IAAK,KACdZ,QAAQ,UACR5B,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAC3CiQ,OAAO,MACPiM,OAAQ,CAAE1P,GAAI,WAAYyD,OAAQ,OARpC,UAWE,cAAC,GAAD,CAAuB0K,UAAWA,EAAWnR,KAAMA,IAEnD,eAAC,IAAD,CAAK0N,QAAQ,OAAO9U,GAAG,IAAIL,eAAe,gBAA1C,UACE,cAAC,IAAD,CAAKmK,GAAG,IAAR,SACE,cAAC,KAAD,CAAMzJ,GAAI0Z,KAAeja,QAAQ,QAEnC,cAAC,GAAD,CAAsB+X,cAAevQ,EAAUwQ,gBAAiBA,IAChE,cAAC,IAAD,CAAKhO,GAAG,IAAIhM,QAAS,SAAAsU,GAAC,OAAIA,EAAE4H,mBAA5B,SACE,eAAC,KAAD,CAAMlc,QAAS,SAAAsU,GAAC,OAAIA,EAAE4H,mBAAtB,UACE,cAAC,KAAD,CACE3Z,GAAI4Z,KACJ,aAAW,UACXzC,KAAM,cAAC,KAAD,IACNhY,QAAQ,UAEV,eAAC,KAAD,WACE,cAAC,KAAD,CAAUgY,KAAM,cAAC,KAAD,IAAgB1Z,QAAS2b,EAAzC,oBAGA,cAAC,KAAD,CACEjC,KAAM,cAAC,KAAD,IACN1Z,QAAS,kBAAM+b,GAAe,IAFhC,oBAMA,cAAC,KAAD,CACEX,OAAQQ,EACRQ,oBAAqBP,EACrBV,QAASO,EAHX,SAKE,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAmBtZ,SAAS,KAAKsT,WAAW,OAA5C,yBAIA,cAAC,KAAD,mEAIA,eAAC,KAAD,WACE,cAAC,IAAD,CAAQvW,IAAK0c,EAAW7b,QAAS0b,EAAjC,oBAGA,cAAC,IAAD,CACEnB,YAAY,UACZva,QAAS8b,EACT5D,GAAI,EACJwC,gBAAgB,UAJlB,6CAiKP2B,GA7IF,SAAC,GAA2D,IAAzD9S,EAAwD,EAAxDA,WAAYD,EAA4C,EAA5CA,KAAMY,EAAsC,EAAtCA,WAAY5G,EAA0B,EAA1BA,GAAIgZ,EAAsB,EAAtBA,SAAUhC,EAAY,EAAZA,MACpDiC,EAAgBtd,IAAMiO,SAC5B,EAAoCsP,eAA5BpB,EAAR,EAAQA,OAAQO,EAAhB,EAAgBA,OAAQR,EAAxB,EAAwBA,QAClB7P,EAAUjC,KAEhB,EAAgC9J,mBAAS2K,GAAzC,mBAAOV,EAAP,KAAiBiT,EAAjB,KACA,EAAsCld,mBAAS+J,GAA/C,mBAAOoT,EAAP,KAAoBC,EAApB,KACMC,EAAiB7T,IACvB,EAAwCxJ,oBAAS,GAAjD,mBAAOqc,EAAP,KAAqBiB,EAArB,KACA,EAA8Btd,oBAAS,GAAvC,mBAAO0b,EAAP,KAAgB6B,EAAhB,KACA,EAAkCvd,oBAAS,GAA3C,mBAAOgc,EAAP,KAAkBwB,EAAlB,KACA,EAA0Dxd,mBAAS,MAAnE,mBAAOyb,EAAP,KAA8BgC,EAA9B,KACMtB,EAAgB,kBAAMmB,GAAgB,IAC5C,EAA8Ctd,oBAAS,GAAvD,mBAAOya,EAAP,KAAwBiD,EAAxB,KACMpB,EAAY5c,IAAMiO,SAClBgQ,EAAaje,IAAMiO,SAqCnBiQ,EAAiB,WACrB,IAAMjT,EAAaV,EAASoN,KAAI,SAAAvE,GAAG,OAAIA,EAAI3O,SACrC8T,EAAS,CAAElU,KAAIgG,KAAMoT,EAAaxS,cAElCkT,EAAe,GACrB,IAAK,IAAMhc,KAAOmb,EAAc7O,QAE5B8J,EAAOpW,IACPmb,EAAc7O,QAAQtM,GAAK4Q,aAAewF,EAAOpW,GAAK4Q,aAEtDoL,EAAahc,GAAOoW,EAAOpW,IAI/B,OACuC,IAArCic,OAAOC,KAAKF,GAAc/Z,QACJ,IAAtB6G,EAAW7G,QACXkY,EAjBmB,GAyDvB,OA5BA3M,qBAAU,WAsBR,OApBA2N,EAAc7O,QAAU,CAAEnE,aAAYD,OAAMY,cAC5C+S,GAAmB,GACf/S,EAAW7G,OAAS,GACtBuZ,EACGxT,UACAxG,MAAK,SAAAC,GACJ,IAAMJ,EAAOI,EAAIJ,KAOXoU,EANapU,EAAKmU,KAAI,SAAAlT,GAC1B,MAAO,CACLA,MAAOA,EAAMJ,GACbmJ,MAAO/I,EAAMF,WAAa,IAAME,EAAME,cAGHkT,QAAO,SAAAC,GAAG,OAC/C7M,EAAWyB,SAASoL,EAAIrT,UAE1B+Y,EAAY5F,GACZoG,GAAmB,MAEpBna,OAAM,SAAAC,OACJ,WACLwa,aAAaL,EAAWxP,YAGzB,IAGD,qCACE,cAAC,GAAD,CACE+M,UAAWlR,EACXD,KAAMA,EACNoS,cAAeA,EACflS,SAAUA,EACVmS,OAAQA,EACRC,aAAcA,EACdC,UAAWA,EACXC,oBA/CoB,WACxBxQ,EACGjB,YAAY/G,GACZV,MAAK,SAAAC,GACJyZ,EAAShC,GACToB,OAED5Y,OAAM,SAAAC,QAyCLgZ,eAAgBc,EAChB7C,gBAAiBA,IAEnB,cAAC,GAAD,CACEmB,QAASA,EACTC,OAAQA,EACRX,UAAWlR,EACXD,KAAMA,EACNuR,gBA/EgB,SAAAvR,GACpBqT,EAAerT,IA+EXY,WAAYA,EACZ4Q,gBApFgB,SAAA0C,GACpBf,EAAYe,IAoFRnC,cAnHc,WAClB,IAAMnR,EAAaV,EAASoN,KAAI,SAAAvE,GAAG,OAAIA,EAAI3O,SACrC8T,EAAS,CAAElU,KAAIgG,KAAMoT,EAAaxS,aAAWX,cAC7C6T,EAAe,GACrB,IAAK,IAAMhc,KAAOmb,EAAc7O,QAC1B8J,EAAOpW,IAAQmb,EAAc7O,QAAQtM,KAASoW,EAAOpW,KACvDgc,EAAahc,GAAOoW,EAAOpW,IAGU,IAArCic,OAAOC,KAAKF,GAAc/Z,SAC9ByZ,GAAW,GACXC,GAAa,GACbzR,EACGjD,OAAO/E,EADV,2BACkB8Z,GADlB,IAC+B7T,gBAC5B3G,MAAK,SAAAC,GACJia,GAAW,GACXE,GAAyB,GACzBE,EAAWxP,QAAU+P,YAAW,WAC9BtC,IACA4B,GAAa,GACbC,GAAyB,KACxB,QAEJla,OAAM,SAAAC,GACL,IACE+Z,GAAW,GACXE,GAAyB,GACzB,MAAOja,UAyFTuY,QAAS6B,EACTlC,QAASA,EACTM,UAAWA,EACXP,sBAAuBA,Q,8CCzPhB0C,GA7KU,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,QACzC,GAD0E,EAAxBzR,SAAwB,kBAClC5M,oBAAS,IAAjD,mBAAOse,EAAP,KAAqBC,EAArB,KACA,EAA8Bve,oBAAS,GAAvC,mBAAOwe,EAAP,KAAgBC,EAAhB,KACA,EAAgDze,oBAAS,GAAzD,mBAAO0e,EAAP,KAAyBC,EAAzB,KACA,EAA4C3e,oBAAS,GAArD,mBAAO4e,EAAP,KAAuBC,EAAvB,KACQjD,EAAYkD,qBAAWC,IAAvBnD,QACR,ECrBM,SAA2BzX,GACjC,IAAMvE,EAAM+N,iBAAOxJ,GACnB,EAAwBnE,oBAAS,GAAxBgf,EAAT,oBASA,MAAO,CAAEpf,EAPT,SAAqBqf,GACdnB,OAAOoB,GAAGtf,EAAIuO,QAAS8Q,KAC1Brf,EAAIuO,QAAU8Q,EACdD,GAAY,SAAAG,GAAC,OAAKA,QDcsBC,CAAkBhB,GAA9D,mBAAOiB,EAAP,KAAuBC,EAAvB,KACA,EAMIR,qBAAWS,IALb1I,EADF,EACEA,iBACA2I,EAFF,EAEEA,mBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,UAGF,EAAgDb,qBAAWT,GAAnDuB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,QAASC,EAAvC,EAAuCA,KAIjCC,EAAmB,SAAA7b,GAEvB,OADiBia,EAAc/d,KAAK4f,MAElC,IAAK,kBACH,IAAMrJ,EAAMzS,EAAMkT,KAAI,SAAApN,GAAQ,OAAIA,EAAS9F,SAC3Cqb,EAAmB5I,GACnB2H,GAAgB,GACG,IAAf3H,EAAI9S,QAAcya,GAAgB,GACtC,MACF,IAAK,gBACHmB,EAAavb,GACboa,GAAgB,GAChB,MACF,IAAK,gBACHA,GAAgB,GAChBmB,EAAavb,GACb,MACF,IAAK,oBACHsb,EAAatb,GACboa,GAAgB,GAChB,MACF,IAAK,aACHE,EAAWta,KA+EjB,OAxEAkL,qBAAU,WACR,IAEI6Q,EACAxW,EAAM,KACV,OAJiB0U,EAAc/d,KAAK4f,MAKlC,IAAK,kBAC6B,IAA5BpJ,EAAiB/S,QAAcya,GAAgB,GACnD2B,EAAMxgB,IAAMygB,aAAa/B,EAAe,CACtChL,SAAU4M,EACVtJ,oBAAoB,aAAKG,GACzBD,IAAKC,IAEPyI,EAAkBY,GAClBvB,GAAoB,GAEpB,MACF,IAAK,gBACe,OAAdgB,EACFpB,GAAgB,IAEhB7U,EAAMsL,IAAIC,gBAAgB0K,GAC1BpB,GAAgB,IAOlBe,EAJAY,EAAMxgB,IAAMygB,aAAa/B,EAAe,CACtChL,SAAU4M,EACV7M,eAAgBzJ,KAGlB,MACF,IAAK,gBACe,OAAdiW,EACFpB,GAAgB,IAEhBA,GAAgB,GAEhB7U,EAAMsL,IAAIC,gBAAgB0K,IAQ5BL,EALAY,EAAMxgB,IAAMygB,aAAa/B,EAAe,CACtChL,SAAU4M,EACVnH,eAAgBnP,KAIlB,MACF,IAAK,oBACe,OAAdiW,GAAoBpB,GAAgB,GACxC2B,EAAMxgB,IAAMygB,aAAa/B,EAAe,CACtChL,SAAU4M,IAEZ,MACF,IAAK,aACHE,EAAMxgB,IAAMygB,aAAa/B,EAAe,CACtChL,SAAU4M,EACVI,oBAAqB,SAAAtN,GAAG,OAAI+L,EAAkB/L,MAEhDyL,GAAgB,GAChBe,EAAkBY,GAClB,MACF,QACEA,EAAMxgB,IAAMygB,aAAa/B,EAAe,CACtChL,SAAU4M,IAEZzB,GAAgB,GAChBe,EAAkBY,MAIrB,CAAC9B,IAGF,eAAC,IAAD,CACEnc,EAAE,OACFoe,KAAK,QACL5I,QAAQ,OACRnV,eAAe,gBACfF,cAAc,SALhB,UAOE,eAAC,IAAD,CAAKH,EAAE,OAAOuK,OAAO,OAArB,UACGkS,GACC,eAAC,IAAD,CACExc,OAAO,OACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,sBAGA,eAAC,IAAD,CAAkBC,SAAS,KAA3B,mEAEE,eAAC,IAAD,CAAME,GAAIsd,IAAYzb,GAAG,YAAzB,UAAsC,cAAC,IAAD,CAAMF,MAAM,WAAZ,gCAAtC,cAIL0a,EAAelR,WAElB,eAAC,IAAD,CAAKsJ,QAAQ,OAAOrV,cAAc,cAAcvC,GAAG,IAAnD,UACE,cAAC,IAAD,CAAQ4M,GAAG,IAAIhM,QAxIF,WACbqf,GAASC,KAuI2B1T,SAAUiS,EAA9C,SACGwB,EAAU,OAAS,SAErBD,GAAcjB,GACb,cAAC,IAAD,CACEzc,QAAQ,UACR1B,QAASmf,EACTnT,GAAG,IACH8T,SAAU,cAAC,KAAD,IAJZ,sBASF,cAAC,IAAD,CAAQ9T,GAAG,IAAItK,QAAQ,UAAU1B,QAASmb,EAA1C,SACG4C,EAAU,QAAU,kB,UExKzBgC,GADcrd,IAAMsd,YACOhW,SA+GlBiW,GA9GI,SAAC,GAAuC,IAArCN,EAAoC,EAApCA,oBAAqBhN,EAAe,EAAfA,SACzC,EAAgCpT,mBAAS,GAAzC,mBAAO2gB,EAAP,KAAiBC,EAAjB,KACA,EAAkC5gB,oBAAS,GAA3C,mBAAO6gB,EAAP,KAAkBC,EAAlB,KACA,EAAwD9gB,oBAAS,GAAjE,mBAAO+gB,EAAP,KAA6BC,EAA7B,KACMjV,EAAUjC,KACRmX,EAAYnC,qBAAWoC,IAAvBD,QAER,EACEnC,qBAAWS,IADL1I,EAAR,EAAQA,iBAAkBqE,EAA1B,EAA0BA,UAAWyE,EAArC,EAAqCA,UA8CrC,OA5CAtQ,qBAAU,WAqCR,OApCAtD,EACG1F,OACC,CACE0D,KAAM4V,EACN3V,WAAYkR,EACZjR,SAAU4M,IAEZ,SAAAsK,GACE,IAAMC,EAAcD,EAAcE,iBAC9BF,EAAcG,MACdH,EAAcI,OAAOC,kBAAkB,mBACvCL,EAAcI,OAAOC,kBACnB,iCAEF1O,EAAMX,KAAKsP,MAA8B,IAAvBN,EAAcO,OAAgBN,GACpDR,EAAY9N,GACA,MAARA,GACFsN,GAAoB,KAGxBI,IAEDnd,MAAK,SAAAC,GACJ2d,EAAQ3d,EAAIJ,MACZ4d,GAAa,GACbE,GAAwB,GACpB5N,GAAUA,GAAS,MAExB7P,OAAM,SAAAC,GACLsd,GAAa,GACbE,GAAwB,GACpB5N,GAAUA,GAAS,GACvBgN,GAAoB,MAIjB,WAGDS,GAAWL,GAAamB,YAG7B,IAED,cAAC,IAAD,CAAKnV,OAAO,OAAOhM,EAAE,OAAOyB,EAAE,OAA9B,SACG4e,EACC,qCACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAS1gB,KAAK,KAAKN,GAAG,IAAtB,UACE,cAAC,KAAD,CAASM,KAAK,KAAKuC,GAAG,MADxB,iBAKF,cAAC,KAAD,CAAUkf,WAAS,EAACzd,MAAOwc,OAG7B,mCACGI,EACC,eAAC,IAAD,CACE7e,OAAO,UACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,uBAGA,cAAC,IAAD,CAAkBC,SAAS,KAA3B,wDAKF,eAAC,IAAD,CACEZ,OAAO,QACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,uBAGA,cAAC,IAAD,CAAkBC,SAAS,KAA3B,oDC/FR+e,GAAa,SAAC,GAAqC,IAAnCxhB,EAAkC,EAAlCA,KAAMyhB,EAA4B,EAA5BA,SAAUpe,EAAkB,EAAlBA,MAAOyW,EAAW,EAAXA,KAC3C,OACE,cAAC,KAAD,CAASjN,MAAK,iCAA4B7M,EAA5B,KAAd,SACE,eAAC,IAAD,CACE0hB,UAAU,KACVC,QAAQ,KACRjV,GAAG,QACHhK,EAAE,IACF8N,OAAO,UACP/Q,EAAE,IACF2c,OAAQ,CAAE1P,GAAI,WAAYyD,OAAQ,OAClC/P,QAAS,kBAAMqhB,EAASzhB,IAR1B,UAUE,cAAC,IAAD,CAAKqa,KAAK,IAAI3X,EAAE,IAAhB,SACE,eAAC,IAAD,CAAS5C,KAAK,KAAd,cAAqBuD,EAArB,SAEF,cAAC,KAAD,IACA,cAAC,IAAD,UACE,cAAC,KAAD,CAAMV,GAAImX,EAAM1X,QAAQ,SAE1B,cAAC,IAAD,CAASwf,YAAY,WAAWC,QAAQ,WAAW1R,OAAO,MAC1D,cAAC,IAAD,CAAQzN,EAAE,IAAV,SACE,cAAC,KAAD,CAAMC,GAAImf,KAAmB1f,QAAQ,IAAIkC,MAAM,qBA+E1Cyd,GAzEW,WACxB,IAAQ3C,EAAiBX,qBAAWS,IAA5BE,aACR,EACEX,qBAAWuD,IADLtC,EAAR,EAAQA,KAAMuC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,MAGtBC,EAAe,SAAAniB,GACnBkiB,EAAME,OAAN,MAAAF,EAAK,CAAQ,EAAGA,EAAMze,QAAjB,oBAA4Bwe,KACpB,UAATjiB,EACFkiB,EAAMpW,KACJ,cAAC,GAAD,CACEiS,cAAe,cAAC,GAAD,IACfC,QAASgE,MAGK,UAAThiB,GACTkiB,EAAMpW,KACJ,cAAC,GAAD,CACEiS,cAAe,cAAC,GAAD,IACfC,QAASgE,MAKfE,EAAMpW,KACJ,cAAC,GAAD,CACEiS,cAAe,cAAC,GAAD,IACfC,QAASgE,MAGb5C,EAAapf,GACb0f,GAAK,IAMP,OACE,mCAEI,eAAC,IAAD,CACEhd,EAAE,IACFP,OAAO,OACPiV,QAAQ,OACRrV,cAAc,SACdE,eAAe,gBALjB,UAOE,cAAC,IAAD,CAAQS,EAAE,IAAIgK,GAAG,WAAWyD,OAAO,MAAnC,SACE,cAAC,IAAD,CAASrQ,KAAK,KAAd,6DAIF,cAAC,IAAD,CAASyC,GAAG,MACZ,eAAC,IAAD,WACE,cAAC,GAAD,CACEkf,SAAUU,EACVniB,KAAK,QACL8Z,KAAMuI,KACNhf,MAAM,UAER,cAAC,GAAD,CACEoe,SAAUU,EACVniB,KAAK,QACL8Z,KAAMiB,KACN1X,MAAM,aAGV,cAAC,IAAD,CAAS7D,GAAG,YCtGTwiB,GAAkBM,0BAC/B,SAASC,GAAa/M,EAAO1R,GAC3B,OAAO,2BACF0R,GACA1R,GAGA,IAAMob,GAAsBoD,0BClBpBE,GDmBS,WACtB,MAA+C7iB,mBAAS,IAAxD,mBAAO6W,EAAP,KAAyB2I,EAAzB,KACA,EAAkCxf,mBAAS,SAA3C,mBAAOkb,EAAP,KAAkBuE,EAAlB,KACA,EAAkCzf,mBAAS,MAA3C,mBAAO2f,EAAP,KAAkBD,EAAlB,KACMoD,EAAyB,kBAC7B,cAAC,GAAD,CACEzE,QAASgE,GACTjE,cAAe,cAAC,GAAD,OAGb2E,EAA8B,kBAClC,cAAC,GAAD,CACE1E,QAASgE,GACTjE,cAAe,cAAC,GAAD,OAIbkE,EAAe,CACnB,cAACQ,EAAD,IACA,cAACC,EAAD,KAEIR,EAAQ5U,iBAAO2U,GACrB,EAA6CU,qBAAWJ,GAAc,CACpE/R,OAAQ,EACRoS,iBAAkBX,EAAa,GAC/BC,MAAOD,IAHT,mBAAOY,EAAP,KAAqBC,EAArB,KAMMtD,EAAoBqD,EAAarS,OAAS,EAC1C+O,EAAWxK,uBAAY,WAC3B,GAAIyK,EAAY,CACd,IAAM9E,EAAQmI,EAAarS,OAAS,EAEpCsS,EAAqB,CACnBtS,OAAQkK,EACRkI,iBAAkBV,EAAMpU,QAAQ4M,QAInC,CAACmI,IACEpD,EAAiBoD,EAAarS,OAAS,EAAI0R,EAAMpU,QAAQrK,OAe/D,OAHAuL,qBAAU,cACP,IAGD,cAACkQ,GAAoB6D,SAArB,CACEjf,MAAO,CACL0S,mBACA2I,qBACAC,eACAvE,YACAwE,eACAC,aAPJ,SAUE,cAAC0C,GAAgBe,SAAjB,CACEjf,MAAO,CACLgf,uBACAtD,aACAC,UACAC,KA9BK,WAAqB,IAApBsD,EAAmB,wDAC/B,GAAKA,GAAavD,EAAlB,CACA,IAAM/E,EAAQmI,EAAarS,OAAS,EAEpCsS,EAAqB,CACnBtS,OAAQkK,EACRkI,iBAAkBV,EAAMpU,QAAQ4M,OAyB5B6E,WACA2C,MAAOA,EAAMpU,QACb0C,OAAQqS,EAAarS,OACrByR,gBATJ,SAYGY,EAAaD,sBErFPK,GATM5jB,IAAMC,YAAW,WAAeC,GAAS,IAArBgN,EAAoB,EAApBA,SAEjC2W,EAAO/b,IAEb,OAAa,OAAT+b,EAAsB,cAAC,GAAD,CAAO3jB,IAAKA,IAClC2jB,EAAK3b,UAAkB,mCAAGgF,IACvB,cAAC,GAAD,CAAOhN,IAAKA,OCkBRmf,GAAkB4D,0BAClBzB,GAAeyB,0BC3Bba,GD4BF,WACX,MAA2CxjB,oBAAS,GAApD,mBAAOyjB,EAAP,KAAuBC,EAAvB,KACA,EAAoCzG,eAA5BpB,EAAR,EAAQA,OAAQO,EAAhB,EAAgBA,OAAQR,EAAxB,EAAwBA,QAClB7P,EAAUjC,KAChB,EAA0B9J,mBAAS,IAAnC,mBAAO2jB,EAAP,KAAcC,EAAd,KAgBA,GAfAvU,qBAAU,WACRqU,GAAiB,GACjB3X,EACGlC,UACAxG,MAAK,SAAAC,GACJogB,GAAiB,GACjBE,EAAStgB,EAAIJ,SAEdK,OAAM,SAAAC,GACLkgB,GAAiB,QAKpB,IACCD,EACF,OACE,eAAC,IAAD,CAAKjjB,EAAE,OAAP,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAUgC,OAAO,OAAjB,SACE,cAAC,GAAD,CAAS1C,EAAE,OAAOgC,QAAQ,iBAIlC,IAAM+hB,EAAe,SAAA9I,GACnB,IAAM+I,EAAQ,aAAOH,GACrBG,EAASrB,OAAO1H,EAAO,GACvB6I,EAASE,IAMX,OACE,cAAC,GAAD,UACG,eAAC5C,GAAakC,SAAd,CAAuBjf,MAAO,CAAC8c,QANtB,SAAC8C,GACb,IAAM9L,EAAO,aAAI0L,GACjBC,EAAS,CAACG,GAAF,oBAAa9L,OAIlB,UAED,eAAC,IAAD,CAAKzX,EAAE,OAAP,UACE,cAAC,GAAD,IACA,eAAC,GAAD,CAAU6f,KAAK,MAAf,UAEE,cAAC,IAAD,CAAKlF,gBAAgB,UAAUkF,KAAK,OAApC,SACoB,IAAjBsD,EAAM7f,OACL,eAAC,IAAD,CACE5B,OAAO,OACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,+BAGA,cAAC,IAAD,CAAkBC,SAAS,KAA3B,6DAGA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQX,QAAQ,QAAQhC,KAAK,KAAKN,GAAG,IAAIY,QAAS2b,EAAlD,8BAKF,cAAC,IAAD,CACE4H,GAAG,KACHnX,GAAI,CAAC,IAAK,KACVoX,SAAU,CAAC,SAAU,SAAU,QAC/BC,UAAU,IACV9hB,cAAe,CAAC,SAAU,SAAU,OALtC,SAOGuhB,EAAMtM,KAAI,SAAClT,EAAO4W,GAAR,OACT,wBAAC,GAAD,2BACM5W,GADN,IAEEtC,IAAKkZ,EACLA,MAAOA,EACPgC,SAAU8G,YAOpB,cAAC,KAAD,CAAS3W,MAAM,kBAAkB,aAAW,kBAA5C,SACE,cAAC,IAAD,CACE/M,KAAK,OACL0Q,OAAO,UACP9D,GAAG,QACHpI,MAAM,QACN8L,SAAS,QACTE,OAAO,IACPD,MAAM,IACNjQ,QAAS2b,EARX,SAUE,cAAC,KAAD,CAAMpZ,GAAImhB,KAAe1hB,QAAQ,gBAKzC,cAACsc,GAAgBqE,SAAjB,CAA0Bjf,MAAO,CAAEyX,WAAnC,SACE,eAAC,KAAD,CACEA,QAASA,EACTC,OAAQA,EACR1b,KAAK,MACLkgB,KAAK,SACLpE,qBAAqB,EALvB,UAOE,cAAC,KAAD,IAEA,eAAC,KAAD,CAAclZ,EAAE,IAAIsd,KAAK,QAAzB,UACE,cAAC,KAAD,wBAEA,cAAC,KAAD,CAAW7f,EAAE,MAAb,SACE,cAAC,GAAD,oBEvIC4jB,GAXE,WACf,OACE,qCACA,cAAC,GAAD,IACE,cAAC,IAAD,CAAQ5jB,EAAE,MAAV,SACE,cAAC,IAAD,uC,UC0EO6jB,GApDDC,aAAY,CACxBvd,OAAQ,CACNwd,iBAAkB,QAClBC,oBAAoB,GAEtBC,OAAQ,CACNC,iBAAkB,SAEpBC,WAAY,CACVtO,KArCS,CAEXuO,UAAW,CAGTC,WAAY,QACZxiB,WAAY,SACZyiB,IAAK,GAGPC,SAAU,CACR/C,QAAS,CACPgD,QAAS,EACTC,aAAc,KACdlD,UAAW,MAEbmD,OAAQ,CACNF,QAAS,EACTC,aAAc,OACdlD,UAAW,OAIf5J,aAAc,CACZhW,QAAS,WAcTgjB,MAAO,CACL3U,OAAQ,MACRuU,SAAU,CACRK,QAAS,SAAA7Z,GAAK,MAAK,CACjB8Z,OAAQ,CACN/M,YAAa,YAInBH,aAAc,CACZuM,iBAAkB,QAClBlU,OAAQ,QAIZ8U,OAAQ,CACNV,UAAW,CACTzO,WAAY,QAId4O,SAAU,CAERQ,MAAO,SAAAha,GAAK,MAAK,CACfwB,GAAwB,SAApBxB,EAAMia,UAAuB,QAAU,QAC3C7gB,MAA2B,SAApB4G,EAAMia,UAAuB,QAAU,QAC9C/I,OAAQ,CACN1P,GAAwB,SAApBxB,EAAMia,UAAuB,WAAa,cAGlDJ,QAAS,SAAA7Z,GAAK,MAAK,CACjBwB,GAAwB,SAApBxB,EAAMia,UAAuB,WAAa,QAC9C7gB,MAA2B,SAApB4G,EAAMia,UAAuB,QAAU,QAC9ClN,YAAa,QACbmE,OAAQ,CACN1P,GAAwB,SAApBxB,EAAMia,UAAuB,WAAa,kBCyD3CC,GAlHK,WAClB,MAKIpkB,cAJFC,EADF,EACEA,SACAE,EAFF,EAEEA,SACAD,EAHF,EAGEA,aACaG,EAJf,EAIEC,UAAaD,OAEf,EAAkC1B,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAAwCxL,oBAAS,GAAjD,mBAAO0lB,EAAP,KAAqBC,EAArB,KACA,EAAuBC,cAAf9d,EAAR,EAAQA,IAAK9C,EAAb,EAAaA,MACPgH,EAAUC,cAiChB,OACE,cAAC,IAAD,UACGyZ,EACC,cAAC,GAAD,CAAS5jB,QAAQ,oGAEjB,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQU,OAAO,OAAOP,EAAE,OAAxB,SACE,cAAC,IAAD,CAASc,EAAE,IAAIlD,GAAG,KAAKmD,GAAG,KAAK7C,KAAK,MAApC,+BAIF,sBAAM8C,SAAU1B,GA5CT,SAAA2B,GACfsI,GAAa,GACbrI,IACGC,KADH,UACWzC,EADX,mEAEOuC,GAFP,IAGI4E,MACA9C,WAED3B,MAAK,SAAAC,GACJkI,GAAa,GAGE,MAFIlI,EAAXpB,SAGNyjB,GAAgB,GAChBzH,YAAW,WACTlS,EAAQG,KAAK,YACZ,SAGN5I,OAAM,SAAAC,GACL,MAAyBA,EAAMC,SAAvBP,EAAR,EAAQA,KAAMhB,EAAd,EAAcA,OAEd,GADAsJ,GAAa,GACE,MAAXtJ,EACF,IAAK,IAAML,KAAOqB,EAChB1B,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASoB,EAAKrB,GAAK,WAkBrB,SACE,eAAC,IAAD,WAEE,eAAC,IAAD,CAAakC,GAAG,WAAWC,UAAWtC,EAAO4H,cAA7C,UACE,cAAC,IAAD,uBACA,cAAC,EAAD,yBACEhJ,YAAY,WACZT,GAAG,KACCyB,EAAS,gBAAiB,CAC5B4C,SAAU,CACRC,OAAO,EACPrC,QAAS,2BANf,IASEkC,UAAWtC,EAAO8C,YAEpB,cAAC,IAAD,6DAGA,cAAC,IAAD,UACG9C,EAAO4H,eAAiB5H,EAAO4H,cAAcxH,aAIlD,eAAC,IAAD,CAAaiC,GAAG,aAAaC,UAAWtC,EAAO6H,cAA/C,UACE,cAAC,IAAD,0BACA,cAAC,IAAD,aACElJ,KAAK,WACLC,YAAY,mBACZT,GAAG,KACCyB,EAAS,gBAAiB,CAC5B4C,SAAU,CACRC,OAAO,EACPrC,QAAS,mCAIf,cAAC,IAAD,qCACA,cAAC,IAAD,UACGJ,EAAO6H,eAAiB7H,EAAO6H,cAAczH,aAGlD,cAAC,IAAD,CACEK,QAAQ,QACRtC,GAAG,IACHQ,KAAK,SACLU,UAAWA,EAJb,kCCZD8kB,GAtFD,WACZ,MAKIxkB,cAJFC,EADF,EACEA,SACAE,EAFF,EAEEA,SACAD,EAHF,EAGEA,aACaG,EAJf,EAIEC,UAAaD,OAEf,EAA4C1B,oBAAS,GAArD,mBAAOiB,EAAP,KAAuBC,EAAvB,KAuBA,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQsB,OAAO,OAAOP,EAAE,OAAxB,SACE,cAAC,IAAD,CAASc,EAAE,IAAIlD,GAAG,KAAKmD,GAAG,KAAK7C,KAAK,MAApC,+BAKF,sBAAM8C,SAAU1B,GA/BL,SAAA2B,GAEfC,IACGC,KADH,UACWzC,EADX,gCACuDuC,GACpDG,MAAK,YAAsB,EAAnBnB,OAAmB,EAAXgB,KACfhC,GAAkB,MAEnBqC,OAAM,SAAAC,GAEL,GADAtC,GAAkB,GACdsC,EAAMC,SAAU,CAClB,MAAyBD,EAAMC,SAAvBP,EAAR,EAAQA,KACR,GAAe,MADf,EAAchB,OAEZ,IAAK,IAAML,KAAOqB,EAChB1B,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASoB,EAAKrB,GAAK,YAgB3B,SACE,eAAC,IAAD,WACGZ,GACC,eAAC,IAAD,CAAOiB,OAAO,UAAUa,EAAE,IAAIlD,GAAG,IAAjC,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,oDAKHhB,EAAOokB,kBACN,eAAC,IAAD,CAAO5jB,OAAO,QAAQa,EAAE,IAAIlD,GAAG,IAA/B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,SACGhB,EAAOokB,iBAAiBhkB,aAI/B,eAAC,IAAD,CAAaiC,GAAG,QAAQC,UAAWtC,EAAO4C,MAAOzE,GAAG,IAApD,UACE,cAAC,IAAD,oBACA,cAAC,IAAD,aACEQ,KAAK,SACDiB,EAAS,QAAS,CACpB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,mCAEXsC,QAAS,CACPD,MAAO,4CACPrC,QAAS,mCAIf,cAAC,IAAD,UACGJ,EAAO4C,OAAS5C,EAAO4C,MAAMxC,aAGlC,cAAC,IAAD,CAAQzB,KAAK,SAASR,GAAG,IAAzB,gCCzEGkmB,GAZQ,WACnB,IAAMC,EAASC,cAATD,KACN,OAEQ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,UAAoBE,UAAWL,KAC1C,cAAC,IAAD,CAAOG,KAAI,UAAKA,EAAL,gBAA0BE,UAAWT,SCEjDU,GAbK,WAChB,OACQ,cAAC,IAAD,CAAQ3lB,EAAE,OAAV,SACA,cAAC,IAAD,CAAKyB,EAAE,MAAP,SACA,eAAC,IAAD,CAAQzB,EAAE,OAAV,UACA,cAAC,IAAD,CAASV,EAAE,IAAIiD,EAAE,IAAIC,GAAG,KAAxB,kDACC,cAAC,KAAD,CAAS0J,UAAU,MAAMvM,KAAK,KAA9B,uB,kCCwBEimB,GAvBe1mB,IAAMC,YAClC,WAAgCC,GAAS,IAAtC8D,EAAqC,EAArCA,MAAOkJ,EAA8B,EAA9BA,SAAarB,EAAiB,kBACtC,OACE,eAAC,KAAD,2BAAmBA,GAAnB,IAA0B8a,OAAO,KAAKxmB,GAAG,IAAI2Q,OAAO,MAAMhQ,EAAE,OAA5D,UACE,eAAC,KAAD,CACEuM,GAAG,WACHpI,MAAM,QACN8X,OAAQ,CAAE1P,GAAI,YAHhB,UAKE,cAAC,IAAD,CAAK2N,KAAK,IAAInY,UAAU,OAAxB,SACE,cAAC,IAAD,CAASS,GAAG,KAAK7C,KAAK,KAAtB,SACGuD,MAGL,cAAC,KAAD,OAEF,cAAC,KAAD,UACE,cAAC,KAAD,CAAgB4iB,GAAI,EAApB,SAAwB1Z,a,aCoKnB2Z,GA1KE,SAAC,GAAwB,IAAtB7iB,EAAqB,EAArBA,MAAU3D,EAAW,kBACvC,EAAkCC,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAA4CxL,mBAAS,IAArD,mBAAOmB,EAAP,KAAuBC,EAAvB,KACMolB,EAAU7Y,mBACV5B,EAAUlD,IAChB,EAAkC7I,oBAAS,GAA3C,mBAAOymB,EAAP,KAAkBC,EAAlB,KACM7lB,EAAQC,cAEd,EAOIO,cANFG,EADF,EACEA,SACAF,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACAE,EAJF,EAIEA,UACAklB,EALF,EAKEA,MACajlB,EANf,EAMEC,UAAaD,OA2Cf,OACE,cAAC,GAAD,yBAAuBgC,MAAOA,GAAW3D,GAAzC,IAA+CH,IAAK4mB,EAASziB,GAAG,UAAhE,SACE,eAAC,IAAD,CAAK9B,EAAE,OAAOzB,EAAE,OAAOiQ,SAAS,WAAhC,UACE,cAAC,IAAD,CACExO,EAAE,OACFzB,EAAE,OACFuM,GAAG,QACHsL,QAAQ,MACR5H,SAAS,WACT1N,EAAE,KACFoY,gBAAgB,UAChByL,OAAO,IACPnP,QAASgP,EAAY,OAAS,QAThC,SAWE,cAAC,IAAD,CAAQxkB,EAAE,OAAOzB,EAAE,OAAnB,SACE,cAAC,IAAD,CAAQC,QAAS,kBAAMimB,GAAa,IAAOE,OAAO,IAAlD,sCAKJ,iCACGzlB,EAAe2C,OAAS,GACvB,eAAC,IAAD,CAAO5B,OAAO,QAAQa,EAAE,IAAIlD,GAAG,IAA/B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,SACGvB,OAIP,eAAC,IAAD,CAAa6L,GAAG,IAAIhJ,UAAWtC,EAAO2H,aAAtC,UACE,cAAC,IAAD,4BACA,cAAC,EAAD,aACE/I,YAAY,eACZT,GAAG,KACCyB,EAAS,eAAgB,CAC3B8C,QAAS,CACPD,MAAO,yBACPrC,QAAS,gDAEXoC,SAAU,CAAEC,OAAO,EAAMrC,QAAS,gCAGtC,cAAC,IAAD,UACGJ,EAAO2H,cAAgB3H,EAAO2H,aAAavH,UAE9C,cAAC,IAAD,wCAEF,eAAC,IAAD,CAAakL,GAAG,IAAIhJ,UAAWtC,EAAO4H,cAAtC,UACE,cAAC,IAAD,2BACA,cAAC,EAAD,aACEhJ,YAAY,eACZT,GAAG,KACCyB,EAAS,gBAAiB,CAC5B4C,SAAU,CACRC,OAAO,EACPC,QAAS,CACPD,MAAO,yBACPrC,QAAS,gDAEXA,QAAS,gCAIf,cAAC,IAAD,UACGJ,EAAO4H,eAAiB5H,EAAO4H,cAAcxH,UAEhD,cAAC,IAAD,wCAEF,eAAC,IAAD,CAAakL,GAAG,IAAIhJ,UAAWtC,EAAO6H,cAAtC,UACE,cAAC,IAAD,oCACA,cAAC,IAAD,aACElJ,KAAK,WACLC,YAAY,mBACZT,GAAG,KACCyB,EAAS,gBAAiB,CAC5B8C,QAAS,CACPD,MAAO,yBACPrC,QAAS,gDAEXoC,SAAU,CACRC,OAAO,EACPrC,QAAS,+BAEX4C,SAAU,SAAAP,GAAK,OACbA,IAAU1C,IAAY6H,eA9IlB,gDAiJV,cAAC,IAAD,uCACA,cAAC,IAAD,UACG5H,EAAO6H,eAAiB7H,EAAO6H,cAAczH,aAGlD,cAAC,IAAD,UACE,eAAC,IAAD,CAAQQ,eAAe,QAAvB,UACE,cAAC,IAAD,CACEH,QAAQ,UACRhC,KAAK,KACLM,QAASc,GAzHM,SAAA2B,GAC3B6I,EACG3C,eAAelG,GACfG,MAAK,SAAAC,GACJzC,EAAM,CACJ6C,MAAO,oBACPC,YAAa,gDACbzB,OAAQ,UACR0B,SAAU,IACVC,YAAY,IAEd2H,GAAa,GACbmb,EAAM,IACND,GAAa,MAEdnjB,OAAM,SAAAC,GACLgI,GAAa,GACb,MAAyBhI,EAAMC,SAAvBP,EAAR,EAAQA,KACO,MADf,EAAchB,SAEZd,EAAkB,IAhCL,SAAAM,GAAW,IAAD,WAClBG,GACG,qBAARA,EACFL,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASJ,EAAOG,GAAK,KAGvBT,GAAkB,SAAAW,GAAI,OAAIA,EAAKC,OAAON,EAAOG,QAPjD,IAAK,IAAMA,KAAOH,EAAS,EAAhBG,GAgCLD,CAAasB,UAsGPnC,UAAWA,EAJb,6BAQA,cAAC,IAAD,CAAQoB,QAAQ,QAAQhC,KAAK,KAAKE,KAAK,QAAQI,QA/I5C,WACbkmB,EAAM,IACND,GAAa,IA6IH,mC,aCiECG,GApOM,SAAC,GAAwB,IAAtBnjB,EAAqB,EAArBA,MAAU3D,EAAW,kBAC3C,EAAkCC,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAA0CxL,mBAAS,IAAnD,mBAAO8mB,EAAP,KAAsBC,EAAtB,KACA,EAA0C/mB,oBAAS,GAAnD,mBAAOgnB,EAAP,KAAsBC,EAAtB,KACA,EAA4CjnB,mBAAS,IAArD,mBAAOmB,EAAP,KAAuBC,EAAvB,KACM8lB,EAAYvZ,mBACZ5B,EAAUlD,IACVhI,EAAQC,cACd,EAOIO,cANFG,EADF,EACEA,SACAF,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACA4lB,EAJF,EAIEA,SACAR,EALF,EAKEA,MACajlB,EANf,EAMEC,UAAaD,OAmDTE,EAAe,SAAAF,GAAW,IAAD,WAClBG,GACG,qBAARA,EACFL,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASJ,EAAOG,GAAK,KAGvBT,GAAkB,SAAAW,GAAI,OAAIA,EAAKC,OAAON,EAAOG,QAPjD,IAAK,IAAMA,KAAOH,EAAS,EAAhBG,IAyBb,OAdAwN,qBAAU,WACRtD,EACGrD,MACArF,MAAK,SAAAC,GACJ6jB,EAAS,WAAY7jB,EAAIJ,KAAK6F,UAC9Boe,EAAS,QAAS7jB,EAAIJ,KAAKoB,OAC3B6iB,EAAS,YAAa7jB,EAAIJ,KAAKmB,WAC/B8iB,EAAS,aAAc7jB,EAAIJ,KAAKe,YAChC8iB,EAAiBzjB,EAAIJ,MACrBgkB,EAAU/Y,QAAU7K,EAAIJ,QAEzBK,OAAM,SAAAC,SAER,IAED,cAAC,GAAD,yBAAuBE,MAAOA,GAAW3D,GAAzC,aACE,uBAAMkD,SAAU,SAAA8R,GAAC,OAAIA,EAAEqS,kBAAvB,UACGjmB,EAAe2C,OAAS,GACvB,eAAC,IAAD,CAAO5B,OAAO,QAAQa,EAAE,IAAIlD,GAAG,IAA/B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,SACGvB,OAKP,eAAC,IAAD,CACE4C,GAAG,aACHC,UAAWtC,EAAOuC,WAClBojB,WAAYL,EAHd,UAKE,cAAC,IAAD,yBAEA,cAAC,IAAD,yBACE1mB,YAAY,aACZT,GAAG,KACCyB,EAAS,aAAc,CACzB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,gCAEXsC,QAAS,CACPD,MAAO,iBACPrC,QAAS,yBAVf,IAaEK,QAAS6kB,EAAgB,SAAW,UACpC3B,OACE2B,EACI,CAAE7L,gBAAiB,YACnB,CAAE7C,YAAa,YAIvB,cAAC,IAAD,UACG5W,EAAOuC,YAAc,mCAAGvC,EAAOuC,WAAWnC,eAI/C,eAAC,IAAD,CACEiC,GAAG,YACHC,UAAWtC,EAAO2C,UAClBgjB,WAAYL,EAHd,UAKE,cAAC,IAAD,wBAEA,cAAC,IAAD,yBACE1mB,YAAY,YACZT,GAAG,KACCyB,EAAS,YAAa,CACxB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,+BAEXsC,QAAS,CACPD,MAAO,iBACPrC,QAAS,yBAVf,IAaEK,QAAS6kB,EAAgB,SAAW,UACpC3B,OACE2B,EACI,CAAE7L,gBAAiB,YACnB,CAAE7C,YAAa,YAIvB,cAAC,IAAD,UACG5W,EAAO2C,WAAa,mCAAG3C,EAAO2C,UAAUvC,eAG7C,cAAC,IAAD,CACEulB,WAAYL,EACZhjB,UAAWtC,EAAOqH,SAClBpG,GAAG,MAGL,eAAC,IAAD,CAAa0kB,WAAYL,EAAehjB,UAAWtC,EAAO4C,MAAO3B,GAAG,IAApE,UACE,cAAC,IAAD,4BACA,cAAC,IAAD,2BACMrB,EAAS,QAAS,CACpB4C,SAAU,CAAEC,OAAO,EAAMrC,QAAS,oBAClCsC,QAAS,CACPD,MAAO,4CACPrC,QAAS,kCALf,IAQEK,QAAS6kB,EAAgB,SAAW,UACpC3B,OACE2B,EACI,CAAE7L,gBAAiB,YACnB,CAAE7C,YAAa,YAGvB,cAAC,IAAD,UACG5W,EAAO4C,OAAS5C,EAAO4C,MAAMxC,aAGlC,cAAC,IAAD,CAAKa,GAAG,IAAI8U,QAAQ,OAAOnV,eAAe,MAA1C,SACG0kB,EACC,mCACE,cAAC,IAAD,CACE3mB,KAAK,SACL8B,QAAQ,UACRsK,GAAG,IACHhM,QAAS,kBAAMwmB,GAAiB,IAJlC,oBAUF,qCACE,cAAC,IAAD,CACE9kB,QAAQ,UACRsK,GAAG,IACHhM,QAASc,GApMJ,SAAA2B,GACjB,IAAMokB,EAAa,GACnB,IAAK,IAAMzlB,KAAOqB,EACZgkB,EAAU/Y,QAAQtM,IAAQqlB,EAAU/Y,QAAQtM,KAASqB,EAAKrB,KAC5DylB,EAAWzlB,GAAOqB,EAAKrB,IAEvBic,OAAOyJ,QAAQD,GAAYxjB,OAAS,EACtCmjB,GAAiB,GAGnBlb,EACGjD,OAAOwe,GACPjkB,MAAK,SAAAC,GACJkI,GAAa,GAEbub,EAAiBzjB,EAAIJ,MACrBrC,EAAM,CACJ6C,MAAO,uBACPC,YAAa,uDACbzB,OAAQ,UACR0B,SAAU,IACVC,YAAY,IAEVyjB,EAAWhjB,OACbzD,EAAM,CACJ6C,MAAO,mBACPC,YACE,0FACFzB,OAAQ,OACR0B,SAAU,IACVC,YAAY,IAGhBqjB,EAAU/Y,QAAV,2BAAyB+Y,EAAU/Y,SAAY7K,EAAIJ,MACnD+jB,GAAiB,MAElB1jB,OAAM,SAAAC,GACLgI,GAAa,GACb,IAAQtI,EAAiBM,EAAjBN,KAAMhB,EAAWsB,EAAXtB,OACdd,EAAkB,IACH,MAAXc,GACFN,EAAasB,SA4JPnC,UAAWA,EAJb,kBAQA,cAAC,IAAD,CAAQ0L,GAAG,IAAIhM,QA5JN,WACnBwmB,GAAiB,GACjBN,EAAMG,IA0JI,gC,iCCrNRU,GAAc,CAClB,KAAM,uCACN,EAAG,kDACH,EAAG,oDACH,EAAG,6CAsQUC,GAnQM,SAAC,GAAwB,IAAtB/jB,EAAqB,EAArBA,MAAU3D,EAAW,kBAC3C,EAAkCC,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAA4CxL,mBAAS,IAArD,mBAAuBoB,GAAvB,WACM8lB,EAAYvZ,iBAAO,CAAEzE,UAAW,KAChCsd,EAAU7Y,mBACV5B,EAAUlD,IAChB,EAAkC7I,oBAAS,GAA3C,mBACA,GADA,UAC0CA,mBAAS,KAAnD,mBAAsB+mB,GAAtB,WACA,EAA0C/mB,oBAAS,GAAnD,mBAAOgnB,EAAP,KAAsBC,EAAtB,KACMpmB,EAAQC,cACd,EAA8Bd,mBAAS,IAAvC,mBAAO0nB,EAAP,KAAgBC,EAAhB,KACA,EAAkC3nB,mBAAS,GAA3C,mBACA,GADA,UAC0CA,mBAAS,KAAnD,mBAAO4nB,EAAP,KAAsBC,EAAtB,KACMC,EAAUna,mBAChB,EASItM,cARFG,EADF,EACEA,SAEAD,GAHF,EAEED,SAFF,EAGEC,cACAE,EAJF,EAIEA,UACAklB,EALF,EAKEA,MACAQ,EANF,EAMEA,SACAY,GAPF,EAOEA,QAsEIC,IA7EN,EAQErmB,UAAaD,OAqEI,SAAAumB,GAIjB,IAHA,IACM/e,EADaf,KAAK+f,MAAMjjB,aAAaI,QAAQ,SAA3C0B,OACiBmC,UACnBif,EAAO,GACb,MAA2BrK,OAAOyJ,QAAQre,GAA1C,eAAsD,CAAjD,0BAAOrH,EAAP,KACG2V,EAAM,CAAErT,MAAOtC,EAAKqL,MADvB,KACoCkb,MAAM,KAAKC,KAAK,MACnDJ,IAAoBK,SAASzmB,KAC/BslB,EAAS,YAAa3P,EAAK,CAAE+Q,gBAAgB,IAC7CrB,EAAU/Y,QAAV,UAAiCqJ,EACjCqQ,EAAiBL,GAAY3lB,KAE/BsmB,EAAKhc,KAAKqL,GAEZmQ,EAAWQ,KAEPvmB,GAAe,SAAAF,GAAW,IAAD,WAClBG,GACG,qBAARA,EACFL,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASJ,EAAOG,GAAK,KAGvBT,GAAkB,SAAAW,GAAI,OAAIA,EAAKC,OAAON,EAAOG,QAPjD,IAAK,IAAMA,KAAOH,EAAS,EAAhBG,IAqCbwN,qBAAU,WACR,IAAMnH,EAAOC,KAAK+f,MAAMjjB,aAAaI,QAAQ,SAC7CyiB,EAAQ3Z,QAAUjG,EAClBif,EACE,mCACAjf,EAAKe,iCACL,CAAEsf,gBAAgB,IAGpBP,GAAW9f,EAAKgB,WAChBge,EAAU/Y,QAAV,iCACEjG,EAAKe,mCAEN,IAKH,OACE,cAAC,GAAD,yBAAuBvF,MAAOA,GAAW3D,GAAzC,IAA+CH,IAAK4mB,EAASziB,GAAG,UAAhE,SACE,cAAC,IAAD,CAAK9B,EAAE,OAAOzB,EAAE,OAAOiQ,SAAS,WAAhC,SACE,iCACE,eAAC,IAAD,CAAa7N,GAAG,IAAhB,UACE,cAAC,IAAD,4DAGA,cAAC,IAAD,CACEqd,KAAK,mCACL8H,QAASA,GACTS,MAAO,CAAEtkB,UAAU,GACnBukB,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,eAAC,KAAD,yBACEhO,KAAK,IACLiO,oBAAoB,EACpBC,IAAK,GACLvB,WAAYL,EACZ6B,WAAY7B,GACR0B,GANN,cAQE,cAAC,KAAD,UACE,cAAC,KAAD,MAEF,cAAC,KAAD,CACE7lB,SAAS,KACTJ,QAAQ,OACRmK,SAAUnL,EAAU,6CAK5B,cAAC,IAAD,UACE,cAAC,IAAD,CAAMoB,SAAS,OAAO8B,MAAM,QAA5B,oFAIF,cAAC,IAAD,OAEF,eAAC,IAAD,CAAa/B,GAAG,IAAhB,UACE,cAAC,IAAD,wBACA,cAAC,IAAD,CACEqd,KAAK,YACL8H,QAASA,GACTU,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAAC,KAAD,2BACMA,GADN,IAEEI,aAAcpB,EAAQ,GACtBA,QAASA,EACTmB,WAAY7B,EACZK,WAAYL,EACZ5T,SAAU,SAAA2V,GAAQ,OAvDT,SAACA,EAAUC,GAClCA,EAAM5V,SAAS2V,GACflB,EAAiBL,GAAYuB,EAAS5kB,QAqDF8kB,CAAiBF,EAAUL,UAIvD,cAAC,IAAD,UACE,cAAC,IAAD,CAAM7lB,SAAS,OAAO8B,MAAM,QAA5B,SACGijB,MAIL,cAAC,IAAD,OAEF,cAAC,IAAD,CAAKjlB,GAAG,IAAI8U,QAAQ,OAAOnV,eAAe,MAA1C,SACG0kB,EACC,mCACE,cAAC,IAAD,CACE3mB,KAAK,SACL8B,QAAQ,UACRsK,GAAG,IACHhM,QAAS,kBAAMwmB,GAAiB,IAJlC,oBAUF,qCACE,cAAC,IAAD,CACE9kB,QAAQ,UACRsK,GAAG,IACHhM,QAASc,GAtNN,SAAA2B,GAWjB,IACE+F,EAEE/F,EAFF+F,iCACa9E,EACXjB,EADFgG,UAAa/E,MAEf4H,EACGjD,OAAO,CAAEG,mCAAkCC,UAAW/E,IACtDd,MAAK,SAAAC,GACJkI,GAAa,GAEbub,EAAiBzjB,EAAIJ,MACrBrC,EAAM,CACJ6C,MAAO,uBACPC,YAAa,uDACbzB,OAAQ,UACR0B,SAAU,IACVC,YAAY,IAYd,IAAQX,EAASI,EAATJ,KACRgkB,EAAU/Y,QAAV,2BACK+Y,EAAU/Y,SADf,IAEElF,iCACE/F,EAAK+F,iCACPC,UAAWhG,EAAKgG,YAElB+d,GAAiB,GAEjBhiB,aAAaC,QAAQ,OAAQiD,KAAKC,UAAU9E,EAAIJ,OAChD8kB,GAAW1kB,EAAIJ,KAAKgG,cAErB3F,OAAM,SAAAC,GACLgI,GAAa,GACb,IAAQtI,EAAiBM,EAAjBN,KAAMhB,EAAWsB,EAAXtB,OACdd,EAAkB,IACH,MAAXc,GACFN,GAAasB,SAgKLnC,UAAWA,EAJb,kBAQA,cAAC,IAAD,CAAQ0L,GAAG,IAAIhM,QAhKR,WACnBwmB,GAAiB,GACjBN,EAAMO,EAAU/Y,UA8JJ,kCCjRD+a,GCQC,WACd,IAAMld,EAAUC,cACVF,EAAUlD,IAUhB,OACE,eAAC,IAAD,CAAKrI,EAAE,OAAP,UACE,cAAC,GAAD,IACA,cAAC,GAAD,UACA,eAAC,IAAD,CAAK2a,gBAAgB,UAAUkF,KAAK,OAAOtd,EAAE,IAA7C,UACE,cAAC,IAAD,CAAK0U,QAAQ,OAAOnV,eAAe,WAAnC,SACE,cAAC,IAAD,CAAQH,QAAQ,UAAU1B,QAfnB,WACbsL,EACGrE,SACArE,MAAK,SAAAC,GACJ0I,EAAQG,KAAK,QAEd5I,SAS8C1D,GAAG,IAAI0gB,SAAU,cAAC,KAAD,IAA5D,sBAIF,cAAC,IAAD,IACA,cAAC,IAAD,UACE,eAAC,KAAD,CAAW4I,eAAa,EAACC,aAAW,EAApC,UACE,cAAC,GAAD,CAAe1lB,MAAM,0BACrB,cAAC,GAAD,CAAUA,MAAM,sBAChB,cAAC,GAAD,CAAcA,MAAM,gCCvB1B2lB,GAAgB,SAAC,GAIhB,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,wBACAC,EACI,EADJA,oBAEA,OACE,mCACGA,EACC,eAAC,IAAD,CACEtnB,OAAO,UACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,gCAGA,cAAC,IAAD,CAAkBC,SAAS,KAA3B,kFAKF,eAAC,IAAD,CACEZ,OAAO,QACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,kCAGA,cAAC,IAAD,CAAkBC,SAAS,KAA3B,gJAIA,cAAC,IAAD,IACA,cAAC,IAAD,CACEX,QAAQ,QACRhC,KAAK,KACLN,GAAG,IACHY,QAAS6oB,EACTvoB,UAAWwoB,EALb,2BCzDKE,GDuEK,WAClB,MAAkCzpB,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAAoDxL,oBAAS,GAA7D,mBAAOwpB,EAAP,KAA4BE,EAA5B,KACA,EAAwC1pB,mBAAS,MAAjD,mBAAO0lB,EAAP,KAAqBC,EAArB,KACA,EAA8D3lB,oBAAS,GAAvE,mBAAOupB,EAAP,KAAgCI,EAAhC,KACA,EAAuB/D,cAAf9d,EAAR,EAAQA,IAAK9C,EAAb,EAAaA,MACPgH,EAAUC,cACVF,EAAUvE,IAChB6H,qBAAU,WACR7D,GAAa,GACbO,EACGlE,aAAa,CAAEC,MAAK9C,UACpB3B,MAAK,SAAAC,GACJkI,GAAa,GACbma,GAAgB,GAChBzH,YAAW,kBAAMlS,EAAQG,KAAK,WAAU,QAEzC5I,OAAM,SAAAC,GACLgI,GAAa,GACbma,GAAgB,QAInB,IAaH,OACE,cAAC,IAAD,CAAQnjB,OAAO,OAAf,SACE,cAAC,IAAD,CAAKP,EAAE,MAAMzB,EAAE,MAAf,SACGO,EACC,cAAC,GAAD,IAEA,mCACG2kB,EACC,eAAC,IAAD,CACExjB,OAAO,UACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,kCAGA,cAAC,IAAD,CAAkBC,SAAS,KAA3B,yEAKF,cAAC,GAAD,CACEwmB,SAvCQ,WACpBK,GAA2B,GAC3B5d,EACGhE,qBACA1E,MAAK,SAAAC,GACJqmB,GAA2B,GAC3BD,GAAqB,MAEtBnmB,OAAM,SAAAC,GACLmmB,GAA2B,OA+BnBJ,wBAAyBA,EACzBC,oBAAqBA,W,mJE+MtBI,GAnTClqB,IAAMC,YAAW,WAW/BC,GAAS,IAVTmb,EAUQ,EAVRA,MACAzW,EASQ,EATRA,MACAL,EAQQ,EARRA,WACAI,EAOQ,EAPRA,UAEAN,GAKQ,EANRiF,MAMQ,EALRjF,IACA0F,EAIQ,EAJRA,cACAogB,EAGQ,EAHRA,SACA9M,EAEQ,EAFRA,SAGA,GADQ,kBACoC/c,mBAAS,KAArD,mBAAOmB,EAAP,KAAuBC,EAAvB,KACA,EAAkCpB,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAA8CxL,oBAAS,GAAvD,mBAAO8pB,EAAP,KAAwBC,EAAxB,KACA,EAA0C/pB,oBAAS,GAAnD,mBAAOgqB,EAAP,KAAsBC,EAAtB,KACA,EAAoChN,eAA5BpB,EAAR,EAAQA,OAAQO,EAAhB,EAAgBA,OAAQR,EAAxB,EAAwBA,QAClB7P,EAAUvC,IACV3I,EAAQC,cACd,EAQIO,cAPFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACA2oB,EAHF,EAGEA,MACA1oB,EAJF,EAIEA,SACAmlB,EALF,EAKEA,MACAhlB,EANF,EAMEA,UACaD,EAPf,EAOEC,UAAaD,OAETyoB,GAAgBD,EAAM,aAAcjmB,GACpCmmB,GAAgBF,EAAM,YAAa7lB,GACnCgmB,GAAaH,EAAM,QAAS5lB,GAE5BgmB,GAAmBJ,EAAM,gBAAiBzgB,GAM1C8gB,GAAe,kBAAMN,GAAiB,IAiEtCroB,GAAe,SAAAF,GAAW,IAAD,WAClBG,GACG,qBAARA,EACFL,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASJ,EAAOG,GAAK,KAGvBT,GAAkB,SAAAW,GAAI,OAAIA,EAAKC,OAAON,EAAOG,QAPjD,IAAK,IAAMA,KAAOH,EAAS,EAAhBG,IAWb,OACE,mCACE,eAAC,KAAD,WACE,cAAC,KAAD,UAAKoC,IACL,cAAC,KAAD,UAAKI,IACL,cAAC,KAAD,UAAKC,IACL,cAAC,KAAD,UAAKmF,EAAgB,MAAQ,OAC7B,eAAC,KAAD,WACE,cAAC,KAAD,CAASyD,MAAM,kBAAkB,aAAW,gBAA5C,SACE,cAAC,KAAD,CAAY/M,KAAK,KAAKga,KAAM,cAAC,KAAD,IAAY1Z,QAAS2b,EAAQtc,EAAE,QAE7D,eAAC,KAAD,CACE0qB,oBAAoB,EACpB3O,OAAQmO,EACRpO,QAAS2O,GACTlZ,UAAU,QACVoZ,aAAa,EALf,UAOE,cAAC,KAAD,CAASvd,MAAM,kBAAkB,aAAW,gBAA5C,SACE,cAAC,KAAD,UACE,cAAC,KAAD,CAASA,MAAM,mBAAmB,aAAW,iBAA7C,SACE,cAAC,KAAD,CACE/M,KAAK,KACLga,KAAM,cAAC,KAAD,IACN1Z,QAtGI,kBAAMwpB,GAAkBD,IAuG5B9H,QAAQ,UACRpiB,EAAE,YAKV,eAAC,KAAD,WACE,cAAC,KAAD,CAAeqW,WAAW,WAA1B,0BACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,4DAGA,cAAC,KAAD,CAAeuU,EAAE,OAAOpoB,eAAe,WAAvC,SACE,eAAC,KAAD,CAAanC,KAAK,KAAlB,UACE,cAAC,IAAD,CAAQgC,QAAQ,UAAU1B,QAAS8pB,GAAnC,oBAGA,cAAC,IAAD,CACEvP,YAAY,MACZva,QAAS,kBAlHzBspB,GAAmB,QACnBhe,EACGpC,cAAc5F,GACdV,MAAK,SAAAC,GACJymB,GAAmB,GACnBQ,KACAxN,EAAShC,GACTla,EAAM,CACJ6C,MAAO,WACPC,YAAa,8CACbzB,OAAQ,UACR0B,SAAU,IACVC,YAAY,OAGfN,OAAM,SAAAC,GACL,IACE+mB,KACAR,GAAmB,GAEnB,MAAOvmB,GACP3C,EAAM,CACJ6C,MAAO,UACPC,YACE,0DACFzB,OAAQ,QACR0B,SAAU,IACVC,YAAY,SAwFJ9C,UAAW+oB,EAHb,+BAYR,eAAC,KAAD,CACEjO,OAAQA,EACRD,QArIY,WAChBja,EAAUiG,SACZgU,IAEF+K,EAAM,KAmIExmB,KAAK,MAJP,UAME,cAAC,KAAD,IACA,+BACE,eAAC,KAAD,WACE,cAAC,KAAD,sBACA,eAAC,KAAD,WACGgB,EAAe2C,OAAS,GACvB,eAAC,IAAD,CAAO5B,OAAO,QAAQa,EAAE,IAAIlD,GAAG,IAA/B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,SACGvB,OAKP,eAAC,IAAD,CAAa4C,GAAG,aAAaC,UAAWtC,EAAOuC,WAA/C,UACE,cAAC,IAAD,yBAEA,cAAC,IAAD,aACE3D,YAAY,aACZT,GAAG,KACCyB,EAAS,aAAc,CACzB6C,MAAOgmB,GACPjmB,SAAU,CACRC,OAAO,EACPrC,QAAS,gCAEXsC,QAAS,CACPD,MAAO,iBACPrC,QAAS,0BAKf,cAAC,IAAD,UACGJ,EAAOuC,YAAc,mCAAGvC,EAAOuC,WAAWnC,eAI/C,eAAC,IAAD,CAAaiC,GAAG,YAAYC,UAAWtC,EAAO2C,UAA9C,UACE,cAAC,IAAD,wBAEA,cAAC,IAAD,aACE/D,YAAY,YACZT,GAAG,KACCyB,EAAS,YAAa,CACxB6C,MAAOimB,GACPlmB,SAAU,CACRC,OAAO,EACPrC,QAAS,+BAEXsC,QAAS,CACPD,MAAO,iBACPrC,QAAS,0BAKf,cAAC,IAAD,UACGJ,EAAO2C,WAAa,mCAAG3C,EAAO2C,UAAUvC,eAG7C,eAAC,IAAD,CAAakL,GAAG,IAAIhJ,UAAWtC,EAAO4C,MAAtC,UACE,cAAC,IAAD,oBACA,cAAC,IAAD,aACEhE,YAAY,SACRgB,EAAS,QAAS,CACpB6C,MAAOkmB,GACPnmB,SAAU,CAAEC,OAAO,EAAMrC,QAAS,oBAClCsC,QAAS,CACPD,MAAO,4CACPrC,QAAS,mCAKf,cAAC,IAAD,UACGJ,EAAO4C,OAAS5C,EAAO4C,MAAMxC,aAGlC,eAAC,IAAD,CAAakL,GAAG,IAAIhJ,UAAWtC,EAAOsH,MAAtC,UACE,cAAC,IAAD,2BACA,cAAC,IAAD,aACE1I,YAAY,SACRgB,EAAS,QAAS,CACpB8C,QAAS,CACPD,MAAO,mBACPrC,QAAS,kCAIf,cAAC,IAAD,UACGJ,EAAOsH,OAAStH,EAAOsH,MAAMlH,aAGlC,eAAC,IAAD,CAAa2V,QAAQ,OAAOpV,WAAW,SAAS2K,GAAG,IAAnD,UACE,cAAC,IAAD,CAAW2d,QAAQ,eAAe/nB,GAAG,IAArC,kCAGA,cAAC,KAAD,yBACEmB,GAAG,gBACCzC,EAAS,gBAAiB,CAC5B6C,MAAOmmB,MAHX,IAKEtP,YAAY,aACZ4P,QAASN,YAKf,eAAC,KAAD,WACE,cAAC,IAAD,CAAQtP,YAAY,OAAOtY,GAAI,EAAGjC,QA7PjC,WACfkmB,EAAM,IACN/K,KA2Pc,mBAGA,cAAC,IAAD,CACEzZ,QAAQ,UACR1B,QAASc,GArNN,SAAA2B,GACnBsI,GAAa,GACbO,EACGjD,OADH,2BACe5F,GADf,IACqBa,QAClBV,MAAK,SAAAC,GACJkI,GAAa,GACbqe,EAAS,CAAE9O,QAAO7X,KAAMI,EAAIJ,OAC5B0Y,IACA/a,EAAM,CACJ6C,MAAO,SACPC,YAAa,+CACbzB,OAAQ,UACR0B,SAAU,IACVC,YAAY,OAGfN,OAAM,SAAAC,GACLgI,GAAa,GACb,MAAyBhI,EAAMC,SAAvBP,EAAR,EAAQA,KAAMhB,EAAd,EAAcA,OACdd,EAAkB,IACH,MAAXc,GACFN,GAAasB,SAiMHmJ,SAAUtL,GAAaY,EAAUiG,QACjC7G,UAAWA,EAJb,0CChIH8pB,GA9KI,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUjP,EAA8B,EAA9BA,OAAgBD,GAAc,EAAtBQ,OAAsB,EAAdR,SACxC/a,EAAQC,cACRiL,EAAUvC,IAChB,EAAkCxJ,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAA4CxL,mBAAS,IAArD,mBAAOmB,EAAP,KAAuBC,EAAvB,KACA,EAMIC,cALFC,EADF,EACEA,SACAE,EAFF,EAEEA,SAEAD,EAJF,EAIEA,aACaG,EALf,EAKEC,UAAaD,OAwCf,OACE,cAAC,KAAD,CAAOka,QAASA,EAASC,OAAQA,EAAQ1b,KAAK,MAA9C,SACE,iCACE,cAAC,KAAD,IACA,eAAC,KAAD,WACE,cAAC,KAAD,kCAEA,eAAC,KAAD,CAAWK,EAAE,OAAb,UACGW,EAAe2C,OAAS,GACvB,eAAC,IAAD,CAAO5B,OAAO,QAAQa,EAAE,IAAIlD,GAAG,IAA/B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,SACGvB,OAKP,eAAC,IAAD,CAAa4C,GAAG,aAAaC,UAAWtC,EAAOuC,WAA/C,UACE,cAAC,IAAD,yBAEA,cAAC,IAAD,aACE3D,YAAY,aACZT,GAAG,KACCyB,EAAS,aAAc,CACzB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,gCAEXsC,QAAS,CACPD,MAAO,iBACPrC,QAAS,0BAKf,cAAC,IAAD,UACGJ,EAAOuC,YAAc,mCAAGvC,EAAOuC,WAAWnC,eAI/C,eAAC,IAAD,CAAaiC,GAAG,YAAYC,UAAWtC,EAAO2C,UAA9C,UACE,cAAC,IAAD,wBAEA,cAAC,IAAD,aACE/D,YAAY,YACZT,GAAG,KACCyB,EAAS,YAAa,CACxB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,+BAEXsC,QAAS,CACPD,MAAO,iBACPrC,QAAS,0BAKf,cAAC,IAAD,UACGJ,EAAO2C,WAAa,mCAAG3C,EAAO2C,UAAUvC,eAG7C,eAAC,IAAD,CAAakL,GAAG,IAAIhJ,UAAWtC,EAAO4C,MAAtC,UACE,cAAC,IAAD,oBACA,cAAC,IAAD,aACEhE,YAAY,SACRgB,EAAS,QAAS,CACpB4C,SAAU,CAAEC,OAAO,EAAMrC,QAAS,oBAClCsC,QAAS,CACPD,MAAO,4CACPrC,QAAS,mCAIf,cAAC,IAAD,UACGJ,EAAO4C,OAAS5C,EAAO4C,MAAMxC,aAGlC,eAAC,IAAD,CAAakL,GAAG,IAAIhJ,UAAWtC,EAAOsH,MAAtC,UACE,cAAC,IAAD,2BACA,cAAC,IAAD,aACE1I,YAAY,SACRgB,EAAS,QAAS,CACpB4C,UAAU,EACVE,QAAS,CACPD,MAAO,mBACPrC,QAAS,kCAIf,cAAC,IAAD,UACGJ,EAAOsH,OAAStH,EAAOsH,MAAMlH,aAGlC,eAAC,IAAD,CAAa2V,QAAQ,OAAOpV,WAAW,SAAS2K,GAAG,IAAnD,UACE,cAAC,IAAD,CAAW2d,QAAQ,eAAe/nB,GAAG,IAArC,8BAGA,cAAC,KAAD,aACEmB,GAAG,eACHiX,YAAY,cACR1Z,EAAS,yBAInB,eAAC,KAAD,WACE,cAAC,IAAD,CAAQb,QAASmb,EAASnP,GAAG,IAAItK,QAAQ,UAAzC,mBAGA,cAAC,IAAD,CACE1B,QAASc,GAvIW,SAAA2B,GAC9BsI,GAAa,GACbO,EACG1F,OAAOnD,GACPG,MAAK,SAAAC,GACJkI,GAAa,GACbsf,EAASxnB,EAAIJ,MACbrC,EAAM,CACJ6C,MAAO,WACPC,YAAa,8CACbzB,OAAQ,UACR0B,SAAU,IACVC,YAAY,IAEd+X,OAEDrY,OAAM,SAAAC,GACLgI,GAAa,GACb,MAAyBhI,EAAMC,SAAvBP,EAAR,EAAQA,KAAMhB,EAAd,EAAcA,OACdd,EAAkB,IACH,MAAXc,GAhCW,SAAAR,GAAW,IAAD,WAClBG,GACG,qBAARA,EACFL,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASJ,EAAOG,GAAK,KAGvBT,GAAkB,SAAAW,GAAI,OAAIA,EAAKC,OAAON,EAAOG,QAPjD,IAAK,IAAMA,KAAOH,EAAS,EAAhBG,GAgCLD,CAAasB,SAmHTuJ,GAAG,IACH1L,UAAWA,EAHb,wBA3GN,UC3ESgqB,GCyBE,WACf,MAAsC/qB,mBAAS,IAA/C,mBAAO+W,EAAP,KAAoBC,EAApB,KACA,EAA0ChX,oBAAS,GAAnD,mBAAOgrB,EAAP,KAAsBC,EAAtB,KACA,EAAoChO,eAA5BpB,EAAR,EAAQA,OAAQO,EAAhB,EAAgBA,OAAQR,EAAxB,EAAwBA,QAClB7P,EAAUvC,IAEV0hB,EAAuB,SAAC,GAAqB,IAAnBnQ,EAAkB,EAAlBA,MAAO7X,EAAW,EAAXA,KAC/BioB,EAAe,aAAOpU,GAC5BoU,EAAgBpQ,GAAS7X,EACzB8T,EAAemU,IAEXC,EAAuB,SAAArQ,GAC3B,IAAMoQ,EAAe,aAAOpU,GAC5BoU,EAAgB1I,OAAO1H,EAAO,GAC9B/D,EAAemU,IAoBjB,OAbA9b,qBAAU,WACR4b,GAAiB,GACjBlf,EACGlC,UACAxG,MAAK,SAAAC,GACJ2nB,GAAiB,GACjBjU,EAAe1T,EAAIJ,SAEpBK,OAAM,SAAAC,GACLynB,GAAiB,QAGpB,IACCD,EAEA,eAAC,IAAD,CAAKxqB,EAAE,OAAP,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAUA,EAAE,OAAZ,SACE,cAAC,GAAD,CAASmC,GAAG,IAAKb,QAAQ,iBAO/B,mCACE,eAAC,IAAD,CAAKtB,EAAE,OAAP,UACE,cAAC,GAAD,IACA,cAAC,GAAD,UAC0B,IAAvBuW,EAAYjT,OACX,eAAC,IAAD,CACE5B,OAAO,OACPC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,2BAGA,cAAC,IAAD,CAAkBC,SAAS,KAA3B,gEAGA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQX,QAAQ,QAAQhC,KAAK,KAAKN,GAAG,IAAIY,QAAS2b,EAAlD,mCAKF,qCACE,eAAC,KAAD,CAAOja,QAAQ,UAAU6Y,YAAY,OAAOnb,GAAG,IAA/C,UACE,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,yBACA,cAAC,KAAD,wBACA,cAAC,KAAD,oBACA,cAAC,KAAD,2BACA,cAAC,KAAD,SAGJ,cAAC,KAAD,UACGkX,EAAYM,KAAI,SAACnU,EAAM6X,GAAP,OACf,cAAC,GAAD,yBAEEkF,KAAM/c,EAAK6F,SACXgS,MAAOA,GACH7X,GAJN,IAKE2mB,SAAUqB,EACVnO,SAAUqO,IALLrQ,WAWb,cAAC,IAAD,CACE5a,KAAK,OACL4M,GAAG,QACHpI,MAAM,QACN8L,SAAS,QACTE,OAAO,IACPD,MAAM,IACNG,OAAO,UACPpQ,QAAS2b,EARX,SAUE,cAAC,KAAD,CAAMpZ,GAAIqoB,KAAsB5oB,QAAQ,aAKhD,cAAC,GAAD,CACEmZ,QAASA,EACTQ,OAAQA,EACRP,OAAQA,EACRiP,SArGgB,SAAA5nB,GACtB,IAAMooB,EAAc,uBAAOvU,GAAP,CAAoB7T,IACxC8T,EAAesU,EAAeC,oBCenBC,GA/CK,WAClB,MAAkCxrB,oBAAS,GAA3C,mBAAkBwL,GAAlB,WACA,EAAoCxL,oBAAS,GAA7C,mBAAOyrB,EAAP,KAAmBC,EAAnB,KACQ7pB,EAAQ+jB,cAAR/jB,IACFmK,EAAUC,cAsBhB,OApBAoD,qBAAU,WACR7D,GAAa,GACbrI,IACGC,KADH,UACWzC,EADX,2CACkE,CAAEkB,IAAKA,IACtEwB,MAAK,SAAAC,GACJkI,GAAa,GACbkgB,GAAc,GACdxN,YAAW,WACTlS,EAAQG,KAAK,YACZ,QAEJ5I,OAAM,SAAAC,GACLgI,GAAa,GACMhI,EAAMC,SAAjBvB,YAMZ,IAEA,cAAC,IAAD,CAAQ1B,EAAE,OAAV,SACE,cAAC,IAAD,CAAKyB,EAAE,MAAP,SACGwpB,EACC,eAAC,IAAD,CAAOvpB,OAAO,UAAd,UACE,cAAC,IAAD,IADF,mCAKA,eAAC,IAAD,CAAQ1B,EAAE,OAAV,UACE,cAAC,IAAD,CAASV,EAAE,IAAIiD,EAAE,IAAIC,GAAG,KAAxB,2BAGA,cAAC,KAAD,CAAS0J,UAAU,MAAMvM,KAAK,eCwD3BwrB,GAzFK,WAChB,MAKMtqB,cAJFC,EADJ,EACIA,SACAE,EAFJ,EAEIA,SACAD,EAHJ,EAGIA,aACaG,EAJjB,EAIIC,UAAaD,OAGf,EAA4C1B,oBAAS,GAArD,mBAAOiB,EAAP,KAAuBC,EAAvB,KAwBA,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQsB,OAAO,OAAOP,EAAE,OAAxB,SACE,cAAC,IAAD,CAASc,EAAE,IAAIlD,GAAG,KAAKmD,GAAG,KAAK7C,KAAK,MAApC,uCAKF,sBAAM8C,SAAU1B,GAhCL,SAAA2B,GAEfC,IACGC,KADH,UACWzC,EADX,4CACmEuC,GAChEG,MAAK,YAAsB,EAAnBnB,OAAmB,EAAXgB,KACfhC,GAAkB,MAEnBqC,OAAM,SAAAC,GAEL,GADAtC,GAAkB,GACdsC,EAAMC,SAAU,CAClB,MAAyBD,EAAMC,SAAvBP,EAAR,EAAQA,KAER,GAAe,MAFf,EAAchB,OAGZ,IAAK,IAAML,KAAOqB,EAChB1B,EAASK,EAAK,CACZxB,KAAM,QACNyB,QAASoB,EAAKrB,GAAK,YAgB3B,SACE,eAAC,IAAD,WACGZ,GACC,eAAC,IAAD,CAAOiB,OAAO,UAAUa,EAAE,IAAIlD,GAAG,IAAjC,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,4DAKHhB,EAAOokB,kBACN,eAAC,IAAD,CAAO5jB,OAAO,QAAQa,EAAE,IAAIlD,GAAG,IAA/B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAkBkD,EAAE,IAAIL,GAAG,IAA3B,SACGhB,EAAOokB,iBAAiBhkB,aAI/B,eAAC,IAAD,CAAaiC,GAAG,QAAQC,UAAWtC,EAAO4C,MAAOzE,GAAG,IAApD,UACE,cAAC,IAAD,oBACA,cAAC,IAAD,aACEQ,KAAK,SACDiB,EAAS,QAAS,CACpB4C,SAAU,CACRC,OAAO,EACPrC,QAAS,mCAEXsC,QAAS,CACPD,MAAO,4CACPrC,QAAS,mCAIf,cAAC,IAAD,UACGJ,EAAO4C,OAAS5C,EAAO4C,MAAMxC,aAGlC,cAAC,IAAD,CAAQzB,KAAK,SAASR,GAAG,IAAzB,gC,8BCrDD+rB,GAjCA,WACb,IAAMzrB,EAAO0rB,aAAmB,CAC9BC,KAAM,KACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OAEAlgB,EAAUC,cAIhB,OACE,cAAC,IAAD,CAAKe,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAS7M,KAAK,KAAK6C,GAAG,KAAtB,SACGtC,MAGL,cAAC,KAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQgC,GAAG,IAAIvC,KAAMA,EAAMM,QAZd,kBAAMuL,EAAQG,KAAK,cAYhC,qBAGA,cAAC,IAAD,CAAQhK,QAAQ,UAAUhC,KAAMA,EAAMM,QAhB1B,kBAAMuL,EAAQG,KAAK,WAgB/B,6BC/BK,SAASggB,KACtB,IAAMngB,EAAUC,cAEhB,OACE,eAAC,IAAD,CACEzL,EAAE,QACFqM,GAAI,CAAC,IAAK,KAAM,MAChBuf,QAAQ,gCACRC,eAAe,QACfC,WAAW,cACXC,SAAS,YACTC,aAAa,SAPf,UASE,cAAC,GAAD,IACA,eAAC,IAAD,CAAMhsB,EAAE,MAAM4B,cAAe,CAAC,SAAU,OAAxC,UACE,cAAC,IAAD,CAAKH,EAAG,CAAC,OAAQ,OAAQ+K,GAAI,CAAC,KAAM,KAApC,SACE,cAAC,IAAD,CAAMxM,EAAE,OAAO8B,eAAe,eAA9B,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CACE0K,GAAI,CAAC,IAAK,KACVhK,GAAG,KACHH,SAAU,CAAC,SAAU,SAAU,SAAU,QAH3C,6BAKkB,uBALlB,qBAOA,cAAC,IAAD,CACEA,SAAU,CAAC,OAAQ,UACnBhD,GAAI,CAAC,IAAK,KACV8E,MAAM,WAHR,2GAQA,cAAC,KAAD,IACA,cAAC,IAAD,CAAQxC,QAAQ,QAAQrC,EAAE,IAAIK,KAAK,KAAKM,QAhC/B,kBAAMuL,EAAQG,KAAK,cAgC5B,4BAMN,cAAC,IAAD,CACE3L,EAAE,OACF4rB,QAAQ,+BACRC,eAAe,UACfC,WAAW,SACXC,SAAS,YACTtqB,EAAG,CAAC,OAAQ,e,cCzChBwqB,GAAsB,CAC1B,CACE/oB,MAAO,aACPgpB,UACE,uHAEJ,CACEhpB,MAAO,aACPgpB,UACE,uHAGJ,CACEhpB,MAAO,mBACPgpB,UACE,wHAeS,SAASC,KACtB,OACE,eAAC,IAAD,CAAK9f,GAAI,CAAC,IAAK,IAAK,KAAM,MAAQjK,GAAG,KAArC,UACE,cAAC,IAAD,CAAK/C,GAAI,CAAC,KAAM,MAAhB,SAEI,eAAC,IAAD,WACE,cAAC,IAAD,CACEmD,GAAG,KACHnD,GAAG,IACHgD,SAAU,CAAC,SAAU,UACrB1C,KAAK,MAJP,kCAQA,cAAC,IAAD,CAAM8B,EAAG,CAAC,OAAQ,OAAQ,OAAQkU,WAAW,OAAOxR,MAAM,WAAWxE,KAAK,MAA1E,qMAQN,cAAC,IAAD,UACE,eAAC,IAAD,CAAMiC,cAAe,CAAC,iBAAkB,iBAAkB,OAA1D,UACE,cAAC,IAAD,CAAKH,EAAG,CAAC,OAAQ,OAAQ,OAAQ4K,GAAI,CAAC,IAAK,IAAK,MAAhD,SAEK4f,GAAoBpV,KAAI,SAACuV,GAAD,OAtCLlpB,EAuCFkpB,EAAKlpB,MAvCIgpB,EAuCGE,EAAKF,UArC7C,eAAC,IAAD,CAAK1f,GAAG,IAAgB+U,UAAW,MAAOhf,EAAE,IAAIlD,GAAG,IAAImiB,QAAQ,KAAKrf,GAAG,IAAvE,UACE,cAAC,IAAD,CAASK,GAAG,KAAKnD,GAAG,IAAIgD,SAAU,CAAC,OAAQ,QAA3C,SACGa,IAEH,cAAC,IAAD,CAAMzB,EAAG,CAAC,OAAQ,OAAQ,OAAQkU,WAAW,OAAOtT,SAAU,CAAC,UAAW8B,MAAM,WAAhF,SACG+nB,MALYhpB,GAFG,IAAUA,EAAOgpB,OA4C/B,cAAC,IAAD,CACEzqB,EAAG,CAAC,OAAQ,OAAQ,OACpBzB,EAAE,OACFwM,GAAG,KACHqf,eAAe,UACfC,WAAW,SACXC,SAAS,YANX,SAQE,cAAC,KAAD,CAAO3S,IAAI,yBAAyBiT,IAAI,4BC5EpD,IAQeC,GARG,SAAC,GAAgB,IAAflgB,EAAc,EAAdA,SAChB,OACG,cAAC,IAAD,CAAKC,GAAI,CAAC,IAAI,KAAK,MAAnB,SACKD,KCHNmgB,GAAc,CAClB,CACEC,OAAQ,EACRN,UAAW,yBAEb,CACEM,OAAQ,EACRN,UACE,uIAEJ,CACEM,OAAQ,EACRN,UACE,6HAGJ,CACEM,OAAQ,EACRN,UACE,8GAGAO,GAAU,SAAC,GAA2B,IAAzBD,EAAwB,EAAxBA,OAAQN,EAAgB,EAAhBA,UACzB,OACE,eAAC,IAAD,CACE3K,UAAU,KACVhf,EAAE,IACFif,QAAQ,KACRliB,EAAE,IACF4a,KAAK,IACLwJ,UAAW,CAAC,OAAQ,OACpB1T,OAAO,MACP8H,YAAY,WARd,UAUE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQ9H,OAAO,MAAM8H,YAAY,QAAQvV,EAAE,IAA3C,SACE,cAAC,IAAD,CAASC,GAAG,KAAZ,SAAkBgqB,QAGtB,eAAC,IAAD,CAAQjqB,EAAG,CAAC,EAAG,GAAf,UACG,IACD,eAAC,IAAD,CAAMoT,WAAW,OAAjB,cAA0BuW,EAA1B,cAMO,SAASQ,KACtB,OACE,cAAC,IAAD,CAAK1sB,EAAE,QAAP,SACE,eAAC,GAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEwC,GAAG,KACHnD,GAAG,KACHgD,SAAU,CAAC,SAAU,SAAU,SAAU,QAH3C,4BAQF,cAAC,IAAD,CAAMhD,GAAG,IAAIokB,SAAU,CAAC,OAAQ,OAAQ,QAAxC,SACG8I,GAAY1V,KAAI,SAACuV,EAAM7R,GAAP,OACf,cAAC,GAAD,CAEEiS,OAAQJ,EAAKI,OACbN,UAAWE,EAAKF,WAFX3R,aCrDJ,SAASoS,KACtB,OACE,qCACA,eAAC,IAAD,WACE,cAAChB,GAAD,IACA,cAACQ,GAAD,IACA,cAACO,GAAD,OAGF,cAAC,IAAD,CACIvqB,GAAG,KACHoK,GAAIqgB,aAAkB,UAAW,YACjCzoB,MAAOyoB,aAAkB,WAAY,YAHzC,SAKI,cAAC,KAAD,CACEpqB,GAAIqqB,IACJC,KAAM,MACNtgB,GAAI,EACJugB,UAAW,CAAEzB,KAAM,SAAUC,GAAI,OACjC9e,QAAS,EACTugB,QAAS,CAAE1B,KAAM,SAAUC,GAAI,iBAC/B0B,MAAO,CAAE3B,KAAM,SAAUC,GAAI,UAP/B,SAUE,eAAC,IAAD,wBAAcrrB,EAAd,4CCzBV,IAAMgtB,GAAW,SAAC,GAA4C,IAAD,IAAzCxrB,cAAyC,MAAhC,UAAgC,EAArBwB,EAAqB,EAArBA,MAAO5B,EAAc,EAAdA,QAC7C,OACE,eAAC,IAAD,CACEI,OAAQA,EACRC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,SACGa,IAEH,cAAC,IAAD,CAAkBZ,SAAS,KAA3B,SAAiChB,QAsCxB6rB,GAlCU,WACvB,MAAkC3tB,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAAsCxL,oBAAS,GAA/C,mBAAO4tB,EAAP,KAAoBC,EAApB,KACQrlB,EAAiBod,cAAjBpd,aACFuD,EAAU/D,IAchB,OAbAqH,qBAAU,WACRtD,EACGxD,iBAAiB,CAACC,iBAClBnF,MAAK,SAAAyqB,GACJtiB,GAAa,GACbqiB,GAAe,MAEhBtqB,OAAM,SAAAC,GACLgI,GAAa,GACbqiB,GAAe,QAGlB,IACC9sB,EAAkB,cAAC,GAAD,CAASe,QAAQ,gBAGnC,cAAC,IAAD,CAAKtB,EAAE,OAAP,SACE,cAAC,IAAD,CAAQV,EAAE,OAAOU,EAAE,OAAOyB,EAAE,MAA5B,SACG2rB,EACC,cAAC,GAAD,CAAUlqB,MAAM,cAEhB,cAAC,GAAD,CAAUA,MAAM,SAASxB,OAAO,eCnCtCwrB,GAAW,SAAC,GAA4C,IAAD,IAAzCxrB,cAAyC,MAAhC,UAAgC,EAArBwB,EAAqB,EAArBA,MAAO5B,EAAc,EAAdA,QAC7C,OACE,eAAC,IAAD,CACEI,OAAQA,EACRC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,SACGa,IAEH,cAAC,IAAD,CAAkBZ,SAAS,KAA3B,SAAiChB,QAIjCisB,GAAa,SAAC,GAAsB,IAApBvlB,EAAmB,EAAnBA,aACpB,EAA4B9I,IAAMM,UAAS,GAA3C,mBAAO6b,EAAP,KAAemS,EAAf,KAEMC,EAAQ,kBAAMD,GAAU,IACxBjiB,EAAU/D,IAChB,EAAkChI,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAAsCxL,oBAAS,GAA/C,mBAAO4tB,EAAP,KAAoBC,EAApB,KACA,EAAoC7tB,oBAAS,GAA7C,mBAAOkuB,EAAP,KAAmBC,EAAnB,KACMC,EAAa,SAAAjqB,GACjBqH,GAAa,GAEbO,EACGpD,KAAK,CAAEH,eAAcI,WAAYzE,IACjCd,MAAK,SAAAyqB,GACJtiB,GAAa,GACb2iB,GAAc,GACdN,GAAe,MAEhBtqB,OAAM,SAAAC,GACLgI,GAAa,GACb2iB,GAAc,GACdN,GAAe,OAGrB,OAAI9sB,EAAkB,cAAC,GAAD,CAASe,QAAQ,gBACnCosB,EAEA,cAAC,IAAD,CACEjsB,EAAE,OACFwV,QAAQ,OACRrV,cAAc,SACdE,eAAe,eAJjB,SAMGsrB,EACC,cAAC,GAAD,CACElqB,MAAM,iBACN5B,QAAQ,6CAGV,cAAC,GAAD,CAAU4B,MAAM,cAAcxB,OAAO,YAM3C,eAAC,IAAD,CACED,EAAE,OACFwV,QAAQ,OACRrV,cAAc,SACdE,eAAe,eAJjB,UAME,cAAC,GAAD,CAAUoB,MAAM,SAASxB,OAAO,SAEhC,eAAC,IAAD,CAAKuV,QAAQ,OAAOnV,eAAe,eAAezC,GAAG,IAArD,UACE,cAAC,IAAD,CACEM,KAAK,KACLgb,gBAAgB,YAChB1a,QAAS,kBAAM2tB,EAAW,IAH5B,iBAQA,eAAC,KAAD,CACE5D,oBAAoB,EACpB3O,OAAQA,EACRD,QAASqS,EACT5c,UAAU,QACVoZ,aAAa,EALf,UAOE,cAAC,KAAD,UACE,cAAC,IAAD,CAAQtqB,KAAK,KAAKgb,gBAAgB,UAAU1a,QAAS,kBApE5CutB,GAAWnS,IAoEpB,kBAIF,eAAC,KAAD,WACE,cAAC,KAAD,CAAe1F,WAAW,WAA1B,0BACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,6CACA,cAAC,KAAD,CAAeuU,EAAE,OAAOpoB,eAAe,WAAvC,SACE,eAAC,KAAD,CAAanC,KAAK,KAAlB,UACE,cAAC,IAAD,CAAQgC,QAAQ,UAAU1B,QAASwtB,EAAnC,oBAGA,cAAC,IAAD,CAAQjT,YAAY,MAAMva,QAAS,kBAAM2tB,EAAW,IAApD,uCA2CDC,GAhCF,WACX,MAAkCruB,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAAsCxL,oBAAS,GAA/C,mBAAO4tB,EAAP,KAAoBC,EAApB,KACQrlB,EAAiBod,cAAjBpd,aACFuD,EAAU/D,IAchB,OAbAqH,qBAAU,WACRtD,EACGtD,gBAAgB,CAAED,iBAClBnF,MAAK,SAAAyqB,GACJtiB,GAAa,GACbqiB,GAAe,MAEhBtqB,OAAM,SAAAC,GACLgI,GAAa,GACbqiB,GAAe,QAGlB,IACC9sB,EAAkB,cAAC,GAAD,CAASe,QAAQ,gBAErC,cAAC,IAAD,CAAKtB,EAAE,OAAP,SACE,cAAC,IAAD,CAAQV,EAAE,OAAOU,EAAE,OAAOyB,EAAE,MAA5B,SACG2rB,EACC,cAAC,GAAD,CAAYplB,aAAcA,IAE1B,cAAC,GAAD,CAAU9E,MAAM,SAASxB,OAAO,e,UCjJpCwrB,I,OAAW,SAAC,GAA4C,IAAD,IAAzCxrB,cAAyC,MAAhC,UAAgC,EAArBwB,EAAqB,EAArBA,MAAO5B,EAAc,EAAdA,QAC7C,OACE,eAAC,IAAD,CACEI,OAAQA,EACRC,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,SACGa,IAEH,cAAC,IAAD,CAAkBZ,SAAS,KAA3B,SAAiChB,SAIjCwsB,GAAc,SAAC,GAAc,IAAZprB,EAAW,EAAXA,KACrB,IAAKA,EAAM,OAAO,cAAC,GAAD,CAASpB,QAAQ,gBACnC,IAAMkI,EAAa9G,EAAK8G,WAClBD,EAAO7G,EAAK6G,KAClB,OACE,mCACkB,UAAfC,EACC,mCACE,cAAC,KAAD,CACE2F,MAAO,CAAEwL,gBAAiB,WAC1BvB,IAAK7P,EACLwkB,yBAA0B,OAI9B,cAAC,UAAD,CACE3U,IAAK7P,EACLiQ,aAAW,EACXC,UAAQ,EACRuU,QAAQ,WACRC,OAAO,OA4CFC,GAtCF,WACX,MAAkC1uB,oBAAS,GAA3C,mBAAOe,EAAP,KAAkByK,EAAlB,KACA,EAAsCxL,oBAAS,GAA/C,mBAAO4tB,EAAP,KAAoBC,EAApB,KACQrlB,EAAiBod,cAAjBpd,aACR,EAAwBxI,mBAAS,MAAjC,mBAAOkD,EAAP,KAAayrB,EAAb,KACM5iB,EAAU/D,IAmBhB,OAlBAqH,qBAAU,WACRtD,EACG3I,KAAK,CAAEoF,iBACPnF,MAAK,SAAAyqB,GACJtiB,GAAa,GACbqiB,GAAe,GACf,IAAQ3qB,EAAS4qB,EAAT5qB,KAERyrB,EAAQzrB,MAETK,OAAM,SAAAC,GACLgI,GAAa,GACbqiB,GAAe,MAEnBriB,GAAa,GACbqiB,GAAe,KAEd,IACC9sB,EAAkB,cAAC,GAAD,CAASe,QAAQ,gBAErC,cAAC,IAAD,CAAKtB,EAAE,OAAP,SACE,cAAC,IAAD,CAAQV,EAAE,OAAOU,EAAE,MAAMyB,EAAE,MAAM+iB,QAAQ,IAAzC,SACG4I,EACC,cAAC,GAAD,CAAa1qB,KAAMA,IAEnB,cAAC,GAAD,CAAUQ,MAAM,SAASxB,OAAO,eCtC3B0sB,OAhCf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAgBvK,MAAOA,GAAvB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO2B,KAAK,YAAYE,UAAWtlB,IACnC,cAAC,IAAD,CAAOolB,KAAK,SAASE,UAAW5a,KAChC,cAAC,IAAD,CAAO0a,KAAK,QAAQE,UAAW1C,KAC/B,cAAC,IAAD,CAAOwC,KAAK,YAAYE,UAAW6E,KACnC,cAAC,IAAD,CAAO/E,KAAK,WAAWE,UAAWgD,KAClC,cAAC,IAAD,CAAOlD,KAAK,WAAWE,UAAWC,KAClC,cAAC,IAAD,CAAOH,KAAK,qBAAqBE,UAAWsF,KAC5C,cAAC,IAAD,CAAOxF,KAAK,iBAAiBE,UAAWyF,KACxC,cAAC,IAAD,CAAO3F,KAAK,8BAA8BE,UAAWyH,KACrD,cAAC,IAAD,CAAO3H,KAAK,sBAAsBE,UAAWwI,KAC7C,cAAC,IAAD,CAAO1I,KAAK,sBAAsBE,UAAWmI,KAC7C,cAAC,IAAD,CACErI,KAAK,uCACLE,UAAWT,KAEb,cAAC,IAAD,CAAOO,KAAK,6BAA6BE,UAAWuD,KACpD,cAAC,IAAD,CAAOzD,KAAK,WAAWE,UAAWH,KAElC,cAAC,IAAD,CAAOC,KAAK,IAAI6I,OAAK,EAAC3I,UAAWiH,KACjC,cAAC,IAAD,CAAOjH,UAAW9B,aCnCb0K,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3rB,MAAK,YAAkD,IAA/C4rB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCKMO,QACW,cAA7BppB,OAAOgB,SAASqoB,UAEe,UAA7BrpB,OAAOgB,SAASqoB,UAEhBrpB,OAAOgB,SAASqoB,SAASC,MACvB,2DCXNC,IAAShH,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAAC,GAAD,OAEFiH,SAASC,eAAe,SDuHpB,kBAAmBvb,WACrBA,UAAUwb,cAAcC,MACrBxsB,MAAK,SAAAysB,GACJA,EAAaC,gBAEdxsB,OAAM,SAAAC,GACLwsB,QAAQxsB,MAAMA,EAAM1B,YClH5BgtB,O","file":"static/js/main.7969bf8b.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, Button, InputGroup, InputRightElement } from '@chakra-ui/react';\nconst PasswordInput = React.forwardRef(({ my, m, ...rest }, ref) => {\n  const [show, setShow] = React.useState(false);\n  const handleClick = () => setShow(!show);\n\n  return (\n    <InputGroup size=\"md\" m={m} my={my} ref={ref}>\n      <Input\n        pr=\"4.5rem\"\n        type={show ? 'text' : 'password'}\n        placeholder=\"Enter password\"\n        {...rest}\n      />\n      <InputRightElement width=\"4.5rem\">\n        <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n          {show ? 'Hide' : 'Show'}\n        </Button>\n      </InputRightElement>\n    </InputGroup>\n  );\n});\nexport default PasswordInput;\n","export const  SITE_NAME='Willpost'\nexport const API_HOST_URL='http://127.0.0.1:8000/'\n","import React, { useState } from 'react';\nimport {\n  Center,\n  Heading,\n  Stack,\n  Button,\n  Input,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  FormErrorMessage,\n  Text,\n  Link,\n  useToast,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  AlertTitle,\n  Box,\n} from '@chakra-ui/react';\nimport PasswordInput from '../Componets/form/PasswordInput';\nimport { Link as RouterLink } from 'react-router-dom';\n// import Input from '../componets/form/Input';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { API_HOST_URL } from '../constants';\n\nconst Register = () => {\n  const toast = useToast();\n  const [isLoading, setIsloading] = useState(false);\n  const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n  const [nonFieldErrors, setNonFieldErrors] = useState([]);\n\n  const {\n    register,\n    handleSubmit,\n    setError,\n    getValues,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = data => {\n\n    setIsloading(true);\n    axios\n      .post(`${API_HOST_URL}dj-rest-auth/registration/`, data)\n      .then(res => {\n        const { status } = res;\n        if (status >= 200) {\n          setShowSuccessMsg(true);\n          setIsloading(false);\n        }\n      })\n      .catch(error => {\n        setIsloading(false);\n\n        if (error.response) {\n          const { data, status } = error.response;\n          if (status < 500) {\n\n            setNonFieldErrors([]);\n            handelErrors(data);\n          } else {\n            toast({\n              title: 'An error occured',\n              description: 'please try again after few sec',\n              status: 'error',\n              duration: 5000,\n              isClosable: true,\n            });\n          }\n        }\n      });\n  };\n  const handelErrors = errors => {\n    for (const key in errors) {\n      if (key !== 'non_field_errors') {\n        setError(key, {\n          type: 'focus',\n          message: errors[key][0],\n        });\n      } else {\n        setNonFieldErrors(prev => prev.concat(errors[key]));\n      }\n    }\n  };\n  if (showSuccessMsg) {\n    return (\n      <Center h=\"100%\">\n        <Box w=\"30%\" h=\"50%\">\n          <Alert\n            status=\"info\"\n            variant=\"subtle\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            textAlign=\"center\"\n            height=\"250px\"\n          >\n            <AlertIcon boxSize=\"40px\" mr={0} />\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\"></AlertTitle>\n            <AlertDescription maxWidth=\"sm\">\n              Your account has been successfully created.\n              <br /> check your email to verify your email address\n            </AlertDescription>\n          </Alert>\n        </Box>\n      </Center>\n    );\n  }\n  return (\n    <Center h=\"100%\">\n      <Stack p=\"2\" m=\"2\">\n        <Center height=\"100%\" w=\"100%\">\n          <Heading p=\"2\" my=\"6\" as=\"h1\" size=\"4xl\">\n            Sign up\n          </Heading>\n        </Center>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Stack>\n            {showSuccessMsg && (\n              <Alert status=\"success\" p=\"2\" my=\"2\">\n                <AlertIcon />\n                <AlertDescription p=\"2\" mr=\"2\">\n                  Your account has been successfully created.\n                  <br /> check your email to verify your email address\n                </AlertDescription>\n              </Alert>\n            )}\n            {nonFieldErrors.length > 0 && (\n              <Alert status=\"error\" p=\"2\" my=\"2\">\n                <AlertIcon />\n                <AlertDescription p=\"2\" mr=\"2\">\n                  {nonFieldErrors}\n                </AlertDescription>\n              </Alert>\n            )}\n            {/* Email first name */}\n            <FormControl id=\"first_name\" isInvalid={errors.first_name}>\n              <FormLabel>First name</FormLabel>\n\n              <Input\n                placeholder=\"First Name\"\n                my=\"2\"\n                {...register('first_name', {\n                  required: {\n                    value: true,\n                    message: 'Please enter your first name',\n                  },\n                  pattern: {\n                    value: /^[A-Z]{4,20}$/i,\n                    message: 'Enter a valid name',\n                  },\n                })}\n              />\n\n              <FormErrorMessage>\n                {errors.first_name && <>{errors.first_name.message}</>}\n              </FormErrorMessage>\n            </FormControl>\n            {/* Email last name */}\n            <FormControl id=\"last_name\" isInvalid={errors.last_name}>\n              <FormLabel>Last name</FormLabel>\n\n              <Input\n                placeholder=\"Last Name\"\n                my=\"2\"\n                {...register('last_name', {\n                  required: {\n                    value: true,\n                    message: 'Please enter your last name',\n                  },\n                  pattern: {\n                    value: /^[A-Z]{4,20}$/i,\n                    message: 'Enter a valid name',\n                  },\n                })}\n              />\n\n              <FormErrorMessage>\n                {errors.last_name && <>{errors.last_name.message}</>}\n              </FormErrorMessage>\n            </FormControl>\n            {/* Email Filed */}\n            <FormControl id=\"email\" isInvalid={errors.email}>\n              <FormLabel>Email address</FormLabel>\n\n              <Input\n                placeholder=\"Email\"\n                my=\"2\"\n                {...register('email', {\n                  required: {\n                    value: true,\n                    message: 'Please enter your email address',\n                  },\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                    message: 'Enter a valid email address',\n                  },\n                })}\n              />\n\n              <FormErrorMessage>\n                {errors.email && <>{errors.email.message}</>}\n              </FormErrorMessage>\n            </FormControl>\n            {/* Password Filed */}\n            <FormControl id=\"password\" isInvalid={errors.password1}>\n              <FormLabel>Password</FormLabel>\n              <PasswordInput\n                placeholder=\"Password\"\n                my=\"2\"\n                {...register('password1', {\n                  required: { value: true, message: 'Password is Required' },\n                })}\n                isInvalid={errors.password1}\n              />\n              <FormHelperText>\n                Use alphabets to make your password stronger\n              </FormHelperText>\n              <FormErrorMessage>\n                {errors.password && errors.password.message}\n              </FormErrorMessage>\n            </FormControl>\n            {/* Re-Password Filed */}\n            <FormControl id=\"password2\" isInvalid={errors.password2}>\n              <FormLabel>Re-Password</FormLabel>\n              <Input\n                type=\"password\"\n                placeholder=\"Re-type password\"\n                my=\"2\"\n                {...register('password2', {\n                  required: {\n                    value: true,\n                    message: 'Please Retype your password',\n                  },\n                  validate: value =>\n                    value === getValues().password1 ||\n                    \"it doesn't match the password\",\n                })}\n              />\n              <FormHelperText>Retype your password .</FormHelperText>\n              <FormErrorMessage>\n                {errors.password2 && errors.password2.message}\n              </FormErrorMessage>\n            </FormControl>\n            <Button variant=\"solid\" my=\"2\" type=\"submit\" isLoading={isLoading}>\n              Sign in\n            </Button>\n            <Center>\n              <Text my=\"2\">\n                Already have an account.\n                <Link color=\"blue.500\" as={RouterLink} to=\"/login\">\n                  Login\n                </Link>\n              </Text>\n            </Center>\n          </Stack>\n        </form>\n      </Stack>\n    </Center>\n  );\n};\n\nexport default Register;\n","import axios from 'axios';\nimport moment from 'moment';\nimport jwt_decode from 'jwt-decode';\nimport { API_HOST_URL } from './constants';\n\nexport const TokenManager = () => {\n  const setAccessToken = token => {\n    localStorage.setItem('access_token', token);\n  };\n\n  const setRefreshToken = token => {\n    localStorage.setItem('refresh_token', token);\n  };\n  const setTokens = ({ access_token, refresh_token }) => {\n    setAccessToken(access_token);\n    setRefreshToken(refresh_token);\n  };\n  const thereIsTokens = () => {\n    if (\n      localStorage.getItem('access_token') &&\n      localStorage.getItem('refresh_token')\n    )\n      return true;\n    return false;\n  };\n\n  const getTokens = () => {\n    let access_token = null;\n    let refresh_token = null;\n    if (thereIsTokens()) {\n      try {\n        access_token = localStorage.getItem('access_token');\n        refresh_token = localStorage.getItem('refresh_token');\n      } catch (error) {\n        throw error;\n      }\n    }\n    return { access_token: access_token, refresh_token: refresh_token };\n  };\n  const isAccessTokenExpired = () => {\n    const { access_token } = getTokens();\n\n    if (!thereIsTokens()) return true;\n    const decoded_access_token = jwt_decode(access_token);\n    return decoded_access_token.exp < moment().unix();\n  };\n  const isRefreshTokenExpired = () => {\n    const { refresh_token } = getTokens();\n    if (!thereIsTokens()) return true;\n    const decoded_refresh_token = jwt_decode(refresh_token);\n    return decoded_refresh_token.exp < moment().unix();\n  };\n\n  const areTokensExpired = () => {\n    if (thereIsTokens())\n      if (isAccessTokenExpired() && isRefreshTokenExpired()) return true;\n      else {\n        return false;\n      }\n\n    return true;\n  };\n  const removeTokens = () => {\n    window.localStorage.clear();\n  };\n  return {\n    setTokens,\n    setAccessToken,\n    setRefreshToken,\n    getTokens,\n    isRefreshTokenExpired,\n    isAccessTokenExpired,\n    areTokensExpired,\n    removeTokens: removeTokens,\n  };\n};\n\nconst axiosAuth = axios.create({\n  baseURL: API_HOST_URL,\n  timeout: 10995000,\n  headers: {\n    Authorization: 'JWT ' + localStorage.getItem('access_token'),\n    'Content-Type': 'application/json',\n    accept: 'application/json',\n  },\n});\n\naxiosAuth.interceptors.request.use(async config => {\n  // Decode available tokens\n  let access_token = {};\n  let refresh_token = {};\n  if (\n    localStorage.getItem('access_token') &&\n    localStorage.getItem('refresh_token')\n  ) {\n    access_token = jwt_decode(localStorage.getItem('access_token'));\n    refresh_token = jwt_decode(localStorage.getItem('refresh_token'));\n  }\n \n  // Update tokens if the access token is expired and a valid refresh token is available\n  if (\n    access_token.exp < moment().unix() &&\n    refresh_token.exp > moment().unix()\n  ) {\n    \n    const response = await axios.post(\n      `${API_HOST_URL}/dj-rest-auth/token/refresh/`,\n      {\n        refresh: localStorage.getItem('refresh_token'),\n      },\n      {\n        headers: {\n          Authorization: 'JWT ' + localStorage.getItem('access_token'),\n          'Content-Type': 'application/json',\n          accept: 'application/json',\n        },\n      }\n    );\n    localStorage.setItem('access_token', response.data.access);\n    access_token = jwt_decode(response.data.access);\n  }\n\n  // Add access token to request\n  if (access_token.exp > moment().unix()) {\n    config.headers['Authorization'] =\n      'Bearer ' + localStorage.getItem('access_token');\n  }\n\n  // Disconnect user if authentication tokens are expired\n  // (Added to avoid unnecessary API calls)\n  if (\n    access_token.exp < moment().unix() &&\n    refresh_token.exp < moment().unix()\n  ) {\n    localStorage.clear();\n    window.location = '/login/';\n  }\n\n  return config;\n});\n\naxiosAuth.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    if (error.response) {\n      if (error.response.status === 401) {\n        let tokenManager = TokenManager();\n        if (tokenManager.thereIsTokens && tokenManager.areTokensExpired()) {\n          window.localStorage.clear();\n          window.location = '/login/';\n        }\n      } else if (error.response.status === 403) {\n        window.location = '/login/';\n      }\n    }\n    return Promise.reject(error.response);\n  }\n);\n\nexport const axiosAuthInstance = axiosAuth;\nexport const anonymousInstance = axios.create({\n  baseURL: API_HOST_URL,\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json',\n    accept: 'application/json',\n  },\n});\n","import { axiosAuthInstance, anonymousInstance, TokenManager } from './axiosApi';\n\nexport const authManager = () => {\n  const tokens = TokenManager();\n  const logout = () => {};\n  const isLogedin = () => {};\n  const isValid = () => {\n   \n    return !tokens.areTokensExpired();\n  };\n  const confirmLogin = ({ uid, token }) => {\n    \n    return axiosAuthInstance.post('/auth/confirm/' + uid + '/' + token + '/');\n  };\n  const reSendVerification = () => {\n    return axiosAuthInstance.post('/auth/confirm/send/');\n  };\n  return { logout, isLogedin, isValid, confirmLogin, reSendVerification };\n};\n\nexport const anonymousManager = () => {\n  const tokens = TokenManager();\n  const register = async () => {};\n  const login = async ({ email, password }) => {\n    return anonymousInstance.post('dj-rest-auth/login/', { email, password });\n  };\n  const setCredentials = data => {\n    tokens.setTokens(data);\n    const { user } = data;\n \n    localStorage.setItem('user', JSON.stringify(user));\n  };\n  const resendEmail = ({ email }) => {\n    return anonymousInstance.post('dj-rest-auth/registration/resend-email/', {\n      email,\n    });\n  };\n  const confirmExistence = ({ urlsignature }) => {\n\n    return anonymousInstance.post('confirmation/exc/', { urlsignature });\n  };\n  const VoteEligibility = ({ urlsignature }) => {\n    return anonymousInstance.get(`vote/${urlsignature}`);\n  };\n  const vote = ({ vote_value, urlsignature }) => {\n    return anonymousInstance.post('vote/', { urlsignature, vote_value });\n  };\n  const post = ({ urlsignature }) => {\n    return anonymousInstance.get(`post/${urlsignature}`);\n  };\n  return {\n    setCredentials,\n    register,\n    login,\n    resendEmail,\n    confirmExistence,\n    VoteEligibility,\n    vote,\n    post,\n  };\n};\nexport const userService = () => {\n  const update = ({\n    username,\n    email,\n    phone,\n    last_name,\n    first_name,\n    number_of_dayes_before_notifying,\n    vote_type,\n  }) => {\n    return axiosAuthInstance.patch('/dj-rest-auth/user/', {\n      username,\n      email,\n      phone,\n      last_name,\n      first_name,\n      number_of_dayes_before_notifying,\n      vote_type,\n    });\n  };\n  const get = () => {\n    return axiosAuthInstance.get('/dj-rest-auth/user/');\n  };\n  const changePassword = async ({\n    old_password,\n    new_password1,\n    new_password2,\n  }) => {\n    return axiosAuthInstance.post('/dj-rest-auth/password/change/', {\n      old_password,\n      new_password1,\n      new_password2,\n    });\n  };\n  const logout = () => {\n    const tokens = TokenManager();\n    tokens.removeTokens();\n    return axiosAuthInstance.post('/dj-rest-auth/logout/');\n  };\n\n  return {\n    logout,\n    get,\n    update,\n    changePassword,\n  };\n};\nexport const ContactService = () => {\n  const create = async ({\n    username,\n    email,\n    phone,\n    last_name,\n    first_name,\n    is_safe_guard,\n  }) => {\n    return axiosAuthInstance.post('contact/', {\n      email,\n      phone,\n      last_name,\n      first_name,\n      is_safe_guard,\n    });\n  };\n  const update = async ({\n    id,\n    username,\n    email,\n    is_safe_guard,\n    last_name,\n    first_name,\n  }) => {\n    const url = `contact/${id}`;\n    return axiosAuthInstance.patch(url, {\n      id,\n      username,\n      email,\n      is_safe_guard,\n      last_name,\n      first_name,\n    });\n  };\n  const deleteContact = async id => {\n    const url = `contact/${id}`;\n    return axiosAuthInstance.delete(url);\n  };\n  const get = async id => {};\n  const getList = async () => {\n    return axiosAuthInstance.get('contact/');\n  };\n\n  return {\n    getList,\n    create,\n    update,\n    deleteContact,\n    get,\n  };\n};\nexport const PostService = () => {\n  const create = async (\n    { file, media_type = 'AUDIO', contacts = [] },\n    onUploadProgressHanadler = null,\n    cancelToken = null\n  ) => {\n    const formdata = new FormData();\n    let filename = 'sound.wav';\n    if (media_type !== 'AUDIO') {\n      filename = 'Video.webm';\n    }\n    formdata.append('file', file, filename);\n    formdata.append('media_type', media_type);\n    for (const key in contacts) {\n      formdata.append('recipients', contacts[key]);\n    }\n\n    return axiosAuthInstance.post(\n      'media/',\n\n      formdata,\n      {\n        onUploadProgress: onUploadProgressHanadler,\n        cancelToken: cancelToken && cancelToken.source,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    );\n  };\n  const createAudio = async (\n    { file, media_type = 'AUDIO', contacts = [] },\n    onUploadProgressHanadler = null\n  ) => {\n    const formdata = new FormData();\n    if (media_type === 'AUDIO') {\n      formdata.append('file', file, 'sound.wav');\n    } else {\n      formdata.append('file', file, 'video.webm');\n    }\n    formdata.append('media_type', media_type);\n    for (const key in contacts) {\n      formdata.append('recipients', contacts[key]);\n    }\n\n    return axiosAuthInstance.post(\n      'media/',\n\n      formdata,\n      {\n        onUploadProgress: onUploadProgressHanadler,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    );\n  };\n  const update = async (\n    id,\n    { file, media_type = 'AUDIO', recipients = [] }\n  ) => {\n    const url = `media/${id}`;\n\n    const formdata = new FormData();\n\n    if (file && typeof file !== 'string') {\n      if (media_type === 'AUDIO') {\n        formdata.append('file', file, 'sound.wav');\n      } else {\n        formdata.append('file', file, 'video.webm');\n      }\n    }\n\n    if (Array.isArray(recipients) && recipients.length > 0) {\n      for (const key in recipients) {\n        formdata.append('recipients', recipients[key]);\n      }\n    }\n    formdata.append('media_type', media_type);\n    return axiosAuthInstance.patch(url, formdata, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  };\n  const deleteMedia = async id => {\n    const url = `media/${id}`;\n    return axiosAuthInstance.delete(url);\n  };\n  const get = async id => {};\n  const getList = async () => {\n    return axiosAuthInstance.get('media/');\n  };\n  const uploadViaAjax = async (\n    { file, media_type = 'AUDIO', recipients = [] },\n    onUploadProgressHanadler = null\n  ) => {\n    let xhr = new XMLHttpRequest();\n    const formdata = new FormData();\n\n    if (file && typeof file !== 'string') {\n      if (media_type === 'AUDIO') {\n        formdata.append('file', file, 'sound.wav');\n      } else {\n        formdata.append('file', file, 'video.webm');\n      }\n    }\n\n    if (Array.isArray(recipients) && recipients.length > 0) {\n      for (const key in recipients) {\n        formdata.append('recipients', recipients[key]);\n      }\n    }\n    formdata.append('media_type', media_type);\n    xhr.open('POST', 'http://localhost:8000/media/', true);\n    xhr.onprogress = onUploadProgressHanadler;\n    // xhr.setRequestHeader('Content-Type', 'multipart/form-data');\n    xhr.setRequestHeader(\n      'Authorization',\n      'Bearer ' + localStorage.getItem('access_token')\n    );\n    return xhr.send(formdata);\n  };\n\n  return {\n    createAudio,\n    uploadViaAjax,\n    getList,\n    create,\n    update,\n    deleteMedia,\n    get,\n  };\n};\n","import {\n  Center,\n  Heading,\n  Stack,\n  Input,\n  Button,\n  FormControl,\n  FormLabel,\n  Link,\n  FormErrorMessage,\n  Text,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  Flex,\n  Divider,\n  useToast,\n  Box,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport PasswordInput from '../Componets/form/PasswordInput';\n\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { anonymousManager } from '../services';\nconst Login = React.forwardRef((props, ref) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingEmail, setIsLoadingEmail] = useState(false);\n  const [sEmailSent, SetIsEmailSent] = useState(false);\n  const [showSendEmail, setShowSendEmail] = useState(false);\n  const [nonFieldErrors, setNonFieldErrors] = useState([]);\n  const toast = useToast();\n  const service = anonymousManager();\n  const {\n    register,\n    setError,\n    getValues,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const history = useHistory();\n  const resendEmail = () => {\n    setIsLoadingEmail(true);\n    service\n      .resendEmail(getValues())\n      .then(res => {\n        SetIsEmailSent(true);\n      })\n      .catch(error => {\n        SetIsEmailSent(false);\n        const { status } = error.response;\n        if (status >= 500) {\n          toast({\n            title: 'Error',\n            description:\n              'We are unable to fulfill your request right now.  you  can try later.',\n            status: 'error',\n            duration: 9000,\n            isClosable: true,\n          });\n          return;\n        }\n      });\n  };\n  const onSubmit = data => {\n    setIsLoading(true);\n    service\n      .login(data)\n      .then(res => {\n        try {\n          setIsLoading(false);\n          const { data } = res;\n          service.setCredentials(data);\n\n          if (data.user.is_expired && data.user.is_expired === true) {\n            SetIsEmailSent(true);\n          } else {\n            history.push('/home');\n          }\n        } catch (error) {}\n      })\n      .catch(error => {\n        try {\n          setIsLoading(false);\n          SetIsEmailSent(false);\n          const { data, status } = error.response;\n          if (status === 500) {\n            toast({\n              title: 'Error',\n              description:\n                'We are unable to fulfill your request right now. you  can try later.',\n              status: 'error',\n              duration: 9000,\n              isClosable: true,\n            });\n            setNonFieldErrors([]);\n            return;\n          }\n          if (data['non_field_errors'])\n            if (data['non_field_errors'][0].includes('not verified.')) {\n              setShowSendEmail(true);\n            }\n          setNonFieldErrors([]);\n          if (status === 400) {\n            handelErrors(data);\n          }\n        } catch (error) {}\n      });\n  };\n\n  const handelRegister = () => history.push('/register');\n  const handelErrors = errors => {\n    for (const key in errors) {\n      if (key !== 'non_field_errors') {\n        setError(key, {\n          type: 'focus',\n          message: errors[key][0],\n        });\n      } else {\n        setNonFieldErrors(prev => prev.concat(errors[key]));\n      }\n    }\n  };\n\n  return (\n    <>\n      <Center h=\"100%\" w=\"full\" ref={ref}>\n        {sEmailSent ? (\n          <>\n            <Box>\n              <Center height=\"full\" w=\"full\">\n                <Heading p=\"2\" my=\"10\" as=\"h1\" size=\"4xl\">\n                  Login\n                </Heading>\n              </Center>\n              <Alert\n                status=\"info\"\n                variant=\"subtle\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                textAlign=\"center\"\n                height=\"150px\"\n              >\n                <AlertIcon boxSize=\"40px\" mr={0} />\n                <Divider my=\"2\" />\n                {/* <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                  Verification success\n                </AlertTitle> */}\n                <AlertDescription maxWidth=\"sm\">\n                  An email has been sent to you. click on the link it contains.\n                  to confirm you authentication\n                </AlertDescription>\n              </Alert>\n            </Box>\n          </>\n        ) : (\n          <>\n            <Stack>\n              <Center height=\"full\" w=\"full\">\n                <Heading p=\"2\" my=\"10\" as=\"h1\" size=\"4xl\">\n                  Login\n                </Heading>\n              </Center>\n              <form>\n                <Stack>\n                  {nonFieldErrors.length > 0 && (\n                    <Alert status=\"error\" p=\"2\" my=\"2\">\n                      <AlertIcon />\n                      <AlertDescription p=\"2\" mr=\"2\">\n                        {nonFieldErrors}\n                        <Divider />\n                        {showSendEmail && (\n                          <>\n                            <Button\n                              size=\"sm\"\n                              variant=\"link\"\n                              onClick={resendEmail}\n                              isLoading={isLoadingEmail}\n                            >\n                              Send Email verification\n                            </Button>\n                          </>\n                        )}\n                      </AlertDescription>\n                    </Alert>\n                  )}\n                  {/* Email Filed */}\n                  <FormControl id=\"email\" isInvalid={errors.email}>\n                    <FormLabel>Email address</FormLabel>\n\n                    <Input\n                      placeholder=\"Email\"\n                      my=\"2\"\n                      {...register('email', {\n                        required: {\n                          value: true,\n                          message: 'Please enter your email address',\n                        },\n                        pattern: {\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                          message: 'Enter a valid email address',\n                        },\n                      })}\n                    />\n\n                    <FormErrorMessage>\n                      {errors.email && errors.email.message}\n                    </FormErrorMessage>\n                  </FormControl>\n                  {/* Password Filed */}\n                  <FormControl id=\"password\" isInvalid={errors.password}>\n                    <FormLabel>Password</FormLabel>\n                    <PasswordInput\n                      placeholder=\"Password\"\n                      my=\"2\"\n                      {...register('password', {\n                        required: {\n                          value: true,\n                          message: 'Password is Required',\n                        },\n                      })}\n                      isInvalid={errors.password}\n                    />\n\n                    <FormErrorMessage>\n                      {errors.password && errors.password.message}\n                    </FormErrorMessage>\n                  </FormControl>\n                  <Button\n                    variant=\"solid\"\n                    my=\"2\"\n                    onClick={handleSubmit(onSubmit)}\n                    disabled={isLoading}\n                    isLoading={isLoading}\n                  >\n                    Log in\n                  </Button>\n                  <Center>\n                    <Text my=\"2\">\n                      <Link\n                        color=\"blue.500\"\n                        as={RouterLink}\n                        to=\"/restore/email/ \"\n                      >\n                        You forgot your password ?\n                      </Link>\n                    </Text>\n                  </Center>\n                  <Flex justifyContent=\"center\" justifyItems=\"center\">\n                    <Divider />\n                    <Divider />\n                  </Flex>\n                  <Button variant=\"outline\" my=\"2\" onClick={handelRegister}>\n                    Register Now\n                  </Button>\n                </Stack>\n              </form>\n            </Stack>\n          </>\n        )}\n      </Center>\n    </>\n  );\n});\n\nexport default Login;\n","import {  Center, Heading, Spinner } from '@chakra-ui/react';\n\nconst Loading = ({ message }) => {\n  return (\n    <Center  margin=\"auto\" h=\"100%\">\n      <Center h=\"100%\">\n        <Heading mx='4' p=\"2\" as=\"h2\">\n          {message} \n        </Heading>\n        <Spinner thickness=\"4px\" size=\"xl\"></Spinner>\n      </Center>\n    </Center>\n  );\n};\n\nexport default Loading;\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\n\nconst Continer = ({children,...rest}) => {\n    return (\n        <Box  px={[2,4,16,40,60]}  {...rest} >\n            {children}\n\n        </Box>\n    );\n};\n\nexport default Continer;","import {\n  Box,\n  Heading,\n  Spacer,\n  Flex,\n  WrapItem,\n  Wrap,\n  Icon,\n  Link,\n  Tooltip,\n} from '@chakra-ui/react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { AiFillHome } from 'react-icons/ai';\nimport { RiContactsFill } from 'react-icons/ri';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport React from 'react';\nimport Container from './Layout/Continer';\nconst Nav = () => {\n  return (\n    <Box w=\"full\"  bg='gray.800' color='white' py='2'>\n      <Container>\n        <Flex w=\"full\">\n          <Box>\n            <Heading as=\"h1\" size=\"2xl\">Logo</Heading>\n          </Box>\n          <Spacer />\n\n          <Wrap spacing={[6, 6, 16]}>\n            <WrapItem>\n              <Heading as=\"h2\">\n                <Tooltip label=\"Home page\" aria-label=\"Home page\">\n                  <Link as={RouterLink} to=\"/Home\">\n                    <Icon as={AiFillHome} />\n                  </Link>\n                </Tooltip>\n              </Heading>\n            </WrapItem>\n            <WrapItem>\n              <Heading as=\"h2\">\n                <Tooltip label=\"Contact page\" aria-label=\"Contact page\">\n                  <Link as={RouterLink} to=\"/contacts\">\n                    <Icon as={RiContactsFill} />\n                  </Link>\n                </Tooltip>\n              </Heading>\n            </WrapItem>\n            <WrapItem>\n              <Heading as=\"h2\">\n                <Tooltip label=\"Pofile\" aria-label=\"Your Profile\">\n                  <Link as={RouterLink} to=\"/profile\">\n                    <Icon as={BsFillPersonFill} />\n                  </Link>\n                </Tooltip>\n              </Heading>\n            </WrapItem>\n          </Wrap>\n          \n        </Flex>\n        <Spacer />\n      </Container>\n    </Box>\n  );\n};\n\nexport default Nav;\n","import { Box } from '@chakra-ui/layout';\nimport React, { useEffect, useRef } from 'react';\n\nconst AudioVisualizer = ({\n  audioContext,\n  source,\n  enabled,\n  connect,\n  ...rest\n}) => {\n  const canvas = useRef();\n  const WIDTH = useRef();\n  const HEIGHT = useRef();\n\n  const analyser = useRef();\n  const dataArray = useRef();\n  const bufferLength = useRef();\n  const canvasCtx = useRef();\n\n  const drawVisual = useRef();\n\n  const clear = () => {\n    if (canvasCtx.current)\n      canvasCtx.current.clearRect(0, 0, WIDTH.current, HEIGHT.current);\n    window.cancelAnimationFrame(drawVisual.current);\n  };\n\n  const visualize = () => {\n    if (audioContext && audioContext.current) {\n      source.connect(analyser.current);\n      if (connect) analyser.current.connect(connect);\n      analyser.current.fftSize = 2048;\n      bufferLength.current = analyser.current.frequencyBinCount;\n      dataArray.current = new Uint8Array(bufferLength.current);\n      canvasCtx.current.clearRect(0, 0, WIDTH.current, HEIGHT.current);\n\n      draw();\n    }\n  };\n  const draw = () => {\n    drawVisual.current = requestAnimationFrame(draw);\n    analyser.current.getByteTimeDomainData(dataArray.current);\n    canvasCtx.current.fillStyle = '#FFF';\n    canvasCtx.current.fillRect(0, 0, WIDTH.current, HEIGHT.current);\n    canvasCtx.current.lineWidth = 2;\n    canvasCtx.current.strokeStyle = 'rgb(0, 0, 0)';\n    canvasCtx.current.beginPath();\n    const sliceWidth = (WIDTH.current * 1.0) / bufferLength.current;\n    let x = 0;\n    for (let i = 0; i < bufferLength.current; i++) {\n      const v = dataArray.current[i] / 128.0;\n      const y = (v * HEIGHT.current) / 2;\n\n      if (i === 0) {\n        canvasCtx.current.moveTo(x, y);\n      } else {\n        canvasCtx.current.lineTo(x, y);\n      }\n\n      x += sliceWidth;\n    }\n    canvasCtx.current.lineTo(canvas.current.width, canvas.current.height / 2);\n    canvasCtx.current.stroke();\n  };\n  useEffect(() => {\n    if (audioContext) {\n      analyser.current = audioContext.current.createAnalyser();\n      WIDTH.current = canvas.current.width;\n      HEIGHT.current = canvas.current.height;\n      canvasCtx.current = canvas.current.getContext('2d');\n    }\n  }, [audioContext]);\n  useEffect(() => {\n    if (source && enabled) {\n      visualize();\n    } else {\n      if (canvasCtx.current) clear();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [source, enabled]);\n\n  useEffect(() => {\n    return () => {\n\n      clear();\n      window.cancelAnimationFrame(drawVisual.current);\n    };\n  }, []);\n\n  return (\n    <Box h=\"full\">\n      <canvas ref={canvas} style={{ height: '100%', width: '100%' }}></canvas>\n    </Box>\n  );\n};\n\nexport default AudioVisualizer;\n","import { Box, Flex, Icon, Tooltip } from '@chakra-ui/react';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaStop, FaReply, FaPause } from 'react-icons/fa';\nimport { RiRecordCircleFill } from 'react-icons/ri';\n\nconst AudioPlayer = ({ audioSrc, recordHandler, onPlay, onStop }) => {\n  // State\n  const [isPlaying, setIsPlaying] = useState(false);\n  // Refs\n  const audioRef = useRef(new Audio(audioSrc));\n\n  // Destructure for conciseness\n\n  const handelPlay = () => {\n    audioRef.current.volume = 1.0;\n    audioRef.current.play();\n\n    audioRef.current.muted = false;\n    if (onPlay) {\n      onPlay(audioRef.current);\n    }\n    setIsPlaying(true);\n  };\n  const handelStop = () => {\n    audioRef.current.pause();\n    setIsPlaying(false);\n    audioRef.current = new Audio(audioSrc);\n    // audioRef.current.crossOrigin = 'anonymous'\n    audioRef.current.addEventListener('pause', event => {\n      setIsPlaying(false);\n      if (onStop) {\n        onStop();\n      }\n    });\n  };\n  const handelReplay = () => {\n    audioRef.current.pause();\n\n    audioRef.current = new Audio(audioSrc);\n    // audioRef.current.crossOrigin = 'anonymous'\n    audioRef.current.addEventListener('pause', event => {\n      setIsPlaying(false);\n      if (onStop) {\n        onStop();\n      }\n    });\n    audioRef.current.currentTime = 0.0;\n    audioRef.current.play();\n    setIsPlaying(true);\n    if (onPlay) {\n      onPlay(audioRef.current);\n    }\n  };\n  const handelPause = () => {\n    audioRef.current.pause();\n    setIsPlaying(false);\n    if (onStop) {\n      onStop();\n    }\n  };\n  useEffect(() => {\n    audioRef.current.pause();\n\n    if (audioSrc) {\n      audioRef.current = new Audio(audioSrc);\n      // audioRef.current.crossOrigin = 'anonymous';\n      audioRef.current.addEventListener('pause', event => {\n        setIsPlaying(false);\n        if (onStop) {\n          onStop();\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [audioSrc]);\n\n  useEffect(() => {\n    // Pause and clean up on unmount\n    return () => {\n      audioRef.current.pause();\n      //   clearInterval(intervalRef.current);\n    };\n  }, []);\n  return (\n    <Box border=\"3px\" p=\"2\" position=\"relative\">\n      <Flex\n        justifyContent=\"space-around\"\n        width=\"40%\"\n        position=\"absolute\"\n        right=\"30%\"\n        bottom=\"20%\"\n      >\n        {isPlaying ? (\n          <>\n            <Tooltip label=\"Click to stop\" aria-label=\"Click to stop\">\n              <Box>\n                <Icon\n                  as={FaStop}\n                  boxSize={14}\n                  onClick={handelStop}\n                  cursor=\"pointer\"\n                />\n              </Box>\n            </Tooltip>\n            <Tooltip label=\"Click to pause\" aria-label=\"Click to pause\">\n              <Box>\n                <Icon\n                  as={FaPause}\n                  boxSize={14}\n                  onClick={handelPause}\n                  cursor=\"pointer\"\n                />\n              </Box>\n            </Tooltip>\n            <Tooltip label=\"Click to replay\" aria-label=\"Click to replay\">\n              <Box>\n                <Icon\n                  as={FaReply}\n                  boxSize={14}\n                  onClick={handelReplay}\n                  cursor=\"pointer\"\n                />\n              </Box>\n            </Tooltip>\n          </>\n        ) : (\n          <>\n            <Tooltip label=\"Click to Play\" aria-label=\"Click to play\">\n              <Box>\n                <Icon\n                  as={FaPlay}\n                  boxSize={14}\n                  onClick={handelPlay}\n                  cursor=\"pointer\"\n                />\n              </Box>\n            </Tooltip>\n\n            <Tooltip\n              label=\"Click to start recording\"\n              aria-label=\"Click to record\"\n              placement=\"left\"\n              defaultIsOpen\n            >\n              <Box>\n                <Icon\n                  as={RiRecordCircleFill}\n                  boxSize={16}\n                  onClick={recordHandler}\n                  cursor=\"pointer\"\n                  color=\"red.500\"\n                />\n              </Box>\n            </Tooltip>\n          </>\n        )}\n      </Flex>\n    </Box>\n  );\n};\n\nexport default AudioPlayer;\n","import { useEffect, useState, useRef } from 'react';\nexport const useTimer = () => {\n  const intervalRef = useRef(0);\n  // const [startTime, setStartTime] = useState(0);\n  // const [elapsedTime, setElapsedTime] = useState(0);\n  const [timeString, setTimeString] = useState('00:00');\n  const timeCount = useRef(0);\n\n  const countSec = () => {\n    timeCount.current += 1000;\n    let timeStringVal = timeToString(timeCount.current);\n    setTimeString(timeStringVal);\n  };\n\n  const timeToString = time => {\n    let diffInHrs = time / 3600000;\n    let hh = Math.floor(diffInHrs);\n\n    let diffInMin = (diffInHrs - hh) * 60;\n    let mm = Math.floor(diffInMin);\n\n    let diffInSec = (diffInMin - mm) * 60;\n    let ss = Math.floor(diffInSec);\n    let formattedMM = mm.toString().padStart(2, '0');\n    let formattedSS = ss.toString().padStart(2, '0');\n\n    return `${formattedMM}:${formattedSS}`;\n  };\n  const start = () => {\n    // const startTimeVal = Date.now() - elapsedTime;\n    clearInterval(intervalRef.current);\n    // setStartTime(startTimeVal);\n    const val = setInterval(countSec, 1000);\n    intervalRef.current = val;\n  };\n\n  const pause = () => {\n    clearInterval(intervalRef.current);\n  };\n  const resume = () => {\n    clearInterval(intervalRef.current);\n    const val = setInterval(countSec, 1000);\n    intervalRef.current = val;\n  };\n  const stop = () => {\n    clearInterval(intervalRef.current);\n    timeCount.current = -1000;\n    setTimeString('00:00');\n  };\n  useEffect(() => {\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  return { timeString, start, stop, pause, resume };\n};\n","import AudioRecorder from './AudioRecorder';\n\nexport default AudioRecorder;\n","import { Flex, Icon, Tooltip, Box, Text } from '@chakra-ui/react';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport AudioVisualizer from './AudioVisualizer';\n\nimport { FaStop } from 'react-icons/fa';\nimport { RiRecordCircleFill } from 'react-icons/ri';\nimport AudioPlayer from './AudioPlayer';\nimport { useTimer } from '../../pages/Home/RecorderCreator/timer';\nconst AudioRecorder = ({ extAudioSrcUrl = null, onChange }) => {\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [audioSrcUrl, setAudioSrcUrl] = useState(null);\n  const [audioSource, setAudioSource] = useState(null);\n  const [capturing, setCapturing] = useState(false);\n  const [startVisualize, setStartVisualize] = useState(false);\n  const audioCtxRef = useRef();\n  const [audioCtx, setAudioCtx] = useState(null);\n  const mediaRecorder = useRef();\n  const { timeString, start, stop} = useTimer();\n  const source = useRef();\n  const startHandler = () => {\n    navigator.mediaDevices\n      .getUserMedia({ audio: true, video: false })\n      .then(startRecording);\n  };\n\n  const onPlayHandler = audio => {\n    const currentSource = audioCtxRef.current.createMediaElementSource(audio);\n    source.current = currentSource;\n    setAudioSource(currentSource);\n    setStartVisualize(true);\n    start();\n  };\n  const onStopHandler = () => {\n    setStartVisualize(false);\n    stop();\n  };\n  const startRecording = stream => {\n    const options = { mimeType: 'audio/webm' };\n    const currentSource = audioCtxRef.current.createMediaStreamSource(stream);\n    source.current = currentSource;\n    start();\n    setAudioSource(currentSource);\n    // analyser.current.connect(audioCtxRef.current.destination);\n    mediaRecorder.current = new MediaRecorder(stream, options);\n\n    mediaRecorder.current.addEventListener('dataavailable', function (e) {\n      if (e.data.size > 0) setRecordedChunks(prev => [e.data]);\n    });\n    mediaRecorder.current.addEventListener('stop', function () {\n      const url = URL.createObjectURL(new Blob(recordedChunks), 'sound.wav');\n      setAudioSrcUrl(url);\n    });\n    setCapturing(true);\n    setStartVisualize(true);\n    mediaRecorder.current.start();\n  };\n  const stopRecordingHandler = useCallback(() => {\n    if (mediaRecorder.current) {\n      mediaRecorder.current.stop();\n      stopStream(mediaRecorder.current.stream);\n    }\n    setCapturing(false);\n    setStartVisualize(false);\n    stop();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recordedChunks]);\n  const stopStream = stream => {\n    stream.getTracks().forEach(track => track.stop());\n  };\n  useEffect(() => {\n    audioCtxRef.current = new (window.AudioContext ||\n      window.webkitAudioContext)();\n    setAudioCtx(audioCtxRef);\n  }, []);\n  useEffect(() => {\n    if (extAudioSrcUrl) {\n      setAudioSrcUrl(extAudioSrcUrl);\n    }\n\n    return () => {\n      if (mediaRecorder.current) {\n        stopRecordingHandler();\n        setStartVisualize(false);\n      }\n      if (!extAudioSrcUrl && audioSrcUrl) URL.revokeObjectURL(audioSrcUrl);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [extAudioSrcUrl]);\n  useEffect(() => {\n    if (recordedChunks.length > 0) {\n      const blob = new Blob(recordedChunks);\n      const url = URL.createObjectURL(blob);\n      setAudioSrcUrl(url);\n      if (mediaRecorder.current) {\n        if (mediaRecorder.current.state === 'inactive') {\n          const soundFile = new File([blob], 'sound.wav', {\n            type: 'audio/webm',\n          });\n          if (onChange) onChange(soundFile);\n        }\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recordedChunks]);\n  const handleConnect = (() => {\n    return audioCtxRef.current && !capturing\n      ? audioCtxRef.current.destination\n      : null;\n  })();\n  return (\n    <Box h=\"100%\">\n      <Box border=\"8px\" w=\"100%\">\n        <AudioVisualizer\n          source={audioSource}\n          enabled={startVisualize}\n          audioContext={audioCtx}\n          connect={handleConnect}\n        />\n        <Box position=\"absolute\" top=\"28\" right=\"20\">\n          <Text fontSize=\"lg\" fontWeight=\"bold\">\n            {timeString}\n          </Text>\n        </Box>\n\n        {capturing ? (\n          <Flex justifyContent=\"space-around\" p=\"2\">\n            <Tooltip\n              label=\"Click to stop recording\"\n              aria-label=\"Click to stop recording\"\n            >\n              <Box>\n                <Icon\n                  as={FaStop}\n                  boxSize={14}\n                  onClick={stopRecordingHandler}\n                  cursor=\"pointer\"\n                />\n              </Box>\n            </Tooltip>\n          </Flex>\n        ) : (\n          <>\n            {audioSrcUrl ? (\n              <AudioPlayer\n                audioSrc={audioSrcUrl}\n                recordHandler={startHandler}\n                onPlay={onPlayHandler}\n                onStop={onStopHandler}\n              />\n            ) : (\n              <Flex justifyContent=\"space-around\" p=\"2\">\n                <Tooltip\n                  label=\"Click to start recording\"\n                  aria-label=\"Click to start recording\"\n                  placement=\"left\"\n                  defaultIsOpen\n                >\n                  <Box>\n                    <Icon\n                      as={RiRecordCircleFill}\n                      boxSize={16}\n                      onClick={startHandler}\n                      cursor=\"pointer\"\n                      color=\"red.500\"\n                    />\n                  </Box>\n                </Tooltip>\n              </Flex>\n            )}\n          </>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default AudioRecorder;\n","import React from 'react';\nimport { Box, useStyleConfig } from '@chakra-ui/react';\nconst Card = props => {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig('Card', { variant });\n  return <Box __css={styles} {...rest} >{children}</Box>;\n};\n\nexport default Card;\n","import { Box, Heading } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { ContactService } from '../services';\nimport AsyncSelect from 'react-select/async';\nimport PropTypes from 'prop-types';\nconst ContactSelector = ({\n  extSelectedContacts,\n  recorderContext,\n  onChange,\n  ids,\n  ...rest\n}) => {\n  // @param extSelectedContacts list of contacts IDs\n\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const [contactList, setContactList] = useState([]);\n  const service = ContactService();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleChange = values => {\n    if (onChange) onChange(values);\n    setSelectedContacts(values);\n  };\n  const customStyles = {\n    container: (provided, state) => ({\n      ...provided,\n\n      width: '100%',\n    }),\n  };\n  const filterColors = inputValue => {\n    return contactList.filter(i =>\n      i.label.toLowerCase().includes(inputValue.toLowerCase())\n    );\n  };\n  const promiseOptions = inputValue =>\n    new Promise(resolve => {\n      resolve(filterColors(inputValue));\n    });\n  useEffect(() => {\n    let freshContactList = [];\n    setIsLoading(true);\n    service\n      .getList()\n      .then(res => {\n        const data = res.data;\n        freshContactList = data.map(value => {\n          return { value: value.id, label: value.email };\n        });\n        setContactList(freshContactList);\n        if (extSelectedContacts.length > 0) {\n          const selectedItems = freshContactList.filter(opt =>\n            extSelectedContacts.includes(opt.value)\n          );\n          setSelectedContacts(selectedItems);\n        }\n        setIsLoading(false);\n      })\n      .catch(error => {\n        try {\n        } catch (error) {}\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [extSelectedContacts]);\n  return (\n    <Box h=\"100%\" w=\"100%\">\n      <Heading size=\"sm\" my=\"2\">\n        Contacts:\n      </Heading>\n      <Box display=\"flex\" flexDirection=\"column\" w=\"100%\">\n        <AsyncSelect\n          isMulti\n          isLoading={isLoading}\n          cacheOptions\n          value={selectedContacts}\n          loadOptions={promiseOptions}\n          onChange={handleChange}\n          defaultOptions={contactList}\n          styles={customStyles}\n        />\n      </Box>\n    </Box>\n  );\n};\nContactSelector.propTypes = {\n  extSelectedContacts: PropTypes.array,\n};\nContactSelector.defaultProps = {\n  extSelectedContacts: [],\n};\nexport default ContactSelector;\n","import { Square, Circle, Tooltip } from '@chakra-ui/react';\nexport const RecordButton = props => {\n  return (\n    <Tooltip label=\"Click to start recording\" placement=\"left\" defaultIsOpen> \n      <Circle\n        size=\"70px\"\n        bg=\"white\"\n        opacity=\"0.7\"\n        cursor=\"pointer\"\n        position=\"absolute\"\n        bottom=\"25%\"\n        right=\"45%\"\n        p=\"6\"\n        border=\"2px\"\n        borderColor=\"black\"\n      >\n        <Circle size=\"55px\" bg=\"tomato\" opacity=\"1\" color=\"white\" {...props} />\n      </Circle>\n    </Tooltip>\n  );\n};\nexport const StopButton = props => {\n  // centered button \n  return (\n    <Tooltip label=\"Click to stop recording\" placement=\"left\" defaultIsOpen>\n      <Circle\n        size=\"70px\"\n        bg=\"white\"\n        opacity=\"0.7\"\n        cursor=\"pointer\"\n        position=\"absolute\"\n        bottom=\"15%\"\n        right=\"45%\"\n        p=\"6\"\n        border=\"2px\"\n        borderColor=\"black\"\n      >\n        <Square size=\"45px\" bg=\"tomato\" opacity=\"1\" {...props}></Square>\n      </Circle>\n    </Tooltip>\n  );\n};\n","import {\n  Box,\n  Button,\n  useToast,\n  Tooltip,\n  Heading,\n  Center,\n  Icon,\n  Circle,\n  Square,\n  IconButton,\n} from '@chakra-ui/react';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FaPause, FaPlay } from 'react-icons/fa';\nimport { RecordButton } from '../pages/Home/RecorderCreator/buttons';\nimport { useTimer } from '../pages/Home/RecorderCreator/timer';\nimport { RiVideoAddLine } from 'react-icons/ri';\n\n// import \"node_modules/video-react/dist/video-react.css\";\nimport { Player, ControlBar } from 'video-react';\nimport 'video-react/dist/video-react.css';\nconst Controls = ({ isPaused, timeString, onResume, onPause, onStop }) => {\n  return (\n    <>\n      <Heading position=\"absolute\" right=\"5%\" top=\"10%\" size=\"md\" color=\"white\">\n        {timeString}\n      </Heading>\n      <Box\n        position=\"absolute\"\n        bottom=\"20%\"\n        right=\"35%\"\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        w=\"30%\"\n      >\n        <Tooltip label=\"Click to stop recording\" placement=\"left\" defaultIsOpen>\n          <Circle\n            size=\"60px\"\n            bg=\"white\"\n            opacity=\"0.7\"\n            cursor=\"pointer\"\n            p=\"6\"\n            border=\"2px\"\n            borderColor=\"black\"\n            onClick={onStop}\n          >\n            <Square size=\"35px\" bg=\"tomato\" opacity=\"1\"></Square>\n          </Circle>\n        </Tooltip>\n        {isPaused ? (\n          <>\n            <Tooltip label=\"Click to resume\" aria-label=\"Click to resume\">\n              <Circle\n                size=\"60px\"\n                bg=\"white\"\n                opacity=\"0.7\"\n                cursor=\"pointer\"\n                p=\"4\"\n                border=\"2px\"\n                borderColor=\"black\"\n                onClick={onResume}\n              >\n                <Icon ml=\"1\" as={FaPlay} boxSize={10} cursor=\"pointer\" />\n              </Circle>\n            </Tooltip>\n          </>\n        ) : (\n          <Tooltip label=\"Click to pause\" aria-label=\"Click to pause\">\n            <Circle\n              size=\"60px\"\n              bg=\"white\"\n              opacity=\"0.7\"\n              cursor=\"pointer\"\n              p=\"6\"\n              border=\"2px\"\n              borderColor=\"black\"\n              onClick={onPause}\n            >\n              <Icon as={FaPause} boxSize={10} cursor=\"pointer\" />\n            </Circle>\n          </Tooltip>\n        )}\n      </Box>\n    </>\n  );\n};\n\nconst VideoRecorder = ({ extVideoSrcUrl, onChange }) => {\n  const webcamRef = useRef(null);\n  const videoRef = useRef(null);\n  const sourceRef = useRef(null);\n  const videoPlayerRef = useRef(null);\n  const [videoURL, setVideoURL] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isCameraturnOn, setIsCameraturnOn] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [recordingMode, setRecordingMode] = useState(false);\n  const { timeString, start, stop, pause, resume } = useTimer();\n  const toast = useToast();\n\n  const stopStream = stream => {\n    stream.getTracks().forEach(track => track.stop());\n  };\n  const handleDataAvailable = ({ data }) => {\n    if (data.size > 0) {\n      setRecordedChunks(prev => prev.concat(data));\n    }\n  };\n  const handelPause = () => {\n    mediaRecorderRef.current.pause();\n    setIsPaused(true);\n    pause();\n  };\n  const handelResume = () => {\n    mediaRecorderRef.current.resume();\n    setIsPaused(false);\n    resume();\n  };\n  const handleStartCaptureClick = () => {\n    setCapturing(true);\n    setRecordedChunks([]);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current, {\n      mimeType: 'video/webm',\n    });\n    start();\n    mediaRecorderRef.current.addEventListener(\n      'dataavailable',\n      handleDataAvailable\n    );\n    if (videoRef.current) {\n      if (window.URL) {\n        videoRef.current.srcObject = webcamRef.current;\n      } else {\n        videoRef.current.src = webcamRef.current;\n      }\n      videoRef.current.controls = false;\n      videoRef.current.muted = true;\n    }\n    mediaRecorderRef.current.addEventListener('stop', () => {\n      // stopStream(webcamRef.current);\n    });\n    mediaRecorderRef.current.start(1000);\n  };\n  const TurnOnCamera = () => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        webcamRef.current = stream;\n        if (videoRef.current) {\n          videoRef.current.srcObject = webcamRef.current;\n\n          videoRef.current.muted = true;\n        }\n        setIsCameraturnOn(true);\n      })\n      .catch(error => {\n        stopStream(webcamRef.current);\n        toast({\n          title: 'Not Allowd .',\n          description: 'We need pirmisionss.',\n          status: 'error',\n          duration: 9000,\n          isClosable: true,\n        });\n      });\n  };\n  const handleStopCaptureClick = () => {\n    mediaRecorderRef.current.stop();\n\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, {\n        type: 'video/webm',\n      });\n      const url = URL.createObjectURL(blob);\n      videoRef.current.srcObject = null;\n      if (onChange) {\n        onChange(new File([blob], 'video.webm'));\n      }\n      setVideoURL(url);\n      videoRef.current.src = url;\n      videoRef.current.load();\n      videoRef.current.controls = true;\n      videoRef.current.muted = false;\n      videoRef.current.play();\n    }\n    stop();\n    setCapturing(false);\n  };\n\n  const setVideoRef = dom => {\n    if (dom) {\n      videoRef.current = dom;\n    }\n  };\n\n  useEffect(() => {\n    if (videoRef.current) {\n      if (window.URL) {\n        videoRef.current.srcObject = webcamRef.current;\n      } else {\n        videoRef.current.src = webcamRef.current;\n      }\n      videoRef.current.muted = true;\n    }\n  }, [isCameraturnOn]);\n  useEffect(() => {\n    if (extVideoSrcUrl) {\n      videoPlayerRef.current.autoplay = false;\n      videoPlayerRef.current.src = extVideoSrcUrl;\n      videoPlayerRef.current.load();\n      videoPlayerRef.current.controls = true;\n    }\n    return () => {\n      if (webcamRef.current) stopStream(webcamRef.current);\n      if (videoURL) URL.revokeObjectURL(videoURL);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [extVideoSrcUrl]);\n  useEffect(() => {\n    // if (recordedChunks.length) {\n    //   const blob = new Blob(recordedChunks, {\n    //     type: 'video/webm',\n    //   });\n    //   if (onChange) {\n    //     onChange(new File([blob], 'video.webm'));\n    //   }\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recordedChunks]);\n  return (\n    // <video ref={setVideoRef} width=\"620\" autoPlay height=\"100%\"></video>\n    <Box position=\"relative\">\n      {extVideoSrcUrl && !recordingMode ? (\n        <Player\n          ref={videoPlayerRef}\n          playsInline\n          autoPlay\n          width=\"620\"\n          height=\"100%\"\n        >\n          <source src={extVideoSrcUrl} ref={sourceRef} />\n          <ControlBar>\n            <IconButton\n              order={7}\n              icon={<RiVideoAddLine />}\n              onClick={() => setRecordingMode(true)}\n              aria-label=\"Start Recording\"\n              style={{ fontSize: '24px' }}\n              fontSize=\"40px\"\n            />\n          </ControlBar>\n        </Player>\n      ) : (\n        <>\n          {isCameraturnOn ? (\n            <video ref={setVideoRef} width=\"620\" autoPlay height=\"100%\"></video>\n          ) : (\n            <Center bg=\"black\" h=\"60\" minW=\"xl\">\n              <Button variant=\"outline\" onClick={TurnOnCamera}>\n                Turn The camera on\n              </Button>\n            </Center>\n          )}\n          {capturing ? (\n            <Controls\n              onPause={handelPause}\n              onResume={handelResume}\n              isPaused={isPaused}\n              timeString={timeString}\n              onStop={handleStopCaptureClick}\n            />\n          ) : (\n            <>\n              {webcamRef.current && (\n                <>\n                  <RecordButton onClick={handleStartCaptureClick} />\n                </>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default VideoRecorder;\n","import Icon from '@chakra-ui/icon';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  ModalHeader,\n  useDisclosure,\n  Divider,\n  Button,\n  Box,\n  Tag,\n  HStack,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  IconButton,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  Alert,\n  Spinner,\n  Center,\n  Skeleton,\n} from '@chakra-ui/react';\nimport React, {  useEffect, useState } from 'react';\nimport { AiFillAudio } from 'react-icons/ai';\nimport AudioRecorder from '../../Componets/AudioRecorder';\nimport Card from '../../Componets/Card';\nimport ContactSelector from '../../Componets/ContactSelector';\nimport VideoRecorder from '../../Componets/VideoRecorder';\nimport { ContactService, PostService } from '../../services';\nimport {\n  MdScreenShare,\n  MdMoreVert,\n  MdDelete,\n  MdModeEdit,\n} from 'react-icons/md';\nconst Message = ({ status = 'info', title, message }) => {\n  return (\n    <Alert\n      status={status}\n      variant=\"subtle\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      height=\"250px\"\n    >\n      <AlertIcon boxSize=\"40px\" mr={0} />\n      <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n        {title}\n      </AlertTitle>\n      <AlertDescription maxWidth=\"sm\">{message}</AlertDescription>\n    </Alert>\n  );\n};\nconst ContacNamesDisplayer = ({ contactsNames,isStillFetching }) => {\n\n  return (\n    <Box flex=\"1\" isTruncated wordBreak=\"break-all\" maxWidth=\"87%\">\n       <Skeleton isLoaded={!isStillFetching}>\n      <HStack  spacing='0.5'>\n        {contactsNames.map((obj, index) => (\n          <Tag\n            fontSize=\"xs\"\n            isTruncated\n            colorScheme=\"none\"\n            fontWeight=\"bold\"\n            key={index}\n          >\n            {obj.label}\n          </Tag>\n        ))}\n      </HStack>\n      </Skeleton>\n    </Box>\n  );\n};\nconst DisplayPreviewContent = ({ mediaType, file }) => {\n  if (mediaType === 'VIDEO') {\n    return (\n      <Box\n        border=\"2px\"\n        borderColor=\"black\"\n        margin=\"auto\"\n        h=\"85%\"\n        backgroundColor=\"black\"\n      >\n        <video src={file} style={{height:'100%'}} ></video>\n      </Box>\n    );\n  }\n\n  return (\n    <Box border=\"2px\" borderColor=\"black\" margin=\"auto\">\n      <Icon as={AiFillAudio} boxSize=\"90%\" margin=\"auto\" />\n    </Box>\n  );\n};\nconst DisplayMediaContent = ({\n  mediaType,\n  file,\n  onRecordHnadler,\n  recipients,\n  onSelectHandler,\n}) => {\n  return (\n    <>\n      {mediaType === 'AUDIO' ? (\n        <AudioRecorder extAudioSrcUrl={file} onChange={onRecordHnadler} />\n      ) : (\n        <VideoRecorder extVideoSrcUrl={file} onChange={onRecordHnadler}/>\n      )}\n      <Divider my=\"2\" />\n      <ContactSelector\n        extSelectedContacts={recipients}\n        onChange={onSelectHandler}\n      />\n    </>\n  );\n};\nconst DisplayUpdateStatus = ({ isUpdatedSuccessfully,loading }) => {\n  if(loading) return(\n    <>\n    <Center height='100%'>\n      <Spinner size=\"xl\" />\n     </Center>\n    </>\n  )\n  return (\n    <>\n      {isUpdatedSuccessfully ? (\n        <Message\n          status=\"success\"\n          title=\"Will update\"\n          message=\"The will has been  Updated\"\n        />\n      ) : (\n        <Message\n          status=\"error\"\n          title=\"Will update\"\n          message=\"The will has not  been  Updated\"\n        />\n      )}\n    </>\n  );\n};\nconst DisplayContent = ({\n  onClose,\n  isOpen,\n  mediaType,\n  file,\n  onRecordHnadler,\n  recipients,\n  onSelectHandler,\n  onSaveHandler,\n  disbled,\n  loading,\n  isUpdated,\n  isUpdatedSuccessfully = null,\n}) => {\n  return (\n    <Modal\n      onClose={onClose}\n      isOpen={isOpen}\n      size=\"2xl\"\n      closeOnOverlayClick={false}\n    >\n      <ModalOverlay />\n\n      <ModalContent p=\"2\">\n        <ModalHeader> </ModalHeader>\n\n        <ModalBody h=\"full\" w=\"100%\">\n          {isUpdated ? (\n            <DisplayUpdateStatus\n              isUpdatedSuccessfully={isUpdatedSuccessfully}\n              loading={loading}\n            />\n          ) : (\n            <DisplayMediaContent\n              mediaType={mediaType}\n              file={file}\n              onRecordHnadler={onRecordHnadler}\n              recipients={recipients}\n              onSelectHandler={onSelectHandler}\n            />\n          )}\n        </ModalBody>\n        <Box display=\"flex\" flexDirection=\"row-reverse\" my=\"2\">\n          <Button\n            mx=\"1\"\n            onClick={onSaveHandler}\n            disabled={disbled}\n            isLoading={loading}\n          >\n            Update\n          </Button>\n\n          <Button mx=\"1\" variant=\"outline\" onClick={onClose}>\n            Close\n          </Button>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n};\nconst DisplayPreview = ({\n  mediaType,\n  file,\n  onCloseDialog,\n  contacts,\n  onOpen,\n  dialogIsOpen,\n  cancelRef,\n  onDeletePostHandler,\n  onDialogIsOpen,\n  isStillFetching,\n\n}) => {\n  return (\n    <Card\n      onClick={onOpen}\n      my={['1', '2', '2']}\n      mx={['1', '1', '4']}\n      p={['1', '2', '4']}\n      variant=\"rounded\"\n      width={['95%', '95%', '90%', '29%', '29%', '90']}\n      border=\"2px\"\n      _hover={{ bg: 'gray.100', border: '4px' }}\n    >\n      {/* {media_type === 'AUDIO' && <Icon as={AiFillAudio} boxSize=\"60\" />} */}\n      <DisplayPreviewContent mediaType={mediaType} file={file}  />\n\n      <Box display=\"flex\" mt=\"2\" justifyContent=\"space-between\">\n        <Box mx=\"1\">\n          <Icon as={MdScreenShare} boxSize=\"6\" />\n        </Box>\n        <ContacNamesDisplayer contactsNames={contacts} isStillFetching={isStillFetching} />\n        <Box mx=\"1\" onClick={e => e.stopPropagation()}>\n          <Menu onClick={e => e.stopPropagation()}>\n            <MenuButton\n              as={IconButton}\n              aria-label=\"Options\"\n              icon={<MdMoreVert />}\n              variant=\"ghost\"\n            />\n            <MenuList>\n              <MenuItem icon={<MdModeEdit />} onClick={onOpen}>\n                Edit..\n              </MenuItem>\n              <MenuItem\n                icon={<MdDelete />}\n                onClick={() => onDialogIsOpen(true)}\n              >\n                Delete\n              </MenuItem>\n              <AlertDialog\n                isOpen={dialogIsOpen}\n                leastDestructiveRef={cancelRef}\n                onClose={onCloseDialog}\n              >\n                <AlertDialogOverlay>\n                  <AlertDialogContent>\n                    <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                      Delete will\n                    </AlertDialogHeader>\n\n                    <AlertDialogBody>\n                      Are you sure? You can't undo this action afterwards.\n                    </AlertDialogBody>\n\n                    <AlertDialogFooter>\n                      <Button ref={cancelRef} onClick={onCloseDialog}>\n                        Cancel\n                      </Button>\n                      <Button\n                        colorScheme=\"red.500\"\n                        onClick={onDeletePostHandler}\n                        ml={3}\n                        backgroundColor=\"red.600\"\n                      >\n                        Delete\n                      </Button>\n                    </AlertDialogFooter>\n                  </AlertDialogContent>\n                </AlertDialogOverlay>\n              </AlertDialog>\n            </MenuList>\n          </Menu>\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n\nconst Will = ({ media_type, file, recipients, id, onDelete, index }) => {\n  const defaultValues = React.useRef();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const service = PostService();\n  // valu and names of selected contacts\n  const [contacts, setContacts] = useState(recipients);\n  const [updatedfile, setUpdatedFile] = useState(file);\n  const contactService = ContactService();\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [isUpdatedSuccessfully, setIsUpdatedSuccessfully] = useState(null);\n  const onCloseDialog = () => setDialogIsOpen(false);\n  const [isStillFetching, setIsStillFetching] = useState(false);\n  const cancelRef = React.useRef();\n  const setTimeRef = React.useRef();\n  const saveHandler = () => {\n    const recipients = contacts.map(val => val.value);\n    const values = { id, file: updatedfile, recipients,media_type };\n    const updateValues = {};\n    for (const key in defaultValues.current) {\n      if (values[key] && defaultValues.current[key] !== values[key]) {\n        updateValues[key] = values[key];\n      }\n    }\n    if (Object.keys(updateValues).length === 0) return;\n    setLoading(true);\n    setIsUpdated(true);\n    service\n      .update(id, {...updateValues,media_type})\n      .then(res => {\n        setLoading(false);\n        setIsUpdatedSuccessfully(true);\n        setTimeRef.current = setTimeout(() => {\n          onClose();\n          setIsUpdated(false);\n          setIsUpdatedSuccessfully(false);\n        }, 2000);\n      })\n      .catch(error => {\n        try {\n          setLoading(false);\n          setIsUpdatedSuccessfully(false);\n        } catch (error) {}\n      });\n  };\n  const selectHandler = selectdContacts => {\n    setContacts(selectdContacts);\n  };\n  const recordHnadler = file => {\n    setUpdatedFile(file);\n  };\n  const handelDisbled = (() => {\n    const recipients = contacts.map(val => val.value);\n    const values = { id, file: updatedfile, recipients };\n\n    const updateValues = {};\n    for (const key in defaultValues.current) {\n      if (\n        values[key] &&\n        defaultValues.current[key].toString() !== values[key].toString()\n      ) {\n        updateValues[key] = values[key];\n      }\n    }\n\n    return (\n      Object.keys(updateValues).length === 0 ||\n      recipients.length === 0 ||\n      isUpdated\n    );\n  })();\n  const deletePostHandler = () => {\n    service\n      .deleteMedia(id)\n      .then(res => {\n        onDelete(index);\n        onCloseDialog();\n      })\n      .catch(error => {});\n  };\n  useEffect(() => {\n    let freshContactList = [];\n    defaultValues.current = { media_type, file, recipients };\n    setIsStillFetching(true)\n    if (recipients.length > 0)\n      contactService\n        .getList()\n        .then(res => {\n          const data = res.data;\n          freshContactList = data.map(value => {\n            return {\n              value: value.id,\n              label: value.first_name + ' ' + value.last_name,\n            };\n          });\n          const selectedItems = freshContactList.filter(opt =>\n            recipients.includes(opt.value)\n          );\n          setContacts(selectedItems);\n          setIsStillFetching(false)\n        })\n        .catch(error => {});\n    return () => {\n      clearTimeout(setTimeRef.current);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <DisplayPreview\n        mediaType={media_type}\n        file={file}\n        onCloseDialog={onCloseDialog}\n        contacts={contacts}\n        onOpen={onOpen}\n        dialogIsOpen={dialogIsOpen}\n        cancelRef={cancelRef}\n        onDeletePostHandler={deletePostHandler}\n        onDialogIsOpen={setDialogIsOpen}\n        isStillFetching={isStillFetching}\n      />\n      <DisplayContent\n        onClose={onClose}\n        isOpen={isOpen}\n        mediaType={media_type}\n        file={file}\n        onRecordHnadler={recordHnadler}\n        recipients={recipients}\n        onSelectHandler={selectHandler}\n        onSaveHandler={saveHandler}\n        disbled={handelDisbled}\n        loading={loading}\n        isUpdated={isUpdated}\n        isUpdatedSuccessfully={isUpdatedSuccessfully}\n      />\n    </>\n  );\n};\n\nexport default Will;\n","import {\n  Box,\n  Button,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  Text,\n  Link\n} from '@chakra-ui/react';\n// import { LinkIcon } from '@chakra-ui/icons'\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link as LinkRouter } from 'react-router-dom';\nimport { RiArrowLeftFill } from 'react-icons/ri';\nimport { CreateRecordContext } from './RecorderCreator';\nimport { RecorderContext } from '../Home';\nimport { useAsyncReference } from '../../../Componets/utils';\nconst AssistantWrapper = ({ mainComponent, context, children, ...rest }) => {\n  const [disabledNext, setDisabledNext] = useState(false);\n  const [isEnded, setIsEnded] = useState(false);\n  const [showContactsInfo, SetShowContactsInfo] = useState(false);\n  const [provousEnabled, setProvousEnabled] = useState(true);\n  const { onClose } = useContext(RecorderContext);\n  const [childWithProps, setChildWithProps] = useAsyncReference(mainComponent);\n  const {\n    selectedContacts,\n    setSelectedContact,\n    setMediaType,\n    setMediaFile,\n    mediaFile,\n  } = useContext(CreateRecordContext);\n\n  const { previous, hasProvous, hasNext, next } = useContext(context);\n  const handelSave = () => {\n    if (hasNext) next();\n  };\n  const onChangeHandeler = value => {\n    const typeName = mainComponent.type.name;\n    switch (typeName) {\n      case 'ContactSelector':\n        const ids = value.map(contacts => contacts.value);\n        setSelectedContact(ids);\n        setDisabledNext(false);\n        if (ids.length === 0) setDisabledNext(true);\n        break;\n      case 'AudioRecorder':\n        setMediaFile(value);\n        setDisabledNext(false);\n        break;\n      case 'VideoRecorder':\n        setDisabledNext(false);\n        setMediaFile(value);\n        break;\n      case 'RecorderAssistant':\n        setMediaType(value);\n        setDisabledNext(false);\n        break;\n      case 'SaveRecord':\n        setIsEnded(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    const typeName = mainComponent.type.name;\n\n    let com;\n    let url = null;\n    switch (typeName) {\n      case 'ContactSelector':\n        if (selectedContacts.length === 0) setDisabledNext(true);\n        com = React.cloneElement(mainComponent, {\n          onChange: onChangeHandeler,\n          extSelectedContacts: [...selectedContacts],\n          ids: selectedContacts,\n        });\n        setChildWithProps(com);\n        SetShowContactsInfo(true);\n        \n        break;\n      case 'AudioRecorder':\n        if (mediaFile === null) {\n          setDisabledNext(true);\n        } else {\n          url = URL.createObjectURL(mediaFile);\n          setDisabledNext(false);\n        }\n\n        com = React.cloneElement(mainComponent, {\n          onChange: onChangeHandeler,\n          extAudioSrcUrl: url,\n        });\n        setChildWithProps(com);\n        break;\n      case 'VideoRecorder':\n        if (mediaFile === null) {\n          setDisabledNext(true);\n        } else {\n          setDisabledNext(false);\n\n          url = URL.createObjectURL(mediaFile);\n        }\n\n        com = React.cloneElement(mainComponent, {\n          onChange: onChangeHandeler,\n          extVideoSrcUrl: url,\n        });\n\n        setChildWithProps(com);\n        break;\n      case 'RecorderAssistant':\n        if (mediaFile === null) setDisabledNext(true);\n        com = React.cloneElement(mainComponent, {\n          onChange: onChangeHandeler,\n        });\n        break;\n      case 'SaveRecord':\n        com = React.cloneElement(mainComponent, {\n          onChange: onChangeHandeler,\n          handleProvousEnable: val => setProvousEnabled(val),\n        });\n        setDisabledNext(true);\n        setChildWithProps(com);\n        break;\n      default:\n        com = React.cloneElement(mainComponent, {\n          onChange: onChangeHandeler,\n        });\n        setDisabledNext(true);\n        setChildWithProps(com);\n        break;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mainComponent]);\n\n  return (\n    <Box\n      w=\"100%\"\n      minH=\"389px\"\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      flexDirection=\"column\"\n    >\n      <Box w=\"100%\" margin=\"auto\">\n        {showContactsInfo && (\n          <Alert\n            status=\"info\"\n            variant=\"subtle\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            textAlign=\"center\"\n            height=\"250px\"\n          >\n            <AlertIcon boxSize=\"40px\" mr={0} />\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n              Contacts\n            </AlertTitle>\n            <AlertDescription maxWidth=\"sm\">\n              Select contacts you want them to receive your Will. or \n              <Link as={LinkRouter} to=\"/contacts\" ><Text color=\"teal.500\">create new Contact</Text>  </Link>\n            </AlertDescription>\n          </Alert>\n        )}\n        {childWithProps.current}\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row-reverse\" my=\"2\">\n        <Button mx=\"1\" onClick={handelSave} disabled={disabledNext}>\n          {hasNext ? 'Next' : 'Save'}\n        </Button>\n        {hasProvous && provousEnabled && (\n          <Button\n            variant=\"outline\"\n            onClick={previous}\n            mx=\"2\"\n            leftIcon={<RiArrowLeftFill />}\n          >\n            Previous\n          </Button>\n        )}\n        <Button mx=\"1\" variant=\"outline\" onClick={onClose}>\n          {isEnded ? 'Close' : 'Cancel'}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AssistantWrapper;\n","import  { useRef, useState } from 'react';\n\nexport  function useAsyncReference(value) {\n  const ref = useRef(value);\n  const [, forceRender] = useState(false);\n\n  function updateState(newState) {\n    if (!Object.is(ref.current, newState)) {\n      ref.current = newState;\n      forceRender(s => !s);\n    }\n  }\n\n  return [ ref , updateState];\n}\n","import {\n  Alert,\n  AlertTitle,\n  AlertIcon,\n  AlertDescription,\n} from '@chakra-ui/alert';\nimport { Box, Heading } from '@chakra-ui/layout';\nimport { Progress } from '@chakra-ui/progress';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { PostService } from '../../../services';\nimport { CreateRecordContext } from './RecorderCreator';\nimport { PostsContext } from '../Home';\nimport { Spinner } from '@chakra-ui/spinner';\nimport axios from 'axios';\nconst CancelToken = axios.CancelToken;\nconst Cancelsource = CancelToken.source();\nconst SaveRecord = ({ handleProvousEnable, onChange }) => {\n  const [progress, setProgress] = useState(0);\n  const [uploading, setUploading] = useState(true);\n  const [isUploadingSuccessed, setIsUploadingSuccessed] = useState(false);\n  const service = PostService();\n  const { addPost } = useContext(PostsContext);\n\n  const { selectedContacts, mediaType, mediaFile } =\n    useContext(CreateRecordContext);\n  useEffect(() => {\n    service\n      .create(\n        {\n          file: mediaFile,\n          media_type: mediaType,\n          contacts: selectedContacts,\n        },\n        progressEvent => {\n          const totalLength = progressEvent.lengthComputable\n            ? progressEvent.total\n            : progressEvent.target.getResponseHeader('content-length') ||\n              progressEvent.target.getResponseHeader(\n                'x-decompressed-content-length'\n              );\n          let val = Math.round((progressEvent.loaded * 100) / totalLength);\n          setProgress(val);\n          if (val === 100) {\n            handleProvousEnable(false);\n          }\n        },\n        Cancelsource\n      )\n      .then(res => {\n        addPost(res.data);\n        setUploading(false);\n        setIsUploadingSuccessed(true);\n        if (onChange) onChange(true);\n      })\n      .catch(error => {\n        setUploading(false);\n        setIsUploadingSuccessed(false);\n        if (onChange) onChange(false);\n        handleProvousEnable(true);\n        try {\n        } catch (error) {}\n      });\n    return () => {\n      // setSelectedContact([]);\n      // setMediaFile(null);\n      if (uploading) Cancelsource.cancel();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <Box margin=\"auto\" h=\"100%\" w=\"100%\">\n      {uploading ? (\n        <>\n          <Box>\n            <Heading size=\"md\" my=\"2\">\n              <Spinner size=\"sm\" mr=\"2\" />\n              Uploading\n            </Heading>\n          </Box>\n          <Progress hasStripe value={progress} />\n        </>\n      ) : (\n        <>\n          {isUploadingSuccessed ? (\n            <Alert\n              status=\"success\"\n              variant=\"subtle\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              textAlign=\"center\"\n              height=\"250px\"\n            >\n              <AlertIcon boxSize=\"40px\" mr={0} />\n              <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                Uploading\n              </AlertTitle>\n              <AlertDescription maxWidth=\"sm\">\n                The will has been uploaded successfully\n              </AlertDescription>\n            </Alert>\n          ) : (\n            <Alert\n              status=\"error\"\n              variant=\"subtle\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              textAlign=\"center\"\n              height=\"250px\"\n            >\n              <AlertIcon boxSize=\"40px\" mr={0} />\n              <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                Uploading\n              </AlertTitle>\n              <AlertDescription maxWidth=\"sm\">\n                The will has not been uploaded\n              </AlertDescription>\n            </Alert>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default SaveRecord;\n","import {\n  Box,\n  Center,\n  Divider,\n  Flex,\n  Heading,\n  Icon,\n  Spacer,\n  Tooltip,\n} from '@chakra-ui/react';\nimport React, {  useContext } from 'react';\nimport { BsFillCameraVideoFill, BsBoxArrowInRight } from 'react-icons/bs';\nimport { AiFillAudio } from 'react-icons/ai';\nimport { ComponentsQueue } from './RecorderCreator';\nimport AudioRecorder from '../../../Componets/AudioRecorder';\nimport VideoRecorder from '../../../Componets/VideoRecorder';\n\nimport AssistantWrapper from './AssistantWrapper';\nimport SaveRecord from './SaveRecord';\nimport { CreateRecordContext } from './RecorderCreator';\nconst ChoiceItem = ({ type, onChoose, title, icon }) => {\n  return (\n    <Tooltip label={` Click to record using ${type} `}>\n      <Flex\n        boxShadow=\"md\"\n        rounded=\"md\"\n        bg=\"white\"\n        p=\"2\"\n        cursor=\"pointer\"\n        m=\"2\"\n        _hover={{ bg: 'gray.100', border: '1px' }}\n        onClick={() => onChoose(type)}\n      >\n        <Box flex=\"1\" p=\"2\">\n          <Heading size=\"md\"> {title} </Heading>\n        </Box>\n        <Spacer />\n        <Box>\n          <Icon as={icon} boxSize=\"10\" />\n        </Box>\n        <Divider orientation=\"vertical\" bgColor=\"gray.600\" border=\"2\" />\n        <Center p=\"2\">\n          <Icon as={BsBoxArrowInRight} boxSize=\"6\" color=\"gray.600\" />\n        </Center>\n      </Flex>\n    </Tooltip>\n  );\n};\nconst RecorderAssistant = ( ) => {\n  const { setMediaType } = useContext(CreateRecordContext);\n  const { next, defaultQueue, queue } =\n    useContext(ComponentsQueue);\n\n  const handelChoose = type => {\n    queue.splice(0, queue.length, ...defaultQueue);\n    if (type === 'VIDEO') {\n      queue.push(\n        <AssistantWrapper\n          mainComponent={<VideoRecorder />}\n          context={ComponentsQueue}\n        />\n      );\n    } else if (type === 'AUDIO') {\n      queue.push(\n        <AssistantWrapper\n          mainComponent={<AudioRecorder />}\n          context={ComponentsQueue}\n        />\n      );\n    }\n\n    queue.push(\n      <AssistantWrapper\n        mainComponent={<SaveRecord />}\n        context={ComponentsQueue}\n      />\n    );\n    setMediaType(type);\n    next(true);\n  };\n  // useEffect(() => {\n  //   queue.splice(0, queue.length, ...defaultQueue);\n  // }, []);\n\n  return (\n    <>\n\n        <Box\n          p=\"2\"\n          height=\"100%\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"space-between\"\n        >\n          <Center p=\"4\" bg=\"gray.100\" border=\"2px\">\n            <Heading size=\"md\">\n              Choose a media medium you like to record with\n            </Heading>\n          </Center>\n          <Divider mb=\"4\" />\n          <Box>\n            <ChoiceItem\n              onChoose={handelChoose}\n              type=\"VIDEO\"\n              icon={BsFillCameraVideoFill}\n              title=\"Video\"\n            />\n            <ChoiceItem\n              onChoose={handelChoose}\n              type=\"AUDIO\"\n              icon={AiFillAudio}\n              title=\"Audio\"\n            />\n          </Box>\n          <Divider my=\"2\" />\n        </Box>\n     \n    </>\n  );\n};\n\nexport default RecorderAssistant;\n","import React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useState,\n  useReducer,\n  useRef,\n} from 'react';\nimport ContactSelector from '../../../Componets/ContactSelector';\nimport AssistantWrapper from './AssistantWrapper';\nimport RecorderAssistant from './RecorderAssistant';\nexport const PermissionsContext = createContext();\nexport const ComponentsQueue = createContext();\nfunction queueReducer(state, value) {\n  return {\n    ...state,\n    ...value,\n  };\n}\nexport const CreateRecordContext = createContext();\nconst RecorderCreator = () => {\n  const [selectedContacts, setSelectedContact] = useState([]);\n  const [mediaType, setMediaType] = useState('AUDIO');\n  const [mediaFile, setMediaFile] = useState(null);\n  const WrappedContactSelector = () => (\n    <AssistantWrapper\n      context={ComponentsQueue}\n      mainComponent={<ContactSelector/>}\n    />\n  );\n  const WrappedoctRecorderAssistant = () => (\n    <AssistantWrapper\n      context={ComponentsQueue}\n      mainComponent={<RecorderAssistant />}\n    />\n  );\n\n  const defaultQueue = [\n    <WrappedContactSelector/>,\n    <WrappedoctRecorderAssistant />,\n  ];\n  const queue = useRef(defaultQueue);\n  const [queueDetails, queueDetailsDispatch] = useReducer(queueReducer, {\n    cursor: 0,\n    currentComponent: defaultQueue[0],\n    queue: defaultQueue,\n  });\n\n  const hasProvous = (() => queueDetails.cursor > 0)();\n  const previous = useCallback(() => {\n    if (hasProvous) {\n      const index = queueDetails.cursor - 1;\n\n      queueDetailsDispatch({\n        cursor: index,\n        currentComponent: queue.current[index],\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queueDetails]);\n  const hasNext = (() => queueDetails.cursor + 1 < queue.current.length)();\n  const next = (bypass = false) => {\n    if (!bypass) if (!hasNext) return;\n    const index = queueDetails.cursor + 1;\n\n    queueDetailsDispatch({\n      cursor: index,\n      currentComponent: queue.current[index],\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  };\n  useEffect(() => {\n  }, []);\n\n  return (\n    <CreateRecordContext.Provider\n      value={{\n        selectedContacts,\n        setSelectedContact,\n        setMediaType,\n        mediaType,\n        setMediaFile,\n        mediaFile,\n      }}\n    >\n      <ComponentsQueue.Provider\n        value={{\n          queueDetailsDispatch,\n          hasProvous,\n          hasNext,\n          next,\n          previous,\n          queue: queue.current,\n          cursor: queueDetails.cursor,\n          defaultQueue,\n        }}\n      >\n        {queueDetails.currentComponent}\n      </ComponentsQueue.Provider>\n    </CreateRecordContext.Provider>\n  );\n};\n\nexport default RecorderCreator;\n","import RecorderCreator from './RecorderCreator';\nexport default RecorderCreator;\n// export const ComponentsQueue = queue;\n","import React from 'react';\nimport Login from '../pages/Login';\nimport { authManager } from '../services';\n\nconst AuthWarapper = React.forwardRef(({ children }, ref) => {\n  // const [auth, setAuth] = useState(null);\n  const auth = authManager();\n\n  if (auth === null) return <Login ref={ref} />;\n  if (auth.isValid()) return <>{children}</>;\n  return <Login ref={ref} />;\n});\n\nexport default AuthWarapper;\n","import {\n  Box,\n  Flex,\n  Circle,\n  Icon,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  ModalHeader,\n  Tooltip,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  Divider,\n  Button,\n  AlertDescription,\n} from '@chakra-ui/react';\nimport React, { createContext, useEffect, useState } from 'react';\nimport { RiMailAddLine } from 'react-icons/ri';\nimport Loading from '../../Componets/Loading';\nimport Continer from '../../Componets/Layout/Continer';\nimport Nav from '../../Componets/Nav';\nimport Will from './Will';\nimport RecorderCreator from './RecorderCreator';\nimport AuthWarapper from '../../Wrappers/AuthWarapper';\nimport { PostService } from '../../services';\nexport const RecorderContext = createContext();\nexport const PostsContext = createContext();\nconst Home = () => {\n  const [isPostsLoading, setIsPostLoading] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const service = PostService();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    setIsPostLoading(true);\n    service\n      .getList()\n      .then(res => {\n        setIsPostLoading(false);\n        setPosts(res.data);\n      })\n      .catch(error => {\n        setIsPostLoading(false);\n        try {\n        } catch (error) {}\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (isPostsLoading)\n    return (\n      <Box h=\"100%\">\n        <Nav />\n        <Continer height=\"100%\">\n          <Loading m=\"auto\" message=\"Loading\" />\n        </Continer>\n      </Box>\n    );\n  const handelDelete = index => {\n    const newPosts = [...posts];\n    newPosts.splice(index, 1);\n    setPosts(newPosts);\n  };\n  const addPost=(newPost)=>{\n    const values=[...posts]\n    setPosts([newPost,...values])\n  }\n  return (\n    <AuthWarapper>\n       <PostsContext.Provider value={{addPost}}>\n      {/* <AuthWarapper> */}\n      <Box h=\"100%\">\n        <Nav />\n        <Continer minH=\"90%\">\n       \n          <Box backgroundColor=\"#EDEDED\" minH=\"91vh\">\n            {posts.length === 0 ? (\n              <Alert\n                status=\"info\"\n                variant=\"subtle\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                textAlign=\"center\"\n                height=\"250px\"\n              >\n                <AlertIcon boxSize=\"40px\" mr={0} />\n                <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                  Create a new Will\n                </AlertTitle>\n                <AlertDescription maxWidth=\"md\">\n                  There is no Will at this moment. create new one\n                </AlertDescription>\n                <Divider />\n                <Button variant=\"solid\" size=\"lg\" my=\"2\" onClick={onOpen}>\n                  Create a will\n                </Button>\n              </Alert>\n            ) : (\n              <Flex\n                pt=\"10\"\n                px={['1', '2']}\n                flexWrap={['nowrap', 'nowrap', 'wrap']}\n                flexBasis=\"1\"\n                flexDirection={['column', 'column', 'row']}\n              >\n                {posts.map((value, index) => (\n                  <Will\n                    {...value}\n                    key={index}\n                    index={index}\n                    onDelete={handelDelete}\n                  />\n                ))}\n              </Flex>\n            )}\n          </Box>\n       \n          <Tooltip label=\"Create new will\" aria-label=\"Create New Will\">\n            <Circle\n              size=\"60px\"\n              cursor=\"pointer\"\n              bg=\"black\"\n              color=\"white\"\n              position=\"fixed\"\n              bottom=\"5\"\n              right=\"5\"\n              onClick={onOpen}\n            >\n              <Icon as={RiMailAddLine} boxSize=\"8\" />\n            </Circle>\n          </Tooltip>\n        </Continer>\n      </Box>\n      <RecorderContext.Provider value={{ onClose }}>\n        <Modal\n          onClose={onClose}\n          isOpen={isOpen}\n          size=\"2xl\"\n          minH=\"6200px\"\n          closeOnOverlayClick={false}\n        >\n          <ModalOverlay />\n\n          <ModalContent p=\"2\" minH=\"500px\">\n            <ModalHeader>New will </ModalHeader>\n\n            <ModalBody h=\"90%\">\n              <RecorderCreator />\n            </ModalBody>\n            {/* <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter> */}\n          </ModalContent>\n        </Modal>\n      </RecorderContext.Provider>\n      {/* </AuthWarapper> */}\n      </PostsContext.Provider>\n      </AuthWarapper>\n  );\n};\n\nexport default Home;\n","import Home, { RecorderContext } from './Home';\n\nexport default Home;\nexport { RecorderContext };\n","import { Center, Heading } from '@chakra-ui/react';\nimport React from 'react';\nimport Nav from '../Componets/Nav';\nconst NotFound = () => {\n  return (\n    <>\n    <Nav/>\n      <Center h=\"90%\">\n        <Heading>404 Page Not Found</Heading>\n      </Center>\n    </>\n  );\n};\n\nexport default NotFound;\n","import { extendTheme } from '@chakra-ui/react';\n\nconst Card = {\n  // The styles all Cards have in common\n  baseStyle: {\n    // display: \"flex\",\n    // flexDirection: \"column\",\n    background: \"white\",\n    alignItems: \"center\",\n    gap: 6,\n  },\n  // Two variants: rounded and smooth\n  variants: {\n    rounded: {\n      padding: 8,\n      borderRadius: \"xl\",\n      boxShadow: \"xl\",\n    },\n    smooth: {\n      padding: 6,\n      borderRadius: \"base\",\n      boxShadow: \"md\",\n    },\n  },\n  // The default variant value\n  defaultProps: {\n    variant: \"smooth\",\n  },\n}\n\nconst theme = extendTheme({\n  config: {\n    initialColorMode: 'light',\n    useSystemColorMode: false,\n  },\n  colors: {\n    focusBorderColor: 'black',\n  },\n  components: {\n    Card,\n    Input: {\n      border: 'red',\n      variants: {\n        outline: props => ({\n          _focus: {\n            borderColor: 'black',\n          },\n        }),\n      },\n      defaultProps: {\n        focusBorderColor: 'black',\n        border: 'red',\n      },\n    },\n\n    Button: {\n      baseStyle: {\n        fontWeight: 'bold',\n      },\n\n      // 3. We can add a new visual variant\n      variants: {\n        // 4. We can override existing variants\n        solid: props => ({\n          bg: props.colorMode === 'dark' ? 'White' : 'Black',\n          color: props.colorMode === 'dark' ? 'Black' : 'White',\n          _hover: {\n            bg: props.colorMode === 'dark' ? 'gray.100' : 'gray.600',\n          },\n        }),\n        outline: props => ({\n          bg: props.colorMode === 'dark' ? 'gray.800' : 'White',\n          color: props.colorMode === 'dark' ? 'White' : 'Black',\n          borderColor: 'black',\n          _hover: {\n            bg: props.colorMode === 'dark' ? 'gray.600' : 'gray.50',\n          },\n        }),\n      },\n    },\n  },\n});\nexport default theme;\n","import {\n  FormHelperText,\n  Button,\n  Center,\n  FormControl,\n  FormErrorMessage,\n  Heading,\n  FormLabel,\n  Input,\n  Stack,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport PasswordInput from '../../Componets/form/PasswordInput';\nimport axios from 'axios';\nimport Loading from '../../Componets/Loading';\nimport { API_HOST_URL } from '../../constants';\nconst NewPassword = () => {\n  const {\n    register,\n    setError,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccessful, setIsSuccessful] = useState(false);\n  const { uid, token } = useParams();\n  const history = useHistory();\n  const onSubmit = data => {\n    setIsLoading(true);\n    axios\n      .post(`${API_HOST_URL}dj-rest-auth/password/reset/confirm/`, {\n        ...data,\n        uid,\n        token,\n      })\n      .then(res => {\n        setIsLoading(false);\n        const { status } = res;\n\n        if (status === 200) {\n          setIsSuccessful(true);\n          setTimeout(() => {\n            history.push('/login');\n          }, 3000);\n        }\n      })\n      .catch(error => {\n        const { data, status } = error.response;\n        setIsLoading(false);\n        if (status === 400) {\n          for (const key in data) {\n            setError(key, {\n              type: 'focus',\n              message: data[key][0],\n            });\n          }\n        }\n      });\n  };\n  return (\n    <Center>\n      {isSuccessful ? (\n        <Loading message=\"Your password have been successfully changed you will be redirect to login page after sec ...  \" />\n      ) : (\n        <>\n          <Stack>\n            <Center height=\"full\" w=\"full\">\n              <Heading p=\"2\" my=\"10\" as=\"h1\" size=\"4xl\">\n                Restore Account\n              </Heading>\n            </Center>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Stack>\n                {/* Password Filed */}\n                <FormControl id=\"password\" isInvalid={errors.new_password1}>\n                  <FormLabel>Password</FormLabel>\n                  <PasswordInput\n                    placeholder=\"Password\"\n                    my=\"2\"\n                    {...register('new_password1', {\n                      required: {\n                        value: true,\n                        message: 'Password is Required',\n                      },\n                    })}\n                    isInvalid={errors.password}\n                  />\n                  <FormHelperText>\n                    Use alphabets to make your password stronger .\n                  </FormHelperText>\n                  <FormErrorMessage>\n                    {errors.new_password1 && errors.new_password1.message}\n                  </FormErrorMessage>\n                </FormControl>\n                {/* Re-Password Filed */}\n                <FormControl id=\"repassword\" isInvalid={errors.new_password2}>\n                  <FormLabel>Re-Password</FormLabel>\n                  <Input\n                    type=\"password\"\n                    placeholder=\"Re-type password\"\n                    my=\"2\"\n                    {...register('new_password2', {\n                      required: {\n                        value: true,\n                        message: 'Please Retype your password',\n                      },\n                    })}\n                  />\n                  <FormHelperText>Retype your password .</FormHelperText>\n                  <FormErrorMessage>\n                    {errors.new_password2 && errors.new_password2.message}\n                  </FormErrorMessage>\n                </FormControl>\n                <Button\n                  variant=\"solid\"\n                  my=\"2\"\n                  type=\"submit\"\n                  isLoading={isLoading}\n                >\n                  Restore\n                </Button>\n              </Stack>\n            </form>\n          </Stack>\n        </>\n      )}\n    </Center>\n  );\n};\n\nexport default NewPassword;\n","import {\n  Button,\n  Center,\n  FormControl,\n  FormErrorMessage,\n  Heading,\n  FormLabel,\n  Input,\n  Stack,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { API_HOST_URL } from '../../constants';\nconst Email = () => {\n  const {\n    register,\n    setError,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n  const onSubmit = data => {\n\n    axios\n      .post(`${API_HOST_URL}dj-rest-auth/password/reset/`, data)\n      .then(({ status, data }) => {\n        setShowSuccessMsg(true);\n      })\n      .catch(error => {\n        setShowSuccessMsg(false);\n        if (error.response) {\n          const { data, status } = error.response;\n          if (status === 400) {\n            for (const key in data) {\n              setError(key, {\n                type: 'focus',\n                message: data[key][0],\n              });\n            }\n          }\n        }\n      });\n  };\n  return (\n    <Center>\n      <Stack>\n        <Center height=\"full\" w=\"full\">\n          <Heading p=\"2\" my=\"10\" as=\"h1\" size=\"4xl\">\n            Restore Account\n          </Heading>\n        </Center>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Stack>\n            {showSuccessMsg && (\n              <Alert status=\"success\" p=\"2\" my=\"2\">\n                <AlertIcon />\n                <AlertDescription p=\"2\" mr=\"2\">\n                  Password reset e-mail has been sent\n                </AlertDescription>\n              </Alert>\n            )}\n            {errors.non_field_errors && (\n              <Alert status=\"error\" p=\"2\" my=\"2\">\n                <AlertIcon />\n                <AlertDescription p=\"2\" mr=\"2\">\n                  {errors.non_field_errors.message}\n                </AlertDescription>\n              </Alert>\n            )}\n            <FormControl id=\"email\" isInvalid={errors.email} my=\"2\">\n              <FormLabel>Email</FormLabel>\n              <Input\n                type=\"email\"\n                {...register('email', {\n                  required: {\n                    value: true,\n                    message: 'Please enter your email address',\n                  },\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                    message: 'Enter a valid email address',\n                  },\n                })}\n              ></Input>\n              <FormErrorMessage>\n                {errors.email && errors.email.message}\n              </FormErrorMessage>\n            </FormControl>\n            <Button type=\"submit\" my=\"2\">\n              Restore\n            </Button>\n          </Stack>\n        </form>\n      </Stack>\n    </Center>\n  );\n};\n\nexport default Email;\n","import React from 'react';\nimport {\n    Route,\n    Switch,\n    useRouteMatch\n  } from \"react-router-dom\";\nimport NewPassword from './NewPassword';\nimport Email from './Email';\nconst RestoreAccount = () => {\n    let { path } = useRouteMatch();\n    return (\n\n            <Switch>\n                <Route path={`${path}/email`}  component={Email} />\n                <Route path={`${path}/newpassword`}  component={NewPassword} />\n             \n            </Switch>\n    )\n};\n\nexport default RestoreAccount;","import { Box, Center, Heading, Spinner } from '@chakra-ui/react';\nimport React from 'react';\n\nconst LoadingInfo = () => {\n    return (\n            <Center h='full'>\n            <Box w='50%'>\n            <Center h='full'> \n            <Heading m='2' p='2' as='h2'>You will be redirected after sec... </Heading> \n             <Spinner thickness=\"4px\" size='xl'> </Spinner>\n              </Center>\n            </Box>\n        </Center>\n    );\n};\n\nexport default LoadingInfo;","import {\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Heading,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nconst SimplifyAccordionItem = React.forwardRef(\n  ({ title, children, ...props }, ref) => {\n    return (\n      <AccordionItem {...props} shadow=\"lg\" my=\"5\" border=\"4px\" h=\"full\">\n        <AccordionButton\n          bg=\"gray.800\"\n          color=\"white\"\n          _hover={{ bg: 'gray.600' }}\n        >\n          <Box flex=\"1\" textAlign=\"left\">\n            <Heading as=\"h3\" size=\"lg\">\n              {title}\n            </Heading>\n          </Box>\n          <AccordionIcon />\n        </AccordionButton>\n        <AccordionPanel>\n          <AccordionPanel pb={4}>{children}</AccordionPanel>\n        </AccordionPanel>\n      </AccordionItem>\n    );\n  }\n);\nexport default SimplifyAccordionItem;\n","import React, { useState, useRef } from 'react';\nimport SimplifyAccordionItem from './SimplifyAccordionItem';\nimport { useForm } from 'react-hook-form';\nimport {\n  Box,\n  Button,\n  Center,\n  FormControl,\n  FormErrorMessage,\n  FormHelperText,\n  FormLabel,\n  HStack,\n  Input,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  useToast,\n} from '@chakra-ui/react';\nimport { userService } from '../../services';\nimport PasswordInput from '../../Componets/form/PasswordInput';\nconst passwordMatch = 'The password confirmation does not match';\nconst Password = ({ title, ...rest }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [nonFieldErrors, setNonFieldErrors] = useState([]);\n  const accitem = useRef();\n  const service = userService();\n  const [isEnabled, setIsEnabled] = useState(false);\n  const toast = useToast();\n\n  const {\n    setError,\n    register,\n    handleSubmit,\n    getValues,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const cancel = () => {\n    reset({});\n    setIsEnabled(false);\n  };\n  const handelErrors = errors => {\n    for (const key in errors) {\n      if (key !== 'non_field_errors') {\n        setError(key, {\n          type: 'focus',\n          message: errors[key][0],\n        });\n      } else {\n        setNonFieldErrors(prev => prev.concat(errors[key]));\n      }\n    }\n  };\n\n  const handleChangePassword = data => {\n    service\n      .changePassword(data)\n      .then(res => {\n        toast({\n          title: ' Password updated',\n          description: 'Your password have been successfully updated ',\n          status: 'success',\n          duration: 8000,\n          isClosable: true,\n        });\n        setIsLoading(false);\n        reset({});\n        setIsEnabled(false);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        const { data, status } = error.response;\n        if (status === 400) {\n          setNonFieldErrors([]);\n          handelErrors(data);\n        }\n      });\n  };\n  return (\n    <SimplifyAccordionItem title={title} {...rest} ref={accitem} id=\"accitem\">\n      <Box w=\"full\" h=\"full\" position=\"relative\">\n        <Box\n          w=\"full\"\n          h=\"full\"\n          bg=\"white\"\n          opacity=\"0.7\"\n          position=\"absolute\"\n          p=\"10\"\n          backgroundColor=\"#F7F7F7\"\n          zIndex=\"5\"\n          display={isEnabled ? 'none' : 'block'}\n        >\n          <Center w=\"full\" h=\"full\">\n            <Button onClick={() => setIsEnabled(true)} zIndex=\"6\">\n              Change your password\n            </Button>\n          </Center>\n        </Box>\n        <form>\n          {nonFieldErrors.length > 0 && (\n            <Alert status=\"error\" p=\"2\" my=\"2\">\n              <AlertIcon />\n              <AlertDescription p=\"2\" mr=\"2\">\n                {nonFieldErrors}\n              </AlertDescription>\n            </Alert>\n          )}\n          <FormControl py=\"2\" isInvalid={errors.old_password}>\n            <FormLabel>Old password </FormLabel>\n            <PasswordInput\n              placeholder=\"Old password\"\n              my=\"2\"\n              {...register('old_password', {\n                pattern: {\n                  value: /^[A-Z0-9._%+-]{8,50}$/i,\n                  message: 'Enter a valid password. at least 8 charchtrs',\n                },\n                required: { value: true, message: 'Old password is required' },\n              })}\n            />\n            <FormErrorMessage>\n              {errors.old_password && errors.old_password.message}\n            </FormErrorMessage>\n            <FormHelperText>Type your new password</FormHelperText>\n          </FormControl>\n          <FormControl py=\"2\" isInvalid={errors.new_password1}>\n            <FormLabel>New password</FormLabel>\n            <PasswordInput\n              placeholder=\"New password\"\n              my=\"2\"\n              {...register('new_password1', {\n                required: {\n                  value: true,\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]{8,50}$/i,\n                    message: 'Enter a valid password. at least 8 charchtrs',\n                  },\n                  message: 'New password is required',\n                },\n              })}\n            />\n            <FormErrorMessage>\n              {errors.new_password1 && errors.new_password1.message}\n            </FormErrorMessage>\n            <FormHelperText>Type your new password</FormHelperText>\n          </FormControl>\n          <FormControl py=\"2\" isInvalid={errors.new_password2}>\n            <FormLabel>Password confirmation</FormLabel>\n            <Input\n              type=\"password\"\n              placeholder=\"Re-type password\"\n              my=\"2\"\n              {...register('new_password2', {\n                pattern: {\n                  value: /^[A-Z0-9._%+-]{8,50}$/i,\n                  message: 'Enter a valid password. at least 8 charchtrs',\n                },\n                required: {\n                  value: true,\n                  message: 'Please Retype your password',\n                },\n                validate: value =>\n                  value === getValues().new_password1 || passwordMatch,\n              })}\n            />\n            <FormHelperText>Retype your new password</FormHelperText>\n            <FormErrorMessage>\n              {errors.new_password2 && errors.new_password2.message}\n            </FormErrorMessage>\n          </FormControl>\n          <Box>\n            <HStack justifyContent=\"right\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={handleSubmit(handleChangePassword)}\n                isLoading={isLoading}\n              >\n                Change password\n              </Button>\n              <Button variant=\"solid\" size=\"sm\" type=\"reset\" onClick={cancel}>\n                Cancel\n              </Button>\n            </HStack>\n          </Box>\n        </form>\n      </Box>\n    </SimplifyAccordionItem>\n  );\n};\n\nexport default Password;\n","import {\n  Button,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  useToast,\n} from '@chakra-ui/react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { userService } from '../../services';\nimport SimplifyAccordionItem from './SimplifyAccordionItem';\n\nconst PersonalInfo = ({ title, ...rest }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [defualtValues, setDefualtValues] = useState({});\n  const [isReadingMode, setIsReadingMode] = useState(true);\n  const [nonFieldErrors, setNonFieldErrors] = useState([]);\n  const staleData = useRef();\n  const service = userService();\n  const toast = useToast();\n  const {\n    setError,\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const handleSave = data => {\n    const chengeData = {};\n    for (const key in data) {\n      if (staleData.current[key] && staleData.current[key] !== data[key])\n        chengeData[key] = data[key];\n    }\n    if (Object.entries(chengeData).length < 1) {\n      setIsReadingMode(true);\n      return;\n    }\n    service\n      .update(chengeData)\n      .then(res => {\n        setIsLoading(false);\n\n        setDefualtValues(res.data);\n        toast({\n          title: 'Profile informations',\n          description: 'Profile informations have been successfully updated ',\n          status: 'success',\n          duration: 5000,\n          isClosable: true,\n        });\n        if (chengeData.email) {\n          toast({\n            title: 'Email activation',\n            description:\n              'An activation link has been sent to your new e-mail. Active it to be able to continue  ',\n            status: 'info',\n            duration: 9000,\n            isClosable: true,\n          });\n        }\n        staleData.current = { ...staleData.current, ...res.data };\n        setIsReadingMode(true);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        const { data, status } = error;\n        setNonFieldErrors([]);\n        if (status === 400) {\n          handelErrors(data);\n        }\n      });\n  };\n  const handelCancel = () => {\n    setIsReadingMode(true);\n    reset(defualtValues);\n  };\n  const handelErrors = errors => {\n    for (const key in errors) {\n      if (key !== 'non_field_errors') {\n        setError(key, {\n          type: 'focus',\n          message: errors[key][0],\n        });\n      } else {\n        setNonFieldErrors(prev => prev.concat(errors[key]));\n      }\n    }\n  };\n  useEffect(() => {\n    service\n      .get()\n      .then(res => {\n        setValue('username', res.data.username);\n        setValue('email', res.data.email);\n        setValue('last_name', res.data.last_name);\n        setValue('first_name', res.data.first_name);\n        setDefualtValues(res.data);\n        staleData.current = res.data;\n      })\n      .catch(error => {});\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <SimplifyAccordionItem title={title} {...rest}>\n      <form onSubmit={e => e.preventDefault()}>\n        {nonFieldErrors.length > 0 && (\n          <Alert status=\"error\" p=\"2\" my=\"2\">\n            <AlertIcon />\n            <AlertDescription p=\"2\" mr=\"2\">\n              {nonFieldErrors}\n            </AlertDescription>\n          </Alert>\n        )}\n        {/* Email first name */}\n        <FormControl\n          id=\"first_name\"\n          isInvalid={errors.first_name}\n          isReadOnly={isReadingMode}\n        >\n          <FormLabel>First name</FormLabel>\n\n          <Input\n            placeholder=\"First Name\"\n            my=\"2\"\n            {...register('first_name', {\n              required: {\n                value: true,\n                message: 'Please enter your first name',\n              },\n              pattern: {\n                value: /^[A-Z]{4,20}$/i,\n                message: 'Enter a valid name',\n              },\n            })}\n            variant={isReadingMode ? 'filled' : 'outline'}\n            _focus={\n              isReadingMode\n                ? { backgroundColor: 'gray.100' }\n                : { borderColor: 'black' }\n            }\n          />\n\n          <FormErrorMessage>\n            {errors.first_name && <>{errors.first_name.message}</>}\n          </FormErrorMessage>\n        </FormControl>\n        {/* Email last name */}\n        <FormControl\n          id=\"last_name\"\n          isInvalid={errors.last_name}\n          isReadOnly={isReadingMode}\n        >\n          <FormLabel>Last name</FormLabel>\n\n          <Input\n            placeholder=\"Last Name\"\n            my=\"2\"\n            {...register('last_name', {\n              required: {\n                value: true,\n                message: 'Please enter your last name',\n              },\n              pattern: {\n                value: /^[A-Z]{4,20}$/i,\n                message: 'Enter a valid name',\n              },\n            })}\n            variant={isReadingMode ? 'filled' : 'outline'}\n            _focus={\n              isReadingMode\n                ? { backgroundColor: 'gray.100' }\n                : { borderColor: 'black' }\n            }\n          />\n\n          <FormErrorMessage>\n            {errors.last_name && <>{errors.last_name.message}</>}\n          </FormErrorMessage>\n        </FormControl>\n        <FormControl\n          isReadOnly={isReadingMode}\n          isInvalid={errors.username}\n          mt=\"2\"\n        >\n        </FormControl>\n        <FormControl isReadOnly={isReadingMode} isInvalid={errors.email} mt=\"2\">\n          <FormLabel>Email address</FormLabel>\n          <Input\n            {...register('email', {\n              required: { value: true, message: 'Name is requierd' },\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: 'Enter a valid email address',\n              },\n            })}\n            variant={isReadingMode ? 'filled' : 'outline'}\n            _focus={\n              isReadingMode\n                ? { backgroundColor: 'gray.100' }\n                : { borderColor: 'black' }\n            }\n          />\n          <FormErrorMessage>\n            {errors.email && errors.email.message}\n          </FormErrorMessage>\n        </FormControl>\n        <Box mt=\"4\" display=\"flex\" justifyContent=\"end\">\n          {isReadingMode ? (\n            <>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                mx=\"2\"\n                onClick={() => setIsReadingMode(false)}\n              >\n                Edit\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                variant=\"outline\"\n                mx=\"2\"\n                onClick={handleSubmit(handleSave)}\n                isLoading={isLoading}\n              >\n                Save\n              </Button>\n              <Button mx=\"2\" onClick={handelCancel}>\n                Cancel\n              </Button>\n            </>\n          )}\n        </Box>\n      </form>\n    </SimplifyAccordionItem>\n  );\n};\n\nexport default PersonalInfo;\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useRef, useEffect } from 'react';\nimport SimplifyAccordionItem from './SimplifyAccordionItem';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormHelperText,\n  FormLabel,\n\n  useToast,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  Text,\n} from '@chakra-ui/react';\nimport { userService } from '../../services';\nimport Select from 'react-select';\nconst HELPERTEXTS = {\n  '-1': 'No Safegrades is needed to confirm. ',\n  1: 'At least one Safegrade is needed to confirm.   ',\n  2: 'The majority of Safegrades is needed to confirm. ',\n  3: 'All the Safegrades is needed to confirm. ',\n};\n\nconst WillSettings = ({ title, ...rest }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [nonFieldErrors, setNonFieldErrors] = useState([]);\n  const staleData = useRef({ vote_type: '' });\n  const accitem = useRef();\n  const service = userService();\n  const [isEnabled, setIsEnabled] = useState(false);\n  const [defualtValues, setDefualtValues] = useState({});\n  const [isReadingMode, setIsReadingMode] = useState(true);\n  const toast = useToast();\n  const [options, setOptions] = useState([]);\n  const [daysCount, setDaysCount] = useState(0);\n  const [optHelperText, setOptHelperText] = useState('');\n  const userRef = useRef();\n  const {\n    setError,\n    register,\n    handleSubmit,\n    getValues,\n    reset,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm();\n  const cancel = () => {\n    reset({});\n    setIsEnabled(false);\n  };\n  const handleSave = data => {\n    const chengeData = {};\n\n    // for (const key in data) {\n    //   if (staleData.current[key] && staleData.current[key] !== data[key])\n    //     chengeData[key] = data[key];\n    // }\n    // if (Object.entries(chengeData).length < 1) {\n    // setIsReadingMode(true);\n    //   return;\n    // }\n    const {\n      number_of_dayes_before_notifying,\n      vote_type: { value },\n    } = data;\n    service\n      .update({ number_of_dayes_before_notifying, vote_type: value })\n      .then(res => {\n        setIsLoading(false);\n\n        setDefualtValues(res.data);\n        toast({\n          title: 'Profile informations',\n          description: 'Profile informations have been successfully updated ',\n          status: 'success',\n          duration: 5000,\n          isClosable: true,\n        });\n        // if (chengeData.email) {\n        //   toast({\n        //     title: 'Email activation',\n        //     description:\n        //       'An activation link has been sent to your new e-mail. Active it to be able to continue  ',\n        //     status: 'info',\n        //     duration: 9000,\n        //     isClosable: true,\n        //   });\n        // }\n        const { data } = res;\n        staleData.current = {\n          ...staleData.current,\n          number_of_dayes_before_notifying:\n            data.number_of_dayes_before_notifying,\n          vote_type: data.vote_type,\n        };\n        setIsReadingMode(true);\n\n        localStorage.setItem('user', JSON.stringify(res.data));\n        preOptions(res.data.vote_type);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        const { data, status } = error;\n        setNonFieldErrors([]);\n        if (status === 400) {\n          handelErrors(data);\n        }\n      });\n  };\n  const handelCancel = () => {\n    setIsReadingMode(true);\n    reset(staleData.current);\n  };\n  const preOptions = defualtVoteType => {\n    const { config } = JSON.parse(localStorage.getItem('user'));\n    const vote_type = config.vote_type;\n    const opts = [];\n    for (const [key, value] of Object.entries(vote_type)) {\n      const opt = { value: key, label: value.split('_').join(' ') };\n      if (defualtVoteType === parseInt(key)) {\n        setValue('vote_type', opt, { shouldValidate: true });\n        staleData.current['vote_type'] = opt;\n        setOptHelperText(HELPERTEXTS[key]);\n      }\n      opts.push(opt);\n    }\n    setOptions(opts);\n  };\n  const handelErrors = errors => {\n    for (const key in errors) {\n      if (key !== 'non_field_errors') {\n        setError(key, {\n          type: 'focus',\n          message: errors[key][0],\n        });\n      } else {\n        setNonFieldErrors(prev => prev.concat(errors[key]));\n      }\n    }\n  };\n\n  const handleChangePassword = data => {\n    service\n      .changePassword(data)\n      .then(res => {\n        toast({\n          title: ' Password updated',\n          description: 'Your password have been successfully updated ',\n          status: 'success',\n          duration: 8000,\n          isClosable: true,\n        });\n        setIsLoading(false);\n        reset({});\n        setIsEnabled(false);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        const { data, status } = error.response;\n        if (status === 400) {\n          setNonFieldErrors([]);\n          handelErrors(data);\n        }\n      });\n  };\n  const handleDaysCountChange = value => {};\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    userRef.current = user;\n    setValue(\n      'number_of_dayes_before_notifying',\n      user.number_of_dayes_before_notifying,\n      { shouldValidate: true }\n    );\n\n    preOptions(user.vote_type);\n    staleData.current['number_of_dayes_before_notifying'] =\n      user.number_of_dayes_before_notifying;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handelTypeChange = (newValue, filed) => {\n    filed.onChange(newValue);\n    setOptHelperText(HELPERTEXTS[newValue.value]);\n  };\n  return (\n    <SimplifyAccordionItem title={title} {...rest} ref={accitem} id=\"accitem\">\n      <Box w=\"100%\" h=\"100%\" position=\"relative\">\n        <form>\n          <FormControl mb=\"2\">\n            <FormLabel>\n              Number of dayes Before sending a confirmation\n            </FormLabel>\n            <Controller\n              name=\"number_of_dayes_before_notifying\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field }) => (\n                <Slider\n                  flex=\"1\"\n                  focusThumbOnChange={false}\n                  max={40}\n                  isReadOnly={isReadingMode}\n                  isDisabled={isReadingMode}\n                  {...field}\n                >\n                  <SliderTrack>\n                    <SliderFilledTrack />\n                  </SliderTrack>\n                  <SliderThumb\n                    fontSize=\"sm\"\n                    boxSize=\"32px\"\n                    children={getValues('number_of_dayes_before_notifying')}\n                  />\n                </Slider>\n              )}\n            />\n            <FormHelperText>\n              <Text fontSize=\"16px\" color=\"black\">\n              the Confirmation is an email that will be sent to check  your exists\n              </Text>\n            </FormHelperText>\n            <FormErrorMessage></FormErrorMessage>\n          </FormControl>\n          <FormControl mb=\"2\">\n            <FormLabel>Vote Type</FormLabel>\n            <Controller\n              name=\"vote_type\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={options[0]}\n                  options={options}\n                  isDisabled={isReadingMode}\n                  isReadOnly={isReadingMode}\n                  onChange={newValue => handelTypeChange(newValue, field)}\n                />\n              )}\n            />\n            <FormHelperText>\n              <Text fontSize=\"16px\" color=\"black\">\n                {optHelperText}\n             \n              </Text>\n            </FormHelperText>\n            <FormErrorMessage></FormErrorMessage>\n          </FormControl>\n          <Box mt=\"4\" display=\"flex\" justifyContent=\"end\">\n            {isReadingMode ? (\n              <>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  mx=\"2\"\n                  onClick={() => setIsReadingMode(false)}\n                >\n                  Edit\n                </Button>\n              </>\n            ) : (\n              <>\n                <Button\n                  variant=\"outline\"\n                  mx=\"2\"\n                  onClick={handleSubmit(handleSave)}\n                  isLoading={isLoading}\n                >\n                  Save\n                </Button>\n                <Button mx=\"2\" onClick={handelCancel}>\n                  Cancel\n                </Button>\n              </>\n            )}\n          </Box>\n        </form>\n      </Box>\n    </SimplifyAccordionItem>\n  );\n};\n\nexport default WillSettings;\n","import Profile  from \"./Profile\";\n\nexport default Profile;\n// export {default as Profile} from './Profile'","import { Accordion, Box, Button, Divider } from '@chakra-ui/react';\nimport React from 'react';\nimport Continer from '../../Componets/Layout/Continer';\nimport Nav from '../../Componets/Nav';\nimport { userService } from '../../services';\nimport Password from './Password';\nimport PerssonalInfo from './PersonalInfo';\nimport { useHistory } from 'react-router-dom';\nimport { RiLogoutCircleRLine } from 'react-icons/ri';\nimport WillSettings from './WillSettings';\nconst Profile = () => {\n  const history = useHistory();\n  const service = userService();\n  const logout = () => {\n    service\n      .logout()\n      .then(res => {\n        history.push('/');\n      })\n      .catch();\n  };\n\n  return (\n    <Box h=\"100%\">\n      <Nav />\n      <Continer>\n      <Box backgroundColor=\"#F7F7F7\" minH=\"91vh\" p='1'>\n        <Box display=\"flex\" justifyContent=\"flex-end\" >\n          <Button variant=\"outline\" onClick={logout} my='1' leftIcon={<RiLogoutCircleRLine/>} >\n            Logout\n          </Button>\n        </Box>\n        <Divider />\n        <Box >\n          <Accordion allowMultiple allowToggle>\n            <PerssonalInfo title=\"Personal Informations\" />\n            <Password title=\"Changing Password\" />\n            <WillSettings title='Will Settings'/>\n          </Accordion>\n        </Box>\n        </Box>\n      </Continer>\n    </Box>\n  );\n};\n\nexport default Profile;\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Box,\n} from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/button';\nimport { Center, Divider } from '@chakra-ui/layout';\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Loading from '../../Componets/Loading';\nimport { authManager } from '../../services';\n\nconst ReSandMessage = ({\n  onReSend,\n  isSendEmailVerification,\n  isReSendSuccessfuly,\n}) => {\n  return (\n    <>\n      {isReSendSuccessfuly ? (\n        <Alert\n          status=\"success\"\n          variant=\"subtle\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          textAlign=\"center\"\n          height=\"250px\"\n        >\n          <AlertIcon boxSize=\"40px\" mr={0} />\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n            Email verification\n          </AlertTitle>\n          <AlertDescription maxWidth=\"sm\">\n            Activation link had been sent to your email. Click on it to login\n          </AlertDescription>\n        </Alert>\n      ) : (\n        <Alert\n          status=\"error\"\n          variant=\"subtle\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          textAlign=\"center\"\n          height=\"250px\"\n        >\n          <AlertIcon boxSize=\"40px\" mr={0} />\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n            Verification failure\n          </AlertTitle>\n          <AlertDescription maxWidth=\"md\">\n            Sorry!. We are unable to verify you. try to re-send a new email\n            verification by clicking on the button below. and check your email\n          </AlertDescription>\n          <Divider />\n          <Button\n            variant=\"solid\"\n            size=\"lg\"\n            my=\"2\"\n            onClick={onReSend}\n            isLoading={isSendEmailVerification}\n          >\n            Re-send\n          </Button>\n        </Alert>\n      )}\n    </>\n  );\n};\nconst ConfirmAuth = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isReSendSuccessfuly, setReSendSuccessfuly] = useState(false);\n  const [isSuccessful, setIsSuccessful] = useState(null);\n  const [isSendEmailVerification, setisSendEmailVerification] = useState(false);\n  const { uid, token } = useParams();\n  const history = useHistory();\n  const service = authManager();\n  useEffect(() => {\n    setIsLoading(true);\n    service\n      .confirmLogin({ uid, token })\n      .then(res => {\n        setIsLoading(false);\n        setIsSuccessful(true);\n        setTimeout(() => history.push('/home'), 4000);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        setIsSuccessful(false);\n        // const { data, status } = error.response;\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const reSendHandler = () => {\n    setisSendEmailVerification(true);\n    service\n      .reSendVerification()\n      .then(res => {\n        setisSendEmailVerification(false);\n        setReSendSuccessfuly(true);\n      })\n      .catch(error => {\n        setisSendEmailVerification(false);\n      });\n  };\n  return (\n    <Center height=\"100%\">\n      <Box w=\"30%\" h=\"50%\">\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <>\n            {isSuccessful ? (\n              <Alert\n                status=\"success\"\n                variant=\"subtle\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                textAlign=\"center\"\n                height=\"250px\"\n              >\n                <AlertIcon boxSize=\"40px\" mr={0} />\n                <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                  Verification success\n                </AlertTitle>\n                <AlertDescription maxWidth=\"sm\">\n                  You will be redirected to the homepage after few seconds\n                </AlertDescription>\n              </Alert>\n            ) : (\n              <ReSandMessage\n                onReSend={reSendHandler}\n                isSendEmailVerification={isSendEmailVerification}\n                isReSendSuccessfuly={isReSendSuccessfuly}\n              />\n            )}\n          </>\n        )}\n      </Box>\n    </Center>\n  );\n};\n\nexport default ConfirmAuth;\n","import ConfirmAuth from './ConfirmAuth';\nexport default ConfirmAuth;\n","import {\n  Button,\n  IconButton,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Switch,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  useToast,\n  Tooltip,\n  Tr,\n  Td,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n  ButtonGroup,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ContactService } from '../../services';\nimport { BiEdit } from 'react-icons/bi';\nimport { AiFillDelete } from 'react-icons/ai';\nconst Contact = React.forwardRef(({\n  index,\n  email,\n  first_name,\n  last_name,\n  phone,\n  id,\n  is_safe_guard,\n  onUpdate,\n  onDelete,\n  ...rest\n},ref) => {\n  const [nonFieldErrors, setNonFieldErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDeleteLoading, setIsDeleteLoading] = useState(false);\n  const [isOpenPopover, setIsOpenPopover] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const service = ContactService();\n  const toast = useToast();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setError,\n    reset,\n    formState,\n    formState: { errors },\n  } = useForm();\n  const watchFistName = watch('first_name', first_name);\n  const watchLastName = watch('last_name', last_name);\n  const watchEmail = watch('email', email);\n  // const watchPhone = watch('phone', phone);\n  const watchIsSafeguard = watch('is_safe_guard', is_safe_guard);\n  const onCancel = () => {\n    reset({});\n    onClose();\n  };\n  const onOpenPopover = () => setIsOpenPopover(!isOpenPopover);\n  const closePopover = () => setIsOpenPopover(false);\n  const handelOnClose = () => {\n    if (formState.isValid) {\n      onClose();\n    }\n    reset({});\n  };\n  const deleteContact = () => {\n    setIsDeleteLoading(true);\n    service\n      .deleteContact(id)\n      .then(res => {\n        setIsDeleteLoading(false);\n        closePopover();\n        onDelete(index);\n        toast({\n          title: 'Deletion',\n          description: 'The contact have been deleted successfully ',\n          status: 'success',\n          duration: 5000,\n          isClosable: true,\n        });\n      })\n      .catch(error => {\n        try {\n          closePopover();\n          setIsDeleteLoading(false);\n\n        } catch (error) {\n          toast({\n            title: 'Delete ',\n            description:\n              \"we can't delete the contact right now. please try later\",\n            status: 'error',\n            duration: 5000,\n            isClosable: true,\n          });\n        }\n      });\n  };\n  const handelUpdate = data => {\n    setIsLoading(true);\n    service\n      .update({ ...data, id })\n      .then(res => {\n        setIsLoading(false);\n        onUpdate({ index, data: res.data });\n        onClose();\n        toast({\n          title: 'Update',\n          description: 'The contact have been  successfully updated ',\n          status: 'success',\n          duration: 5000,\n          isClosable: true,\n        });\n      })\n      .catch(error => {\n        setIsLoading(false);\n        const { data, status } = error.response;\n        setNonFieldErrors([]);\n        if (status === 400) {\n          handelErrors(data);\n        }\n      });\n  };\n  const handelErrors = errors => {\n    for (const key in errors) {\n      if (key !== 'non_field_errors') {\n        setError(key, {\n          type: 'focus',\n          message: errors[key][0],\n        });\n      } else {\n        setNonFieldErrors(prev => prev.concat(errors[key]));\n      }\n    }\n  };\n  return (\n    <>\n      <Tr>\n        <Td>{first_name}</Td>\n        <Td>{last_name}</Td>\n        <Td>{email}</Td>\n        <Td>{is_safe_guard ? 'Yes' : 'No'}</Td>\n        <Td>\n          <Tooltip label=\" Edite contact \" aria-label=\"edite contact\">\n            <IconButton size=\"sm\" icon={<BiEdit />} onClick={onOpen} m=\"1\" />\n          </Tooltip>\n          <Popover\n            returnFocusOnClose={false}\n            isOpen={isOpenPopover}\n            onClose={closePopover}\n            placement=\"right\"\n            closeOnBlur={false}\n          >\n            <Tooltip label=\" Edite contact \" aria-label=\"edite contact\">\n              <PopoverTrigger>\n                <Tooltip label=\" Delete contact \" aria-label=\"delete contact\">\n                  <IconButton\n                    size=\"sm\"\n                    icon={<AiFillDelete />}\n                    onClick={onOpenPopover}\n                    bgColor=\"red.600\"\n                    m=\"1\"\n                  />\n                </Tooltip>\n              </PopoverTrigger>\n            </Tooltip>\n            <PopoverContent>\n              <PopoverHeader fontWeight=\"semibold\">Confirmation</PopoverHeader>\n              <PopoverArrow />\n              <PopoverCloseButton />\n              <PopoverBody>\n                Are you sure you want to delete this contact?\n              </PopoverBody>\n              <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n                <ButtonGroup size=\"sm\">\n                  <Button variant=\"outline\" onClick={closePopover}>\n                    Cancel\n                  </Button>\n                  <Button\n                    colorScheme=\"red\"\n                    onClick={() => deleteContact()}\n                    isLoading={isDeleteLoading}\n                  >\n                    Delete\n                  </Button>\n                </ButtonGroup>\n              </PopoverFooter>\n            </PopoverContent>\n          </Popover>\n\n          <Modal\n            isOpen={isOpen}\n            onClose={handelOnClose}\n            // closeOnOverlayClick={false}\n            size=\"2xl\"\n          >\n            <ModalOverlay />\n            <form>\n              <ModalContent>\n                <ModalHeader>Contact</ModalHeader>\n                <ModalBody>\n                  {nonFieldErrors.length > 0 && (\n                    <Alert status=\"error\" p=\"2\" my=\"2\">\n                      <AlertIcon />\n                      <AlertDescription p=\"2\" mr=\"2\">\n                        {nonFieldErrors}\n                      </AlertDescription>\n                    </Alert>\n                  )}\n                  {/* Email first name */}\n                  <FormControl id=\"first_name\" isInvalid={errors.first_name}>\n                    <FormLabel>First name</FormLabel>\n\n                    <Input\n                      placeholder=\"First Name\"\n                      my=\"2\"\n                      {...register('first_name', {\n                        value: watchFistName,\n                        required: {\n                          value: true,\n                          message: 'Please enter your first name',\n                        },\n                        pattern: {\n                          value: /^[A-Z]{4,20}$/i,\n                          message: 'Enter a valid name',\n                        },\n                      })}\n                    />\n\n                    <FormErrorMessage>\n                      {errors.first_name && <>{errors.first_name.message}</>}\n                    </FormErrorMessage>\n                  </FormControl>\n                  {/* Email last name */}\n                  <FormControl id=\"last_name\" isInvalid={errors.last_name}>\n                    <FormLabel>Last name</FormLabel>\n\n                    <Input\n                      placeholder=\"Last Name\"\n                      my=\"2\"\n                      {...register('last_name', {\n                        value: watchLastName,\n                        required: {\n                          value: true,\n                          message: 'Please enter your last name',\n                        },\n                        pattern: {\n                          value: /^[A-Z]{4,20}$/i,\n                          message: 'Enter a valid name',\n                        },\n                      })}\n                    />\n\n                    <FormErrorMessage>\n                      {errors.last_name && <>{errors.last_name.message}</>}\n                    </FormErrorMessage>\n                  </FormControl>\n                  <FormControl py=\"2\" isInvalid={errors.email}>\n                    <FormLabel>Email</FormLabel>\n                    <Input\n                      placeholder=\"Email\"\n                      {...register('email', {\n                        value: watchEmail,\n                        required: { value: true, message: 'Enter your email' },\n                        pattern: {\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                          message: 'Enter a valid email address',\n                        },\n                      })}\n                      //   onChange={e => setEmail(e.target.value)}\n                    />\n                    <FormErrorMessage>\n                      {errors.email && errors.email.message}\n                    </FormErrorMessage>\n                  </FormControl>\n                  <FormControl py=\"2\" isInvalid={errors.phone}>\n                    <FormLabel>Phone Number</FormLabel>\n                    <Input\n                      placeholder=\"Phone\"\n                      {...register('phone', {\n                        pattern: {\n                          value: /^[0-9+]{10,13}$/i,\n                          message: 'Enter a valid phone number',\n                        },\n                      })}\n                    />\n                    <FormErrorMessage>\n                      {errors.phone && errors.phone.message}\n                    </FormErrorMessage>\n                  </FormControl>\n                  <FormControl display=\"flex\" alignItems=\"center\" py=\"2\">\n                    <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\n                      Is he/she safeguard?\n                    </FormLabel>\n                    <Switch\n                      id=\"email-alerts\"\n                      {...register('is_safe_guard', {\n                        value: watchIsSafeguard,\n                      })}\n                      colorScheme=\"blackAlpha\"\n                      checked={watchIsSafeguard}\n                    />\n                  </FormControl>\n                </ModalBody>\n\n                <ModalFooter>\n                  <Button colorScheme=\"blue\" mr={3} onClick={onCancel}>\n                    Close\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    onClick={handleSubmit(handelUpdate)}\n                    disabled={isLoading && formState.isValid}\n                    isLoading={isLoading}\n                  >\n                    Update\n                  </Button>\n                </ModalFooter>\n              </ModalContent>\n            </form>\n          </Modal>\n        </Td>\n      </Tr>\n    </>\n  );\n});\n\nexport default Contact;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Switch,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  useToast,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\n\nimport { useForm } from 'react-hook-form';\n\nimport { ContactService } from '../../services';\n\nconst NewContact = ({ onCreate, isOpen, onOpen, onClose }) => {\n  const toast = useToast();\n  const service = ContactService();\n  const [isLoading, setIsLoading] = useState(false);\n  const [nonFieldErrors, setNonFieldErrors] = useState([]);\n  const {\n    register,\n    setError,\n\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const handelErrors = errors => {\n    for (const key in errors) {\n      if (key !== 'non_field_errors') {\n        setError(key, {\n          type: 'focus',\n          message: errors[key][0],\n        });\n      } else {\n        setNonFieldErrors(prev => prev.concat(errors[key]));\n      }\n    }\n  };\n  const createNewContactHandler = data => {\n    setIsLoading(true);\n    service\n      .create(data)\n      .then(res => {\n        setIsLoading(false);\n        onCreate(res.data);\n        toast({\n          title: 'Creation',\n          description: 'The contact have been successfully created ',\n          status: 'success',\n          duration: 5000,\n          isClosable: true,\n        });\n        onClose();\n      })\n      .catch(error => {\n        setIsLoading(false);\n        const { data, status } = error.response;\n        setNonFieldErrors([]);\n        if (status === 400) {\n          handelErrors(data);\n        }\n      });\n  };\n  return (\n    <Modal onClose={onClose} isOpen={isOpen} size=\"2xl\">\n      <form>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Create new contact </ModalHeader>\n\n          <ModalBody h=\"full\">\n            {nonFieldErrors.length > 0 && (\n              <Alert status=\"error\" p=\"2\" my=\"2\">\n                <AlertIcon />\n                <AlertDescription p=\"2\" mr=\"2\">\n                  {nonFieldErrors}\n                </AlertDescription>\n              </Alert>\n            )}\n            {/* Email first name */}\n            <FormControl id=\"first_name\" isInvalid={errors.first_name}>\n              <FormLabel>First name</FormLabel>\n\n              <Input\n                placeholder=\"First Name\"\n                my=\"2\"\n                {...register('first_name', {\n                  required: {\n                    value: true,\n                    message: 'Please enter your first name',\n                  },\n                  pattern: {\n                    value: /^[A-Z]{4,20}$/i,\n                    message: 'Enter a valid name',\n                  },\n                })}\n              />\n\n              <FormErrorMessage>\n                {errors.first_name && <>{errors.first_name.message}</>}\n              </FormErrorMessage>\n            </FormControl>\n            {/* Email last name */}\n            <FormControl id=\"last_name\" isInvalid={errors.last_name}>\n              <FormLabel>Last name</FormLabel>\n\n              <Input\n                placeholder=\"Last Name\"\n                my=\"2\"\n                {...register('last_name', {\n                  required: {\n                    value: true,\n                    message: 'Please enter your last name',\n                  },\n                  pattern: {\n                    value: /^[A-Z]{4,20}$/i,\n                    message: 'Enter a valid name',\n                  },\n                })}\n              />\n\n              <FormErrorMessage>\n                {errors.last_name && <>{errors.last_name.message}</>}\n              </FormErrorMessage>\n            </FormControl>\n            <FormControl py=\"2\" isInvalid={errors.email}>\n              <FormLabel>Email</FormLabel>\n              <Input\n                placeholder=\"Email\"\n                {...register('email', {\n                  required: { value: true, message: 'Enter your email' },\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                    message: 'Enter a valid email address',\n                  },\n                })}\n              />\n              <FormErrorMessage>\n                {errors.email && errors.email.message}\n              </FormErrorMessage>\n            </FormControl>\n            <FormControl py=\"2\" isInvalid={errors.phone}>\n              <FormLabel>Phone Number</FormLabel>\n              <Input\n                placeholder=\"Phone\"\n                {...register('phone', {\n                  required: false,\n                  pattern: {\n                    value: /^[0-9+]{10,13}$/i,\n                    message: 'Enter a valid phone number',\n                  },\n                })}\n              />\n              <FormErrorMessage>\n                {errors.phone && errors.phone.message}\n              </FormErrorMessage>\n            </FormControl>\n            <FormControl display=\"flex\" alignItems=\"center\" py=\"2\">\n              <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\n                Is he safeguard?\n              </FormLabel>\n              <Switch\n                id=\"email-alerts\"\n                colorScheme=\"blackAlpha\"\n                {...register('is_safe_guard')}\n              />\n            </FormControl>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose} mx=\"2\" variant=\"outline\">\n              Close\n            </Button>\n            <Button\n              onClick={handleSubmit(createNewContactHandler)}\n              mx=\"2\"\n              isLoading={isLoading}\n            >\n              Save\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n        *\n      </form>\n    </Modal>\n  );\n};\n\nexport default NewContact;\n","import Contacts from \"./Contacts\";\nexport default Contacts;","import {\n  Box,\n  Circle,\n  Icon,\n  useDisclosure,\n  Button,\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  AlertTitle,\n  Divider,\n} from '@chakra-ui/react';\nimport React, { useState, useEffect } from 'react';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport Continer from '../../Componets/Layout/Continer';\nimport Nav from '../../Componets/Nav';\nimport Loading from '../../Componets/Loading';\nimport Contact from './Contact';\nimport { ContactService } from '../../services';\nimport NewContact from './NewContact';\n\nconst Contacts = () => {\n  const [contactList, setContactList] = useState([]);\n  const [isDataLoading, setIsDataLoading] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const service = ContactService();\n\n  const updateContactHandler = ({ index, data }) => {\n    const contactListCopy = [...contactList];\n    contactListCopy[index] = data;\n    setContactList(contactListCopy);\n  };\n  const deleteContactHandler = index => {\n    const contactListCopy = [...contactList];\n    contactListCopy.splice(index, 1);\n    setContactList(contactListCopy);\n  };\n  const onCreateHandler = data => {\n    const newContactList = [...contactList, data];\n    setContactList(newContactList.reverse());\n  };\n\n  useEffect(() => {\n    setIsDataLoading(true);\n    service\n      .getList()\n      .then(res => {\n        setIsDataLoading(false);\n        setContactList(res.data);\n      })\n      .catch(error => {\n        setIsDataLoading(false);\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (isDataLoading) {\n    return (\n      <Box h=\"100%\">\n        <Nav />\n        <Continer h='100%'>\n          <Loading mt=\"9\"  message='Loading' />\n        </Continer>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box h=\"full\">\n        <Nav />\n        <Continer >\n          {contactList.length === 0 ? (\n            <Alert\n              status=\"info\"\n              variant=\"subtle\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              textAlign=\"center\"\n              height=\"250px\"\n            >\n              <AlertIcon boxSize=\"40px\" mr={0} />\n              <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                Contacts list\n              </AlertTitle>\n              <AlertDescription maxWidth=\"md\">\n                There is no contact at this moment. create new one\n              </AlertDescription>\n              <Divider />\n              <Button variant=\"solid\" size=\"lg\" my=\"2\" onClick={onOpen}>\n                Create new contact\n              </Button>\n            </Alert>\n          ) : (\n            <>\n              <Table variant=\"striped\" colorScheme=\"gray\" my='5'>\n                <Thead>\n                  <Tr>\n                    <Th>First name</Th>\n                    <Th>last name</Th>\n                    <Th>Email</Th>\n                    <Th>Is safeguard</Th>\n                    <Th></Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {contactList.map((data, index) => (\n                    <Contact\n                      key={index}\n                      name={data.username}\n                      index={index}\n                      {...data}\n                      onUpdate={updateContactHandler}\n                      onDelete={deleteContactHandler}\n                    />\n                  ))}\n                </Tbody>\n              </Table>\n\n              <Circle\n                size=\"60px\"\n                bg=\"black\"\n                color=\"white\"\n                position=\"fixed\"\n                bottom=\"5\"\n                right=\"5\"\n                cursor=\"pointer\"\n                onClick={onOpen}\n              >\n                <Icon as={BsFillPersonPlusFill} boxSize=\"8\" />\n              </Circle>\n            </>\n          )}\n        </Continer>\n        <NewContact\n          onClose={onClose}\n          onOpen={onOpen}\n          isOpen={isOpen}\n          onCreate={onCreateHandler}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default Contacts;\n","import {\n  Box,\n  Center,\n  Heading,\n  Spinner,\n  Alert,\n  AlertIcon,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useParams,useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_HOST_URL } from '../constants';\nconst Verifyemail = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isVerified, setIsVerified] = useState(false);\n  const { key } = useParams();\n  const history = useHistory();\n  \n  useEffect(() => {\n    setIsLoading(true);\n    axios\n      .post(`${API_HOST_URL}dj-rest-auth/registration/verify-email/`, { key: key })\n      .then(res => {\n        setIsLoading(false);\n        setIsVerified(true);\n        setTimeout(() => {\n          history.push('/login');\n        }, 3000);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        const { status } = error.response;\n\n        if (status === 400) {\n        }\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n  return (\n    <Center h=\"full\">\n      <Box w=\"50%\">\n        {isVerified ? (\n          <Alert status=\"success\">\n            <AlertIcon />\n            Your email have been verified\n          </Alert>\n        ) : (\n          <Center h=\"full\">\n            <Heading m=\"2\" p=\"2\" as=\"h2\">\n              Verifying ...\n            </Heading>\n            <Spinner thickness=\"4px\" size=\"xl\"></Spinner>\n          </Center>\n        )}\n      </Box>\n    </Center>\n  );\n};\n\nexport default Verifyemail;\n","import {\n    Button,\n    Center,\n    FormControl,\n    FormErrorMessage,\n    Heading,\n    FormLabel,\n    Input,\n    Stack,\n    Alert,\n    AlertIcon,\n    AlertDescription,\n  } from '@chakra-ui/react';\n  import React, { useState } from 'react';\n  import { useForm } from 'react-hook-form';\n  import axios from 'axios';\nimport { API_HOST_URL } from '../constants';\n\nconst ResendEmail = () => {\n    const {\n        register,\n        setError,\n        handleSubmit,\n        formState: { errors },\n      } = useForm();\n\n      const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n      const onSubmit = data => {\n\n        axios\n          .post(`${API_HOST_URL}/dj-rest-auth/registration/resend-email/`, data)\n          .then(({ status, data }) => {\n            setShowSuccessMsg(true);\n          })\n          .catch(error => {\n            setShowSuccessMsg(false);\n            if (error.response) {\n              const { data, status } = error.response;\n    \n              if (status === 400) {\n                for (const key in data) {\n                  setError(key, {\n                    type: 'focus',\n                    message: data[key][0],\n                  });\n                }\n              }\n            }\n          });\n      };\n      return (\n        <Center>\n          <Stack>\n            <Center height=\"full\" w=\"full\">\n              <Heading p=\"2\" my=\"10\" as=\"h1\" size=\"4xl\">\n               Send Email verification\n              </Heading>\n            </Center>\n           \n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Stack>\n                {showSuccessMsg && (\n                  <Alert status=\"success\" p=\"2\" my=\"2\">\n                    <AlertIcon />\n                    <AlertDescription p=\"2\" mr=\"2\">\n                    Activation link had been sent to your email\n                    </AlertDescription>\n                  </Alert>\n                )}\n                {errors.non_field_errors && (\n                  <Alert status=\"error\" p=\"2\" my=\"2\">\n                    <AlertIcon />\n                    <AlertDescription p=\"2\" mr=\"2\">\n                      {errors.non_field_errors.message}\n                    </AlertDescription>\n                  </Alert>\n                )}\n                <FormControl id=\"email\" isInvalid={errors.email} my=\"2\">\n                  <FormLabel>Email</FormLabel>\n                  <Input\n                    type=\"email\"\n                    {...register('email', {\n                      required: {\n                        value: true,\n                        message: 'Please enter your email address',\n                      },\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                        message: 'Enter a valid email address',\n                      },\n                    })}\n                  ></Input>\n                  <FormErrorMessage>\n                    {errors.email && errors.email.message}\n                  </FormErrorMessage>\n                </FormControl>\n                <Button type=\"submit\" my=\"2\">\n                  Restore\n                </Button>\n              </Stack>\n            </form>\n          </Stack>\n        </Center>\n      );\n    };\n\n\nexport default ResendEmail;","import {\n  Flex,\n  Spacer,\n  Heading,\n  Box,\n  Button,\n  useBreakpointValue,\n} from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { SITE_NAME } from '../constants';\nconst Header = () => {\n  const size = useBreakpointValue({\n    base: 'sm',\n    md: 'md',\n    lg: 'lg',\n    sm: 'sm',\n    xs: 'xs',\n  });\n  const history = useHistory();\n  const handelLogin = () => history.push('/login');\n  const handelSignup = () => history.push('/register');\n\n  return (\n    <Box py=\"2\">\n      <Flex>\n        <Box>\n          <Heading size=\"lg\" as=\"h1\">\n            {SITE_NAME  }\n          </Heading>\n        </Box>\n        <Spacer />\n        <Box>\n          <Button mr=\"4\" size={size} onClick={handelSignup}>\n            Sign Up\n          </Button>\n          <Button variant=\"outline\" size={size} onClick={handelLogin}>\n            Log in\n          </Button>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\nexport default Header;\n","import { Button, Box, Flex, Heading, Spacer } from '@chakra-ui/react';\nimport Header from './Header';\n\nimport { useHistory } from 'react-router-dom';\nexport default function Main() {\n  const history = useHistory();\n  const handelSignup = () => history.push('/register');\n  return (\n    <Box\n      h=\"100vh\"\n      px={['5', '10', '28']}\n      bgImage=\"url('/images/background.png')\"\n      backgroundSize=\"cover\"\n      bgPosition=\"bottom left\"\n      bgRepeat=\"no-repeat\"\n      bgAttachment=\"scroll\"\n    >\n      <Header />\n      <Flex h=\"90%\" flexDirection={['column', 'row']}>\n        <Box w={['100%', '50%']} py={['10', '2']}>\n          <Flex h=\"100%\" justifyContent=\"space-around\">\n            <Box>\n              <Heading\n                py={['2', '4']}\n                as=\"h1\"\n                fontSize={['1.3rem', '2.6rem', '2.8rem', '4rem']}\n              >\n                Say what matter <br /> to who matters\n              </Heading>\n              <Heading\n                fontSize={['1rem', '1.5rem']}\n                my={['2', '4']}\n                color=\"gray.600\"\n              >\n                Reprehenderit esse labore id veniam ut veniam non ex adipisicing\n                amet ullamco dolor proident.\n              </Heading>\n              <Spacer />\n              <Button variant=\"solid\" m=\"1\" size=\"lg\" onClick={handelSignup}>\n                Sign up\n              </Button>\n            </Box>\n          </Flex>\n        </Box>\n        <Box\n          h=\"100%\"\n          bgImage=\"url('/images/backimage.svg')\"\n          backgroundSize=\"contain\"\n          bgPosition=\"bottom\"\n          bgRepeat=\"no-repeat\"\n          w={['100%', '50%']}\n        ></Box>\n      </Flex>\n    </Box>\n  );\n}\n","import {\n  Box,\n  Center,\n  Flex,\n  Heading,\n  Image,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nconst titledParagraphlist = [\n  {\n    title: \"Secure way\",\n    paragraph:\n      \"Reprehenderit esse labore id veniam ut veniam non ex adipisicing amet ullamco dolor proident. Exercitation velit ea\",\n  },\n  {\n    title: \"Sample way\",\n    paragraph:\n      \"Reprehenderit esse labore id veniam ut veniam non ex adipisicing amet ullamco dolor proident. Exercitation velit ea\",\n  },\n\n  {\n    title: \"Video and audio \",\n    paragraph:\n      \"Reprehenderit esse labore id veniam ut veniam non ex adipisicing amet ullamco dolor proident. Exercitation velit ea\",\n  },\n];\nconst TitledParagraph = function (title, paragraph) {\n  return (\n    <Box py='5' key={title} boxShadow={'2xl'} p=\"6\" my='6' rounded=\"md\" mt='2' > \n      <Heading as=\"h1\" my=\"5\" fontSize={[\"2rem\", \"2rem\"]}>\n        {title}\n      </Heading>\n      <Text w={[\"100%\", \"100%\", \"50%\"]} fontWeight=\"bold\" fontSize={[\"0.9rem\"]} color='gray.600'>\n        {paragraph}\n      </Text>\n    </Box>\n  );\n};\nexport default function Features() {\n  return (\n    <Box px={[\"3\", \"5\", \"10\", \"28\"]}  mb='24' >\n      <Box my={[\"20\", \"28\"]}>\n        {/* <Center> */}\n          <VStack>\n            <Heading\n              as=\"h1\"\n              my=\"6\"\n              fontSize={[\"2.4rem\", \"4.5rem\"] }\n              size='4xl'\n            >\n              It is Never too late\n            </Heading>\n            <Text w={[\"100%\", \"100%\", \"50%\"]} fontWeight=\"bold\" color='gray.600' size='2xl'>\n              Reprehenderit esse labore id veniam ut veniam non ex adipisicing\n              amet ullamco dolor proident. Exercitation velit ea incididunt sit\n              qui do ipsum fugiat laboris minim nostrud dolor\n            </Text>\n          </VStack>\n        {/* </Center> */}\n      </Box>\n      <Box>\n        <Flex flexDirection={[\"column-reverse\", \"column-reverse\", \"row\"]}>\n          <Box w={[\"100%\", \"100%\", \"50%\"]} px={[\"2\", \"3\", \"10\"]}>\n            \n              {titledParagraphlist.map((elem) =>\n                TitledParagraph(elem.title, elem.paragraph)\n              )}\n              \n            \n          </Box>\n          <Box\n            w={[\"100%\", \"100%\", \"50%\"]}\n            h=\"full\"\n            py=\"10\"\n            backgroundSize=\"contain\"\n            bgPosition=\"bottom\"\n            bgRepeat=\"no-repeat\"\n          >\n            <Image src=\"/images/featuresBg.png\" alt=\"Segun Adebayo\" />\n          </Box>\n        </Flex>\n      </Box>\n    </Box>\n  );\n}\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\n\nconst Container = ({children}) => {\n    return (\n       <Box px={['5','10','28']}> \n           {children}\n       </Box>\n    );\n};\n\nexport default Container;","import { Box, Circle, Flex, Heading, Center, Text } from '@chakra-ui/react';\nimport Container from './Container';\n\nconst HowCardList = [\n  {\n    number: 1,\n    paragraph: 'Create a  new massage',\n  },\n  {\n    number: 2,\n    paragraph:\n      'The willposter it will keep sending  you an email every 30 days ( by default but you can change it)  In oreder to chack still alive',\n  },\n  {\n    number: 3,\n    paragraph:\n      'In case we didn’t  get recipone from you after 30 days we iwill notify your sefe gared ( if you select seafe gardes)',\n  },\n\n  {\n    number: 4,\n    paragraph:\n      'In case your safe gared confirem  that you are not  alive your will will be sent to your selected contact',\n  },\n];\nconst HowCard = ({ number, paragraph }) => {\n  return (\n    <Flex\n      boxShadow=\"xl\"\n      p=\"4\"\n      rounded=\"md\"\n      m=\"4\"\n      flex=\"1\"\n      flexBasis={['100%', '36%']}\n      border=\"1px\"\n      borderColor=\"gray.200\"\n    >\n      <Box>\n        <Circle border=\"8px\" borderColor=\"Black\" p=\"4\">\n          <Heading as=\"h1\">{number}</Heading>\n        </Circle>\n      </Box>\n      <Center p={[2, 4]}>\n        {' '}\n        <Text fontWeight=\"bold\"> {paragraph} </Text>\n      </Center>\n    </Flex>\n  );\n};\n\nexport default function How() {\n  return (\n    <Box h=\"100vh\">\n      <Container>\n        <Center>\n          <Heading\n            as=\"h1\"\n            my=\"16\"\n            fontSize={['2.3rem', '2.5rem', '2.5rem', '3rem']}\n          >\n            How It Works\n          </Heading>\n        </Center>\n        <Flex my=\"5\" flexWrap={['wrap', 'wrap', 'wrap']}>\n          {HowCardList.map((elem, index) => (\n            <HowCard\n              key={index}\n              number={elem.number}\n              paragraph={elem.paragraph}\n            />\n          ))}\n        </Flex>\n      </Container>\n    </Box>\n  );\n}\n","import {\n  Box,\n  useColorModeValue,\n  Container,\n  Stack,\n  Text,\n} from '@chakra-ui/react';\n\nimport Main from '../Componets/Main';\nimport Features from '../Componets/Features';\nimport HowItWork from '../Componets/HowItWork';\nimport { SITE_NAME } from '../constants';\n\nexport default function LandingPage() {\n  return (\n    <>\n    <Box>\n      <Main />\n      <Features />\n      <HowItWork />\n  \n    </Box>\n    <Box\n        mt='10'\n        bg={useColorModeValue('gray.50', 'gray.900')}\n        color={useColorModeValue('gray.700', 'gray.200')}\n      >\n        <Container\n          as={Stack}\n          maxW={'6xl'}\n          py={4}\n          direction={{ base: 'column', md: 'row' }}\n          spacing={4}\n          justify={{ base: 'center', md: 'space-between' }}\n          align={{ base: 'center', md: 'center' }}\n        >\n  \n          <Text>© 2021 {SITE_NAME} Templates. All rights reserved</Text>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import {\n  Box,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  Center,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport Loading from '../Componets/Loading';\nimport { useParams } from 'react-router-dom';\nimport { anonymousManager } from '../services';\nconst Feedback = ({ status = 'success', title, message }) => {\n  return (\n    <Alert\n      status={status}\n      variant=\"subtle\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      height=\"250px\"\n    >\n      <AlertIcon boxSize=\"40px\" mr={0} />\n      <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n        {title}\n      </AlertTitle>\n      <AlertDescription maxWidth=\"sm\">{message}</AlertDescription>\n    </Alert>\n  );\n};\nconst ConfirmExistence = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isConfirmed, setisConfirmed] = useState(false);\n  const { urlsignature } = useParams();\n  const service = anonymousManager();\n  useEffect(() => {\n    service\n      .confirmExistence({urlsignature})\n      .then(req => {\n        setIsLoading(false);\n        setisConfirmed(true);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        setisConfirmed(false);\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (isLoading) return <Loading message=\"Loading ...\" />;\n  else {\n    return (\n      <Box h=\"100%\">\n        <Center m=\"auto\" h=\"100%\" w=\"35%\">\n          {isConfirmed ? (\n            <Feedback title=\"Confirmed\" />\n          ) : (\n            <Feedback title=\"Failed\" status=\"error\" />\n          )}\n        </Center>\n      </Box>\n    );\n  }\n};\n\nexport default ConfirmExistence;\n","import {\n  Box,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  Center,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n  Button,\n  ButtonGroup,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport Loading from '../Componets/Loading';\nimport { useParams } from 'react-router-dom';\nimport { anonymousManager } from '../services';\nconst Feedback = ({ status = 'success', title, message }) => {\n  return (\n    <Alert\n      status={status}\n      variant=\"subtle\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      height=\"250px\"\n    >\n      <AlertIcon boxSize=\"40px\" mr={0} />\n      <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n        {title}\n      </AlertTitle>\n      <AlertDescription maxWidth=\"sm\">{message}</AlertDescription>\n    </Alert>\n  );\n};\nconst VoteHolder = ({ urlsignature }) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const open = () => setIsOpen(!isOpen);\n  const close = () => setIsOpen(false);\n  const service = anonymousManager();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConfirmed, setisConfirmed] = useState(false);\n  const [isVoteSent, setIsVoteSent] = useState(false);\n  const handelVote = value => {\n    setIsLoading(true);\n\n    service\n      .vote({ urlsignature, vote_value: value })\n      .then(req => {\n        setIsLoading(false);\n        setIsVoteSent(true);\n        setisConfirmed(true);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        setIsVoteSent(true);\n        setisConfirmed(false);\n      });\n  };\n  if (isLoading) return <Loading message=\"Loading ...\" />;\n  if (isVoteSent) {\n    return (\n      <Box\n        w=\"100%\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"space-around\"\n      >\n        {isConfirmed ? (\n          <Feedback\n            title=\"Vote Successed\"\n            message=\"Your Vote has been recorded successfully\"\n          />\n        ) : (\n          <Feedback title=\"Vote Failed\" status=\"error\" />\n        )}\n      </Box>\n    );\n  }\n  return (\n    <Box\n      w=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-around\"\n    >\n      <Feedback title=\"Voting\" status=\"info\" />\n\n      <Box display=\"flex\" justifyContent=\"space-around\" my=\"5\">\n        <Button\n          size=\"lg\"\n          backgroundColor=\"green.600\"\n          onClick={() => handelVote(2)}\n        >\n          Yes\n        </Button>\n\n        <Popover\n          returnFocusOnClose={false}\n          isOpen={isOpen}\n          onClose={close}\n          placement=\"right\"\n          closeOnBlur={false}\n        >\n          <PopoverTrigger>\n            <Button size=\"lg\" backgroundColor=\"red.600\" onClick={() => open()}>\n              No\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent>\n            <PopoverHeader fontWeight=\"semibold\">Confirmation</PopoverHeader>\n            <PopoverArrow />\n            <PopoverCloseButton />\n            <PopoverBody>Are you sure you want vote No?</PopoverBody>\n            <PopoverFooter d=\"flex\" justifyContent=\"flex-end\">\n              <ButtonGroup size=\"sm\">\n                <Button variant=\"outline\" onClick={close}>\n                  Cancel\n                </Button>\n                <Button colorScheme=\"red\" onClick={() => handelVote(1)}>\n                  Vote No\n                </Button>\n              </ButtonGroup>\n            </PopoverFooter>\n          </PopoverContent>\n        </Popover>\n      </Box>\n    </Box>\n  );\n};\nconst Vote = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isConfirmed, setisConfirmed] = useState(false);\n  const { urlsignature } = useParams();\n  const service = anonymousManager();\n  useEffect(() => {\n    service\n      .VoteEligibility({ urlsignature })\n      .then(req => {\n        setIsLoading(false);\n        setisConfirmed(true);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        setisConfirmed(false);\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (isLoading) return <Loading message=\"Loading ...\" />;\n  return (\n    <Box h=\"100%\">\n      <Center m=\"auto\" h=\"100%\" w=\"35%\">\n        {isConfirmed ? (\n          <VoteHolder urlsignature={urlsignature} />\n        ) : (\n          <Feedback title=\"Failed\" status=\"error\" />\n        )}\n      </Center>\n    </Box>\n  );\n};\n\nexport default Vote;\n","import {\n  Box,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  Center,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport Loading from '../Componets/Loading';\nimport { useParams } from 'react-router-dom';\nimport { anonymousManager } from '../services';\nimport { Player } from 'video-react';\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport 'video-react/dist/video-react.css';\nconst Feedback = ({ status = 'success', title, message }) => {\n  return (\n    <Alert\n      status={status}\n      variant=\"subtle\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      height=\"250px\"\n    >\n      <AlertIcon boxSize=\"40px\" mr={0} />\n      <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n        {title}\n      </AlertTitle>\n      <AlertDescription maxWidth=\"sm\">{message}</AlertDescription>\n    </Alert>\n  );\n};\nconst MediaViewer = ({ data }) => {\n  if (!data) return <Loading message=\"Loading ...\" />;\n  const media_type = data.media_type;\n  const file = data.file;\n  return (\n    <>\n      {media_type === 'AUDIO' ? (\n        <>\n          <AudioPlayer\n            style={{ backgroundColor: '#191f28' }}\n            src={file}\n            customAdditionalControls={[]}\n          />\n        </>\n      ) : (\n        <Player\n          src={file}\n          playsInline\n          autoPlay\n          preload=\"metadata\"\n          fluid={false}\n        ></Player>\n      )}\n    </>\n  );\n};\nconst Post = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isConfirmed, setisConfirmed] = useState(false);\n  const { urlsignature } = useParams();\n  const [data, setData] = useState(null);\n  const service = anonymousManager();\n  useEffect(() => {\n    service\n      .post({ urlsignature })\n      .then(req => {\n        setIsLoading(false);\n        setisConfirmed(true);\n        const { data } = req;\n\n        setData(data);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        setisConfirmed(false);\n      });\n    setIsLoading(false);\n    setisConfirmed(true);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (isLoading) return <Loading message=\"Loading ...\" />;\n  return (\n    <Box h=\"100%\">\n      <Center m=\"auto\" h=\"80%\" w=\"70%\" padding=\"5\">\n        {isConfirmed ? (\n          <MediaViewer data={data} />\n        ) : (\n          <Feedback title=\"Failed\" status=\"error\" />\n        )}\n      </Center>\n    </Box>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport './App.css';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport theme from './thems';\nimport RestoreAccount from './pages/RestoreAccount/RestoreAccount';\nimport LoadingInfo from './pages/LoadingInfo';\nimport Profile from './pages/Profile';\nimport ConfirmAuth from './pages/ConfirmAuth';\nimport Contacts from './pages/Contacts';\nimport Verifyemail from './pages/Verifyemail';\nimport NewPassword from './pages/RestoreAccount/NewPassword';\nimport ResendEmail from './pages/ResendEmail';\nimport LandingPage from './pages';\nimport ConfirmExistence from './pages/ConfirmExistence';\nimport Vote from './pages/Vote';\nimport Post from './pages/Post';\nfunction App() {\n  return (\n    <Router>\n      <ChakraProvider theme={theme}>\n        <Switch>\n          {/* <Route exact path=\"/\" component={L}/> */}\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/contacts\" component={Contacts} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/loading\" component={LoadingInfo} />\n          <Route path=\"/verify-email/:key\" component={Verifyemail} />\n          <Route path=\"/resend-email/\" component={ResendEmail} />\n          <Route path=\"/confirmation/:urlsignature\" component={ConfirmExistence} />\n          <Route path=\"/post/:urlsignature\" component={Post} />\n          <Route path=\"/vote/:urlsignature\" component={Vote} />\n          <Route\n            path=\"/password-reset/confirm/:uid/:token/\"\n            component={NewPassword}\n          />\n          <Route path=\"/auth/confirm/:uid/:token/\" component={ConfirmAuth} />\n          <Route path=\"/restore\" component={RestoreAccount} />\n          {/* <PrivateRoute path=\"/home\" component={Home}/> */}\n          <Route path=\"/\" exact component={LandingPage} />\n          <Route component={NotFound} />\n        </Switch>\n      </ChakraProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}